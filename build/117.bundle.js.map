{"version":3,"file":"117.bundle.js","mappings":"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","sources":["webpack://user-dashboard/./src/components/form/Input.tsx","webpack://user-dashboard/./src/components/routerPrompt.tsx","webpack://user-dashboard/./src/components/svgs/blocks.tsx","webpack://user-dashboard/./src/components/svgs/check1.tsx","webpack://user-dashboard/./src/components/svgs/download.tsx","webpack://user-dashboard/./src/components/svgs/verticalLine.tsx","webpack://user-dashboard/./src/components/ui/DropButton.tsx","webpack://user-dashboard/./src/components/ui/headerStepper.tsx","webpack://user-dashboard/./src/components/ui/tempFormSekleton.tsx","webpack://user-dashboard/./src/helpers/axiosRequest.ts","webpack://user-dashboard/./src/hooks/useExitPromt.ts","webpack://user-dashboard/./src/helpers/onbeforeunloadEvent.ts","webpack://user-dashboard/./src/styled/form.ts","webpack://user-dashboard/./src/public/logo/resume-mango-full-logo.png"],"sourcesContent":["import React, { Fragment } from 'react'\nimport { useFormContext } from 'react-hook-form'\nimport { InvalidFeedBack } from '../../styled/form'\n\ninterface IInput {\n  name: string\n  label?: string\n  className?: string\n  style?: React.CSSProperties\n  isFieldArray?: boolean\n  hideError?: boolean\n}\n\nconst Input: React.FC<\n  IInput &\n    React.DetailedHTMLProps<\n      React.InputHTMLAttributes<HTMLInputElement>,\n      HTMLInputElement\n    >\n> = ({ name, label, isFieldArray, className, style, hideError, ...props }) => {\n  const {\n    register,\n    formState: { errors },\n  } = useFormContext()\n\n  let errMsg = null\n  if (isFieldArray && !hideError) {\n    const Errname = name.split('.')\n    const getKeyVal = (selectionArray: Array<any>, obj: any) => {\n      if (Object.keys(obj).length > 0) {\n        selectionArray.forEach((key) => {\n          if (!obj || !obj[key]) obj = null\n          else obj = obj[key]\n        })\n      }\n      const msg = obj && typeof obj === 'string' && obj.split('.')[1]\n      return msg ? msg : obj\n    }\n    errMsg =\n      Errname.length === 3 &&\n      Object.keys(errors).length > 0 &&\n      errors[Errname[0]]\n        ? getKeyVal([Errname[1], Errname[2], 'message'], errors[Errname[0]])\n        : null\n  }\n\n  return (\n    <Fragment>\n      <div className={className} style={style}>\n        {label && <label htmlFor={name}>{label}</label>}\n        <input\n          className={`form-control ${(errors[name] || errMsg) && 'is-invalid'}`}\n          {...register(name)}\n          {...props}\n        />\n        {errors[name] && !hideError && (\n          <InvalidFeedBack className=\"invalid-feild\">\n            {errors[name].message}\n          </InvalidFeedBack>\n        )}\n        {errMsg && !hideError && (\n          <InvalidFeedBack className=\"invalid-feild\">{errMsg}</InvalidFeedBack>\n        )}\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Input\n","import React, { useCallback, useEffect, useRef, useState } from 'react'\nimport { useHistory } from 'react-router'\nimport styled from 'styled-components'\nimport { Button } from '../styled/button'\nimport CrossIcon from './svgs/cross'\n\ninterface IProps {\n  show: boolean\n  setShow: (_val: boolean) => void\n  exludedPaths?: Array<string>\n}\n\nconst RouterPrompt: React.FC<IProps> = ({ show, setShow, exludedPaths }) => {\n  const history = useHistory()\n  const [showPrompt, setShowPrompt] = useState(false)\n  const [currentPath, setCurrentPath] = useState('')\n  const [confirmedNavigation, setConfirmedNavigation] = useState(false)\n\n  const unblockRef = useRef<any>()\n\n  const handleShowModal = () => {\n    setShowPrompt(true)\n  }\n\n  const onCancel = () => {\n    setShowPrompt(false)\n  }\n\n  useEffect(() => {\n    unblockRef.current = history.block((location) => {\n      if (show) {\n        if (\n          exludedPaths &&\n          exludedPaths?.length > 0 &&\n          exludedPaths.includes(location.pathname)\n        )\n          return\n        setCurrentPath(location.pathname)\n        handleShowModal()\n        return false\n      }\n    })\n\n    return () => {\n      unblockRef.current && unblockRef.current()\n    }\n  }, [show])\n\n  useEffect(() => {\n    if (confirmedNavigation && currentPath) {\n      history.push(currentPath)\n      // Clean-up state on confirmed navigation\n      setConfirmedNavigation(false)\n    }\n  }, [confirmedNavigation, currentPath])\n\n  const handleConfirm = useCallback(() => {\n    setShow(false)\n    if (unblockRef) {\n      unblockRef.current()\n    }\n    setShowPrompt(false)\n    setConfirmedNavigation(true)\n  }, [])\n\n  return showPrompt ? (\n    <Wrapper className=\"prompt-wrapper\">\n      <Box>\n        <CloseBtn onClick={onCancel}>\n          <CrossIcon />\n        </CloseBtn>\n        <h3>Are you sure?</h3>\n        <p>\n          You haven&apos;t saved your changes, if you exit your changes will be\n          lost\n        </p>\n        <ChildWrapper>\n          <Button onClick={handleConfirm} btnType=\"ghost\" size=\"lg\">\n            Ok\n          </Button>\n          <Button onClick={onCancel} btnType=\"primary\" size=\"lg\">\n            Cancel\n          </Button>\n        </ChildWrapper>\n      </Box>\n    </Wrapper>\n  ) : null\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  z-index: 1000;\n  top: 0;\n  left: 0;\n  background-color: ${({ theme }) => theme.shades.dark[3]};\n`\n\nconst Box = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-width: 450px;\n  height: auto;\n  width: 100%;\n  padding: 1.5rem;\n  border: 1px solid rgb(237 237 237 / 20%);\n  border-radius: 6px;\n  background-color: #fff;\n\n  h3 {\n    text-align: center;\n    margin: 1.5rem 0 0;\n  }\n  p {\n    text-align: center;\n    font-size: 1rem;\n    margin-bottom: 2rem;\n  }\n`\n\nconst ChildWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  width: 100%;\n  margin-left: auto;\n`\n\nconst CloseBtn = styled.div`\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: 0;\n  right: 0;\n  cursor: pointer;\n  &:hover {\n    svg {\n      path {\n        stroke: ${({ theme }) => theme.colors.primary};\n      }\n    }\n  }\n`\n\nexport default RouterPrompt\n","import React, { Fragment } from 'react'\ninterface IconProps {\n  size?: string\n  color?: string\n  className?: string\n}\nconst BlocksIcon = ({ size, color, className }: IconProps) => {\n  return (\n    <Fragment>\n      <svg\n        width={size || '1rem'}\n        className={className || ''}\n        height={size || '1rem'}\n        viewBox='0 0 19 19'\n        fill='none'\n        xmlns='http://www.w3.org/2000/svg'\n      >\n        <path\n          d='M18 1H1V7.61111H18V1Z'\n          stroke={color || '#898989'}\n          strokeWidth='1.2'\n          strokeLinecap='round'\n          strokeLinejoin='round'\n        />\n        <path\n          d='M17.9996 11.3887H13.2773V17.9998H17.9996V11.3887Z'\n          stroke={color || '#898989'}\n          strokeWidth='1.2'\n          strokeLinecap='round'\n          strokeLinejoin='round'\n        />\n        <path\n          d='M9.5 11.3887H1V17.9998H9.5V11.3887Z'\n          stroke={color || '#898989'}\n          strokeWidth='1.2'\n          strokeLinecap='round'\n          strokeLinejoin='round'\n        />\n      </svg>\n    </Fragment>\n  )\n}\n\nexport default BlocksIcon\n","import React, { Fragment } from 'react'\ninterface IconProps {\n  size?: string\n  color?: string\n  className?: string\n}\nconst CheckIcon1 = ({ size, color, className }: IconProps) => {\n  return (\n    <Fragment>\n      <svg\n        xmlns='http://www.w3.org/2000/svg'\n        viewBox='0 0 22 22'\n        width={size || '1rem'}\n        className={className || ''}\n        height={size || '1rem'}\n      >\n        <circle cx='11' cy='11' r='11' fill={color || '#898989'} />\n        <path\n          d='M5.89453 10.6357L9.63735 14.3098L16.3064 7.46828'\n          stroke='white'\n          fill='none'\n        />\n      </svg>\n    </Fragment>\n  )\n}\n\nexport default CheckIcon1\n","import React, { Fragment } from 'react'\ninterface IconProps {\n  size?: string\n  color?: string\n  className?: string\n}\nconst DownloadIcon = ({ size, color, className }: IconProps) => {\n  return (\n    <Fragment>\n      <svg\n        width={size || '1rem'}\n        height={size || '1rem'}\n        className={className || ''}\n        viewBox='0 0 16 16'\n        fill='none'\n        xmlns='http://www.w3.org/2000/svg'\n      >\n        <path\n          d='M14.75 10.25V13.25C14.75 13.6478 14.592 14.0294 14.3107 14.3107C14.0294 14.592 13.6478 14.75 13.25 14.75H2.75C2.35218 14.75 1.97064 14.592 1.68934 14.3107C1.40804 14.0294 1.25 13.6478 1.25 13.25V10.25'\n          stroke={color || '#898989'}\n          strokeWidth='1.6'\n          strokeLinecap='round'\n          strokeLinejoin='round'\n        />\n        <path\n          d='M4.25 6.5L8 10.25L11.75 6.5'\n          stroke={color || '#898989'}\n          strokeWidth='1.6'\n          strokeLinecap='round'\n          strokeLinejoin='round'\n        />\n        <path\n          d='M8 10.25V1.25'\n          stroke={color || '#898989'}\n          strokeWidth='1.6'\n          strokeLinecap='round'\n          strokeLinejoin='round'\n        />\n      </svg>\n    </Fragment>\n  )\n}\n\nexport default DownloadIcon\n","import React, { Fragment } from 'react'\ninterface IconProps {\n  size?: string\n  color?: string\n  className?: string\n}\nconst VerticalLineIcon = ({ size, color, className }: IconProps) => {\n  return (\n    <Fragment>\n      <svg\n        width={size || '1rem'}\n        className={className || ''}\n        height={size || '1rem'}\n        viewBox='0 0 1 28'\n        fill='none'\n        xmlns='http://www.w3.org/2000/svg'\n      >\n        <path d='M0.5 0V27.5' stroke={color || '#898989'} />\n      </svg>\n    </Fragment>\n  )\n}\n\nexport default VerticalLineIcon\n","import React, { Fragment, ReactNode, useEffect, useRef } from 'react'\nimport styled from 'styled-components'\n\ninterface IDropdownButton {\n  vertical: 'top' | 'bottom'\n  horizontal: 'left' | 'right'\n  btnStyle?: React.CSSProperties | undefined\n  children: ReactNode\n  show: boolean\n  setShow: (val: boolean) => void\n  onClick?: (e?: React.MouseEvent<HTMLButtonElement, MouseEvent>) => any\n  className?: string\n  disabled?: boolean\n}\n\nconst DropButton = ({\n  vertical,\n  horizontal,\n  btnStyle,\n  children,\n  show,\n  setShow,\n  onClick,\n  className,\n  disabled,\n}: IDropdownButton) => {\n  const ref = useRef<HTMLDivElement>(null)\n\n  const handleClickOutside = (e: any) => {\n    if (ref && ref.current && !ref.current.contains(e.target)) {\n      setShow(false)\n    }\n  }\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault()\n    setShow(!show)\n    if (!onClick) return\n    onClick(e)\n  }\n\n  useEffect(() => {\n    if (!ref) return\n    document.addEventListener('mousedown', handleClickOutside, true)\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside, true)\n    }\n  })\n\n  const horizontalCss = horizontal === 'left' ? { right: 0 } : { left: 0 }\n  const verticalCss = vertical === 'top' ? { bottom: '100%' } : { top: '100%' }\n\n  const items = React.Children.map(children, (child: any) => {\n    if (child.type && child.type === Item) {\n      return child\n    }\n  })\n  return (\n    <Fragment>\n      <Wrapper ref={ref} className={className} data-test-id=\"dropdown-wrapper\">\n        {show && (\n          <Popper style={{ ...horizontalCss, ...verticalCss }}>{items}</Popper>\n        )}\n        {React.Children.map(children, (child: any) => {\n          if (child.type === Button) {\n            return (\n              <StyledButton\n                disabled={disabled}\n                style={{ ...btnStyle }}\n                onClick={(e) => handleClick(e)}\n              >\n                {child}\n              </StyledButton>\n            )\n          }\n        })}\n      </Wrapper>\n    </Fragment>\n  )\n}\n\nconst Button = ({ children }: { children: ReactNode }) => {\n  return <Fragment>{children}</Fragment>\n}\n\nconst Item = ({ children }: { children: ReactNode }) => {\n  return <StyledItem>{children}</StyledItem>\n}\n\nDropButton.Button = Button\nDropButton.Item = Item\n\nexport default DropButton\n\nconst StyledButton = styled.button`\n  display: flex;\n  align-items: center;\n  background-color: transparent;\n  height: auto;\n  padding: 0.3rem;\n  width: 100%;\n  user-select: none;\n  * {\n    pointer-events: none;\n  }\n`\nconst Wrapper = styled.div`\n  display: block;\n  position: relative;\n  width: fit-content;\n  user-select: none;\n`\nconst Popper = styled.ul`\n  background: #ffffff;\n  border: 1px solid rgba(2, 52, 126, 0.12);\n  box-shadow: -2px 4px 7px rgba(0, 50, 97, 0.08);\n  border-radius: 4px;\n  padding: 0.5rem 0;\n  margin: 0.3rem 0;\n  display: inline-flex;\n  flex-direction: column;\n  position: absolute;\n  z-index: 10;\n  width: 100%;\n  min-width: 75px;\n  cursor: default;\n`\n\nconst StyledItem = styled.li`\n  width: 100%;\n  padding: 0;\n  margin: 0;\n  a {\n    display: block;\n    font-size: ${({ theme }) => theme.fonts.small};\n    padding: 0.3rem 0.5rem;\n    transition: all 300ms ease-in-out;\n    &:hover {\n      background-color: ${({ theme }) => theme.colors.light};\n    }\n  }\n  @media (max-width: 1300px) {\n    a {\n      font-size: 0.8rem;\n    }\n  }\n`\n","import React, {\n  Children,\n  cloneElement,\n  Fragment,\n  isValidElement,\n  ReactElement,\n  ReactNode,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\nimport { NavLink, useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useViewport } from '../../contexts/viewPort'\nimport logolg from '../../public/logo/resume-mango-full-logo.png'\nimport logosm from '../../public/logo/resume-mango-logo.png'\nimport CheckIcon1 from '../svgs/check1'\nimport CrossIcon from '../svgs/cross'\nimport WarningIcon from '../svgs/warning'\n\ninterface IStepper {\n  current: number\n  max: number\n  backRoute: string\n  children: ReactNode\n}\n\ninterface IStep {\n  name: string\n  isValid: boolean\n  isError: boolean\n  current?: number\n  max?: number\n  index?: number\n  backRoute?: string\n  onClick: () => void\n}\n\nconst HeaderStepper = ({ current, max, backRoute, children }: IStepper) => {\n  const [width, setWidth] = useState(0)\n  const ref = useRef<any>(null)\n\n  const childrenWithProps = Children.map(children, (child, i) => {\n    if (isValidElement(child)) {\n      return cloneElement(child as ReactElement, {\n        backRoute,\n        current: current,\n        index: i + 1,\n        max: max,\n      })\n    }\n    return child\n  })\n\n  useEffect(() => {\n    if (\n      ref &&\n      ref.current &&\n      current > 0 &&\n      current <= ref.current.children.length\n    ) {\n      const stepEls = ref.current.querySelectorAll('.step')\n      const currEl = stepEls[current - 1]\n      const rect = currEl.getBoundingClientRect()\n      const elWidth =\n        current === stepEls.length\n          ? ref.current.parentElement.clientWidth\n          : rect.left + rect.width\n\n      setWidth(elWidth)\n    }\n  }, [ref, current])\n\n  return (\n    <Fragment>\n      <Wrapper>\n        <Header>\n          <Stepper max={max} ref={ref}>\n            {childrenWithProps}\n          </Stepper>\n        </Header>\n        <Progress>\n          <span style={{ width: `${width}px` }} />\n        </Progress>\n      </Wrapper>\n    </Fragment>\n  )\n}\n\nconst Step: React.FC<IStep> = ({\n  name,\n  isValid,\n  isError,\n  current,\n  max,\n  index,\n  backRoute,\n  onClick,\n}) => {\n  const history = useHistory()\n  const { width } = useViewport()\n  const size = width < 1000 ? 1 : width < 1300 ? 1.2 : 1.4\n  return (\n    <StepWrapper active={index && current ? index <= current : false}>\n      {index === 1 && (\n        <NavLink to=\"/\">\n          <LogoWrapper>\n            <img src={width > 1200 ? logolg : logosm} alt=\"resume-mango\" />\n          </LogoWrapper>\n        </NavLink>\n      )}\n      <StepItem className=\"step\">\n        <div\n          onClick={onClick}\n          style={{ cursor: 'pointer', userSelect: 'none' }}\n        >\n          <p>\n            Step {index} of {max}\n          </p>\n          <h2>\n            {name}\n            <Fragment>\n              {isError && (\n                <span>\n                  <WarningIcon\n                    size={`${size}rem`}\n                    color=\"rgba(244, 67, 54, 1)\"\n                  />\n                </span>\n              )}\n            </Fragment>\n            {index && current && index <= current && (\n              <Fragment>\n                {isValid ? (\n                  <span>\n                    <CheckIcon1\n                      size={`${size}rem`}\n                      color=\"rgba(32, 192, 50, 1)\"\n                    />\n                  </span>\n                ) : null}\n              </Fragment>\n            )}\n          </h2>\n        </div>\n      </StepItem>\n      {index === max && (\n        <CloseWrapper\n          data-test-id=\"close-builder\"\n          onClick={() =>\n            backRoute ? history.push(backRoute) : history.goBack()\n          }\n        >\n          <CrossIcon size=\"1.2rem\" />\n        </CloseWrapper>\n      )}\n    </StepWrapper>\n  )\n}\n\nHeaderStepper.Step = Step\n\nexport default HeaderStepper\n\nconst LogoWrapper = styled.div`\n  cursor: pointer;\n  user-select: none;\n  width: fit-content;\n  height: fit-content;\n  @media (max-width: 1300px) {\n    width: 175px;\n    img {\n      width: 100%;\n    }\n  }\n  @media (max-width: 1200px) {\n    display: flex;\n    align-items: center;\n    width: 57px;\n  }\n`\nconst CloseWrapper = styled.div`\n  cursor: pointer;\n  user-select: none;\n  display: flex;\n  align-items: center;\n  width: 50px;\n  height: auto;\n  svg {\n    margin: auto;\n  }\n  &:hover {\n    svg {\n      path {\n        stroke: ${({ theme }) => theme.colors.primary};\n      }\n    }\n  }\n`\n\nconst Wrapper = styled.div`\n  background: rgba(22, 22, 22, 0.02);\n  position: relative;\n  z-index: 10;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  &::before {\n    content: '';\n    display: block;\n    background-color: #fff;\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    left: 0;\n    margin: auto;\n    z-index: -1;\n  }\n`\n\nconst Stepper = styled.div<{ max: number }>`\n  display: grid;\n  grid-template-columns: ${({ max }) => `repeat(${max || 1}, 1fr)`};\n  align-items: center;\n  width: 100%;\n  justify-items: center;\n`\nconst Header = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  justify-content: space-between;\n  padding: 1.25rem 0.7rem;\n`\n\nconst Progress = styled.div`\n  width: 100%;\n  display: block;\n  background-color: rgba(196, 196, 196, 0.4);\n  height: 10px;\n  span {\n    display: block;\n    height: 100%;\n    background-color: ${({ theme }) => theme.colors.success};\n    transition: 1s ease;\n    transition-delay: 0.5s;\n  }\n`\n\nconst StepItem = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n`\n\nconst StepWrapper = styled.div<{ active: boolean }>`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  position: relative;\n  p {\n    font-weight: bold;\n    margin: 0;\n    color: #878787;\n  }\n  h2 {\n    display: flex;\n    align-items: center;\n    width: fit-content;\n    font-size: 1.5rem;\n    margin: 0;\n    opacity: ${({ active }) => (active ? 1 : 0.34)};\n    span {\n      margin-left: 0.7rem;\n      display: inline-flex;\n    }\n  }\n\n  @media (max-width: 1300px) {\n    h2 {\n      font-size: 1.2rem;\n    }\n  }\n  @media (max-width: 1000px) {\n    p {\n      font-size: 0.8rem;\n    }\n    h2 {\n      font-size: 0.875rem;\n    }\n  }\n`\n","import React, { Fragment } from 'react'\nimport styled from 'styled-components'\nimport {\n  SK_Form_Input,\n  SK_Form_Label,\n  SK_Heading,\n  SK_Text,\n  SK_Thumbnail,\n  SK_Wrapper\n} from '../../styled/loader'\n\nconst TemplateFormSekleton = () => {\n  return (\n    <Fragment>\n      <LHSLoader>\n        <SK_Wrapper>\n          <Grid className='mb-3'>\n            <div>\n              <SK_Heading />\n              <SK_Text width='95%' />\n              <SK_Text width='75%' />\n            </div>\n            <SK_Thumbnail />\n          </Grid>\n          <Grid>\n            <div>\n              <SK_Form_Label />\n              <SK_Form_Input />\n            </div>\n            <div>\n              <SK_Form_Label />\n              <SK_Form_Input />\n            </div>\n            <div>\n              <SK_Form_Label />\n              <SK_Form_Input />\n            </div>\n            <div>\n              <SK_Form_Label />\n              <SK_Form_Input />\n            </div>\n            <div>\n              <SK_Form_Label />\n              <SK_Form_Input />\n            </div>\n            <div>\n              <SK_Form_Label />\n              <SK_Form_Input />\n            </div>\n          </Grid>\n        </SK_Wrapper>\n      </LHSLoader>\n    </Fragment>\n  )\n}\n\nexport default TemplateFormSekleton\n\nconst LHSLoader = styled.div`\n  padding: 2.75rem;\n  max-width: 900px;\n  margin: auto;\n`\nconst Grid = styled.div<{ columns?: string }>`\n  display: grid;\n  grid-template-columns: ${({ columns }) =>\n    columns ? columns : 'repeat(2, 1fr)'};\n  grid-gap: 2rem;\n  margin-top: 1.5rem;\n  align-items: center;\n  ${SK_Thumbnail} {\n    width: 100px;\n    height: 100px;\n  }\n  ${SK_Heading} {\n    margin-bottom: 1.7rem;\n  }\n  ${SK_Text} {\n    margin-bottom: 0.8rem;\n  }\n  ${SK_Form_Label} {\n    margin-bottom: 0.5rem;\n  }\n`\n","import axios, { AxiosResponse } from 'axios'\n/**\n * Axios api request helper\n * @param options axios request options\n * @returns data | error\n */\nconst axiosRequest = async (\n  options: any\n): Promise<{ data: any; error: any }> => {\n  let data: any = ''\n  let error: any = ''\n  try {\n    const { data: res }: AxiosResponse<any> = await axios.request(options)\n    data = res || ''\n  } catch (err: any) {\n    error =\n      (err.response && err.response.data && err.response.data.error.message) ||\n      'Something went wrong!'\n  }\n\n  return { data, error }\n}\n\nexport default axiosRequest\n","import { useState, useEffect } from 'react'\nimport { onbeforeunloadEvent } from '../helpers/onbeforeunloadEvent'\n\n/**\n * Hook to detect route changes and promt user\n * @param bool should promt user ?\n * @returns '{ showExitPrompt, setShowExitPrompt }'\n */\nexport default function useExitPrompt(bool: boolean) {\n  const [showExitPrompt, setShowExitPrompt] = useState(bool)\n\n  const initBeforeUnLoad = (showExitPrompt: boolean) => {\n    Object.defineProperty(window, 'onbeforeunload', (event: any) =>\n      onbeforeunloadEvent(event, showExitPrompt)\n    )\n  }\n\n  Object.defineProperty(window, 'onload', () => {\n    initBeforeUnLoad(showExitPrompt)\n  })\n\n  useEffect(() => {\n    initBeforeUnLoad(showExitPrompt)\n  }, [showExitPrompt])\n\n  return { showExitPrompt, setShowExitPrompt }\n}\n","/**\n * customizes window.onbeforeunload event\n * @param event onbeforeunloadEvent\n * @param showExitPrompt state\n * @returns void\n */\nexport const onbeforeunloadEvent = (event: any, showExitPrompt: boolean) => {\n  if (showExitPrompt) {\n    const e = event || window.event\n\n    e.preventDefault()\n    if (e) {\n      e.returnValue = ''\n    }\n    return ''\n  }\n}\n","import styled from 'styled-components'\n\nexport const GridForm = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 1.5rem;\n  margin: 1.5rem 0;\n  width: 100%;\n\n  @media (max-width: 480px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`\nexport const FormWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  margin-bottom: 3rem;\n`\nexport const FormButtonWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n`\nexport const InvalidFeedBack = styled.div`\n  font-size: 0.8rem;\n  color: ${({ theme }) => theme.colors.danger};\n`\n","export default __webpack_public_path__ + \"images/resume-mango-full-logo.png\";"],"names":["selectionArray","obj","name","label","isFieldArray","className","style","hideError","props","useFormContext","register","errors","formState","errMsg","Errname","split","length","Object","keys","forEach","key","Fragment","htmlFor","message","Wrapper","styled","theme","shades","dark","Box","ChildWrapper","CloseBtn","colors","primary","show","setShow","exludedPaths","history","useHistory","useState","showPrompt","setShowPrompt","currentPath","setCurrentPath","confirmedNavigation","setConfirmedNavigation","unblockRef","useRef","onCancel","useEffect","current","block","location","includes","pathname","push","handleConfirm","useCallback","onClick","btnType","size","color","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","DropButton","vertical","horizontal","btnStyle","children","disabled","ref","handleClickOutside","e","contains","target","document","addEventListener","removeEventListener","horizontalCss","right","left","verticalCss","bottom","top","items","React","child","type","Item","Popper","Button","StyledButton","preventDefault","handleClick","StyledItem","fonts","small","light","HeaderStepper","max","backRoute","setWidth","childrenWithProps","Children","i","isValidElement","cloneElement","index","stepEls","querySelectorAll","rect","getBoundingClientRect","elWidth","parentElement","clientWidth","Header","Stepper","Progress","Step","isValid","isError","useViewport","StepWrapper","active","to","LogoWrapper","src","logolg","logosm","alt","StepItem","cursor","userSelect","CloseWrapper","goBack","success","LHSLoader","Grid","columns","SK_Thumbnail","SK_Heading","SK_Text","SK_Form_Label","options","data","error","axios","res","response","useExitPrompt","bool","showExitPrompt","setShowExitPrompt","initBeforeUnLoad","defineProperty","window","event","returnValue","onbeforeunloadEvent","GridForm","FormWrapper","FormButtonWrapper","InvalidFeedBack","danger"],"sourceRoot":""}