{"version":3,"file":"810.bundle.js","mappings":"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","sources":["webpack://user-dashboard/./src/components/svgs/check1.tsx","webpack://user-dashboard/./src/components/svgs/dustbin.tsx","webpack://user-dashboard/./src/components/svgs/pen.tsx","webpack://user-dashboard/./src/components/ui/confirmation.tsx","webpack://user-dashboard/./src/components/ui/dashPageHeader.tsx","webpack://user-dashboard/./src/components/ui/subNavbar.tsx","webpack://user-dashboard/./src/hooks/getQueryAdvance.ts","webpack://user-dashboard/./src/contexts/progressTracker.tsx","webpack://user-dashboard/./src/queries/progressTrackerQueries.ts","webpack://user-dashboard/./src/pages/progress-tracker/listItem.tsx","webpack://user-dashboard/./src/pages/progress-tracker/drag-element.tsx","webpack://user-dashboard/./src/validations/progress_tracker.ts","webpack://user-dashboard/./src/pages/progress-tracker/TaskModal.tsx","webpack://user-dashboard/./src/pages/progress-tracker/index.tsx","webpack://user-dashboard/./src/styled/pages.ts"],"sourcesContent":["import React, { Fragment } from 'react'\ninterface IconProps {\n  size?: string\n  color?: string\n  className?: string\n}\nconst CheckIcon1 = ({ size, color, className }: IconProps) => {\n  return (\n    <Fragment>\n      <svg\n        xmlns='http://www.w3.org/2000/svg'\n        viewBox='0 0 22 22'\n        width={size || '1rem'}\n        className={className || ''}\n        height={size || '1rem'}\n      >\n        <circle cx='11' cy='11' r='11' fill={color || '#898989'} />\n        <path\n          d='M5.89453 10.6357L9.63735 14.3098L16.3064 7.46828'\n          stroke='white'\n          fill='none'\n        />\n      </svg>\n    </Fragment>\n  )\n}\n\nexport default CheckIcon1\n","import React, { Fragment } from 'react'\ninterface IconProps {\n  size?: string\n  color?: string\n  className?: string\n}\nconst DustBinIcon = ({ size, color, className }: IconProps) => {\n  return (\n    <Fragment>\n      <svg\n        width={size || '1rem'}\n        height={size || '1rem'}\n        className={className || ''}\n        viewBox='0 0 19 19'\n        fill='none'\n        xmlns='http://www.w3.org/2000/svg'\n      >\n        <path\n          d='M6.08594 2.13281H5.90625C6.00508 2.13281 6.08594 2.05195 6.08594 1.95312V2.13281H12.9141V1.95312C12.9141 2.05195 12.9949 2.13281 13.0938 2.13281H12.9141V3.75H14.5312V1.95312C14.5312 1.16025 13.8866 0.515625 13.0938 0.515625H5.90625C5.11338 0.515625 4.46875 1.16025 4.46875 1.95312V3.75H6.08594V2.13281ZM17.4062 3.75H1.59375C1.19619 3.75 0.875 4.07119 0.875 4.46875V5.1875C0.875 5.28633 0.955859 5.36719 1.05469 5.36719H2.41133L2.96611 17.1143C3.00205 17.8802 3.63545 18.4844 4.40137 18.4844H14.5986C15.3668 18.4844 15.9979 17.8824 16.0339 17.1143L16.5887 5.36719H17.9453C18.0441 5.36719 18.125 5.28633 18.125 5.1875V4.46875C18.125 4.07119 17.8038 3.75 17.4062 3.75ZM14.4257 16.8672H4.57432L4.03076 5.36719H14.9692L14.4257 16.8672Z'\n          fill={color || '#898989'}\n        />\n      </svg>\n    </Fragment>\n  )\n}\n\nexport default DustBinIcon\n","import React, { Fragment } from 'react'\ninterface IconProps {\n  size?: string\n  color?: string\n  className?: string\n}\nconst PenIcon = ({ size, color, className }: IconProps) => {\n  return (\n    <Fragment>\n      <svg\n        width={size || '1rem'}\n        height={size || '1rem'}\n        className={className || ''}\n        viewBox='0 0 24 24'\n        fill={color || '#898989'}\n        xmlns='http://www.w3.org/2000/svg'\n      >\n        <path d='M20.41 4.94l-1.35-1.35c-.78-.78-2.05-.78-2.83 0L3 16.82V21h4.18L20.41 7.77c.79-.78.79-2.05 0-2.83zm-14 14.12L5 19v-1.36l9.82-9.82 1.41 1.41-9.82 9.83z'></path>\n      </svg>\n    </Fragment>\n  )\n}\n\nexport default PenIcon\n","import React, { Fragment, ReactNode } from 'react'\nimport styled, { DefaultTheme, withTheme } from 'styled-components'\nimport WarningIcon from '../svgs/warning'\n\ninterface IProps {\n  theme: DefaultTheme\n  show: boolean\n  title: string\n  msg: string\n  children: ReactNode\n}\n\nconst ConfirmationBox: React.FC<IProps> = ({\n  theme,\n  show,\n  msg,\n  title,\n  children,\n}) => {\n  return (\n    <Fragment>\n      {show && (\n        <Wrapper className=\"confirmation-box\">\n          <Box>\n            <WarningIcon size=\"100px\" color={theme.colors.primary} />\n            <h2>{title}</h2>\n            <p>{msg}</p>\n            <ChildWrapper> {children}</ChildWrapper>\n          </Box>\n        </Wrapper>\n      )}\n    </Fragment>\n  )\n}\n\nexport default withTheme(ConfirmationBox)\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  z-index: 1000;\n  top: 0;\n  left: 0;\n  background-color: ${({ theme }) => theme.shades.dark[3]};\n`\n\nconst Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center !important;\n  align-items: center;\n  max-width: 500px;\n  max-height: 400px;\n  height: 100%;\n  width: 100%;\n  padding: 2rem;\n  border: 1px solid rgb(237 237 237 / 20%);\n  border-radius: 1rem;\n  background-color: #fff;\n\n  h2,\n  p {\n    text-align: center;\n    margin: 0 0 1rem;\n  }\n  p {\n    font-size: 1.2rem;\n    margin-bottom: 2rem;\n  }\n  svg {\n    margin-bottom: 2rem;\n  }\n`\n\nconst ChildWrapper = styled.div`\n  display: grid;\n  align-items: center;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 2rem;\n`\n","import React, { Fragment, ReactElement, ReactNode } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useAuth } from '../../contexts/authProvider'\nimport { useViewport } from '../../contexts/viewPort'\nimport { Button } from '../../styled/button'\nimport { DashHeader } from '../../styled/pages'\n\ninterface ILayout {\n  name?: string\n  title: string | ReactElement<any, any>\n  customBtns?: boolean\n  children?: ReactNode\n}\n\nconst DashPageHeader: React.FC<ILayout> = ({\n  name,\n  title,\n  children,\n  customBtns,\n}) => {\n  const { user } = useAuth()\n  const history = useHistory()\n  const { width } = useViewport()\n\n  return (\n    <Fragment>\n      <DashHeader>\n        <div>\n          {name && <p>{name}</p>}\n          <h1>{title}</h1>\n        </div>\n        {width > 800 && (\n          <div>\n            {!customBtns ? (\n              <Fragment>\n                {user &&\n                user.role &&\n                Array.isArray(user.role) &&\n                user.role.includes('ceo') ? (\n                  <Button\n                    onClick={() => history.push('/resumes/new')}\n                    btnType=\"primary\"\n                    size=\"sm\"\n                  >\n                    Create Resume\n                  </Button>\n                ) : (\n                  <Button\n                    onClick={() => history.push('/subscribe')}\n                    btnType=\"primary\"\n                    size=\"sm\"\n                  >\n                    Upgrade\n                  </Button>\n                )}\n\n                <Button\n                  onClick={() => history.push('/progress-tracker')}\n                  btnType=\"ghost\"\n                  size=\"sm\"\n                >\n                  Tracker\n                </Button>\n              </Fragment>\n            ) : (\n              children\n            )}\n          </div>\n        )}\n      </DashHeader>\n    </Fragment>\n  )\n}\n\nexport default DashPageHeader\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\n\nconst SubNavBar = ({\n  children,\n  style,\n}: {\n  children: ReactNode\n  style?: any\n}) => {\n  return <SubNav style={style}>{children}</SubNav>\n}\n\nconst SubNavLink = ({ children }: { children: ReactNode }) => {\n  return <li>{children}</li>\n}\nSubNavBar.Link = SubNavLink\n\nexport default SubNavBar\n\nconst SubNav = styled.ul`\n  display: flex;\n  padding: 0 0.875rem;\n  border-bottom: 1px solid #e2e9f3;\n  user-select: none;\n  li {\n    display: flex;\n    float: left;\n    padding: 0;\n    a {\n      color: #878787;\n      padding: 1.5rem 1rem 0.5rem;\n      margin: 0 1rem;\n      transition: color ease-in-out 300ms;\n      &:hover {\n        color: #f08438;\n      }\n      &.active {\n        font-weight: 700;\n        color: #f08438;\n        border-bottom: 2px solid #f08438;\n      }\n    }\n  }\n  @media (max-width: 480px) {\n    justify-content: space-between;\n    li {\n      a {\n        margin: 0 0.5rem;\n        padding: 0.5rem 0;\n        font-size: 0.8rem;\n      }\n    }\n  }\n`\n","import { useQuery, UseQueryOptions } from 'react-query'\nimport { useAuth } from '../contexts/authProvider'\n\n/**\n * Advance hook for useQuery()\n * @param identifier queryKey  identifier\n * @param fetcher queryFn()\n * @param enabled should query be enabled?\n * @param params useQuery() options\n * @returns useQuery()\n */\nconst getQueryAdvance = (\n  identifier: any,\n  fetcher: () => any,\n  enabled = true,\n  params?: Omit<\n    UseQueryOptions<any, unknown, any, any>,\n    'queryKey' | 'queryFn' | 'enabled'\n  >\n) => {\n  const { user, token } = useAuth()\n  const ref = user && user.ref\n\n  return useQuery(identifier, fetcher, {\n    enabled: !!token && !!ref && enabled,\n    ...params,\n  })\n}\n\nexport default getQueryAdvance\n","import React, { ReactNode, useEffect, useState } from 'react'\nimport { useQueryClient } from 'react-query'\nimport {\n  deleteProgressTrackerQuery,\n  getAllTrackers,\n} from '../queries/progressTrackerQueries'\nimport useExitPrompt from '../hooks/useExitPromt'\nimport { useNotify } from './notify'\nimport RouterPrompt from '../components/routerPrompt'\nimport {\n  handleChangeProgressTrackerPos,\n  updateProgressTrackerCounts,\n} from '../helpers/progressTrackerHelpers'\n\ninterface ContextProps {\n  showModal: boolean\n  tracker: Record<string, any>\n  modalAction: string\n  setShowModal: (_val: boolean) => void\n  setTracker: (_val: any) => void\n  setModalAction: (_val: 'create' | 'edit' | '') => void\n  data: Record<string, any>\n  isLoading: boolean\n  isError: boolean\n  isPosUpdating: boolean\n  setReqPosChange: (_val: number) => void\n  deleteItem: { id: string; status: string } | Record<string, never>\n  setDeleteItem: (\n    _val: { id: string; status: string } | Record<string, never>\n  ) => void\n  isDeleting: boolean\n  handleDeleteTracker: (_val: { id: string; status: string }) => void\n}\n/* istanbul ignore next */\nconst contextValues = {\n  showModal: false,\n  tracker: {},\n  modalAction: '',\n  setShowModal: (_val: boolean) => {\n    return undefined\n  },\n  setTracker: (_val: any) => {\n    return undefined\n  },\n  setModalAction: (_val: 'create' | 'edit' | '') => {\n    return undefined\n  },\n  data: {},\n  isLoading: false,\n  isError: false,\n  isPosUpdating: false,\n  setReqPosChange: (_val: number) => {\n    return undefined\n  },\n  deleteItem: {},\n  setDeleteItem: (\n    _val: { id: string; status: string } | Record<string, never>\n  ) => {\n    return undefined\n  },\n  isDeleting: false,\n  handleDeleteTracker: (_val: { id: string; status: string }) => {\n    return undefined\n  },\n}\n\nconst ProgressTrackerContext = React.createContext<ContextProps>(contextValues)\n\nconst ProgressTrackerProvider = ({ children }: { children: ReactNode }) => {\n  const [showModal, setShowModal] = useState(false)\n  const [tracker, setTracker] = useState({})\n  const [modalAction, setModalAction] = useState<'create' | 'edit' | ''>('')\n  const [reqPosChange, setReqPosChange] = useState(0)\n  const [isPosUpdating, setIsPosUpdating] = useState(false)\n  const [deleteItem, setDeleteItem] = useState<\n    { id: string; status: string } | Record<string, never>\n  >({})\n\n  const { setNotify } = useNotify()\n\n  const { showExitPrompt, setShowExitPrompt } = useExitPrompt(false)\n\n  const { data, isLoading, isError } = getAllTrackers()\n\n  const queryClient = useQueryClient()\n\n  const counts = {\n    callbacks: 0,\n    interviews: 0,\n    jobs_applied: 0,\n  }\n\n  counts.callbacks = (data && data.responded.length) || 0\n  counts.interviews = (data && data.interview.length) || 0\n  counts.jobs_applied = (data && data.applied.length) || 0\n\n  useEffect(() => {\n    if (!counts) return\n    updateProgressTrackerCounts(counts, setNotify, queryClient)\n  }, [counts.callbacks, counts.interviews, counts.jobs_applied])\n\n  useEffect(() => {\n    return () => {\n      setShowExitPrompt(false)\n    }\n  }, [])\n\n  // const updateCounts = async (counts: Record<string, number>) => {\n  //   let dashCounts = queryClient.getQueryData('dashboardCounts') as Record<\n  //     string,\n  //     number\n  //   >\n\n  //   if (!dashCounts) {\n  //     try {\n  //       dashCounts = await queryClient.fetchQuery(\n  //         dashCountsKey,\n  //         dashCountsFetcher\n  //       )\n  //     } catch (err) {\n  //       setNotify({\n  //         heading: 'Err',\n  //         type: 'danger',\n  //         message: 'Failed to update counts',\n  //       })\n  //       console.error('Failed to updated counts')\n  //     }\n  //   }\n  //   if (!dashCounts) return\n  //   const resCounts: Record<string, any> = {\n  //     callbacks: dashCounts.callbacks || 0,\n  //     interviews: dashCounts.interviews || 0,\n  //     jobs_applied: dashCounts.jobs_applied || 0,\n  //   }\n  //   const isSame = Object.keys(resCounts).every(\n  //     (key) => resCounts[key] === counts[key]\n  //   )\n  //   if (isSame) return\n\n  //   queryClient.setQueryData('dashboardCounts', {\n  //     ...counts,\n  //     todos: dashCounts['todos'],\n  //   })\n  // }\n\n  useEffect(() => {\n    if (isPosUpdating) setShowExitPrompt(true)\n    else setShowExitPrompt(false)\n  }, [isPosUpdating])\n\n  // const deleteTracker = useMutation(\n  //   (reqData) => axios.delete('/progress-tracker', { data: reqData }),\n  //   {\n  //     onSuccess: (_res) => {\n  //       deleteDraggableFromCache(\n  //         deleteItem.id,\n  //         deleteItem.status,\n  //         data,\n  //         'progressTracker',\n  //         queryClient\n  //       )\n  //       setShowModal(false)\n  //       setTracker({})\n  //     },\n  //     onError: ({ _response }) => {\n  //       setNotify({\n  //         type: 'danger',\n  //         heading: 'Err!',\n  //         message: 'Failed to delete tracker',\n  //       })\n  //     },\n  //     onSettled: () => {\n  //       setDeleteItem({})\n  //     },\n  //   }\n  // )\n\n  const deleteTracker = deleteProgressTrackerQuery(\n    deleteItem,\n    data,\n    setTracker,\n    setDeleteItem,\n    setShowModal,\n    setNotify,\n    queryClient\n  )\n\n  useEffect(() => {\n    if (reqPosChange <= 0 || !data) return\n    setIsPosUpdating(true)\n    const timer = setTimeout(() => {\n      handleChangeProgressTrackerPos(\n        data,\n        setIsPosUpdating,\n        setNotify,\n        queryClient\n      )\n      setReqPosChange(0)\n    }, 3000)\n    return () => clearTimeout(timer)\n  }, [reqPosChange])\n\n  const handleDeleteTracker = async (req: { id: string; status: string }) => {\n    deleteTracker.mutate(req as any)\n  }\n\n  // const handleChangePos = async () => {\n  //   const list: ListProps = {\n  //     applied: [],\n  //     responded: [],\n  //     interview: [],\n  //     offers: [],\n  //     rejected: [],\n  //   }\n  //   if (!data) return\n  //   Object.keys(list).forEach((key) => {\n  //     data[key].forEach((item: any) => list[key].push(item._id))\n  //   })\n\n  //   const { data: resData, error: resError } = await apiChangeTrackerPos({\n  //     ...list,\n  //   })\n  //   if (resError && !axios.isCancel(resError)) {\n  //     setNotify({\n  //       type: 'danger',\n  //       heading: 'Err!',\n  //       message: 'Failed to update positon',\n  //     })\n  //   }\n  //   if (resData) {\n  //     queryClient.setQueryData('progressTracker', data)\n  //   }\n  //   setIsPosUpdating(false)\n  // }\n\n  return (\n    <ProgressTrackerContext.Provider\n      value={{\n        showModal,\n        setShowModal,\n        tracker,\n        setTracker,\n        modalAction,\n        setModalAction,\n        data,\n        isLoading,\n        isError,\n        isPosUpdating,\n        setReqPosChange,\n        deleteItem,\n        setDeleteItem,\n        isDeleting: deleteTracker.isLoading,\n        handleDeleteTracker,\n      }}\n    >\n      <RouterPrompt show={showExitPrompt} setShow={setShowExitPrompt} />\n\n      {children}\n    </ProgressTrackerContext.Provider>\n  )\n}\n\nconst useProgressTracker = () => {\n  const {\n    showModal,\n    setShowModal,\n    tracker,\n    setTracker,\n    modalAction,\n    setModalAction,\n    data,\n    isLoading,\n    isError,\n    isPosUpdating,\n    setReqPosChange,\n    deleteItem,\n    setDeleteItem,\n    isDeleting,\n    handleDeleteTracker,\n  } = React.useContext(ProgressTrackerContext)\n\n  return {\n    showModal,\n    setShowModal,\n    tracker,\n    setTracker,\n    modalAction,\n    setModalAction,\n    data,\n    isLoading,\n    isError,\n    isPosUpdating,\n    setReqPosChange,\n    deleteItem,\n    setDeleteItem,\n    isDeleting,\n    handleDeleteTracker,\n  }\n}\n\nexport { ProgressTrackerProvider, useProgressTracker }\n","import axios from 'axios'\nimport getQueryAdvance from '../hooks/getQueryAdvance'\nimport { QueryClient, useMutation } from 'react-query'\nimport { deleteDraggableFromCache } from '../helpers/draggableBoard'\n\n/**\n * Gets all progress tracked for current user\n * @returns UseQueryResult\n */\nexport const getAllTrackers = () => {\n  const fetcher = async () => {\n    const { data } = await axios.get(`/progress-tracker`)\n    return data\n  }\n  return getQueryAdvance('progressTracker', () => fetcher())\n}\n\n/**\n * Deletes Single Tracker\n * @param deleteItem item object that needs to be deleted or id and status of item\n * @param data list recived from server\n * @param setTracker setState fn()\n * @param setDeleteItem setState fn()\n * @param setShowModal setState fn()\n * @param setNotify from useNotify()\n * @param queryClient from useQueryClient()\n * @returns UseMutationResult\n */\nexport const deleteProgressTrackerQuery = (\n  deleteItem: { id: string; status: string } | Record<string, never>,\n  data: Record<string, any>,\n  setTracker: (_val: any) => void,\n  setDeleteItem: (\n    _val: { id: string; status: string } | Record<string, never>\n  ) => void,\n  setShowModal: (_val: boolean) => void,\n  setNotify: (_val: any) => void,\n  queryClient: QueryClient\n) => {\n  return useMutation(\n    (reqData) => axios.delete('/progress-tracker', { data: reqData }),\n    {\n      onSuccess: (_res) => {\n        deleteDraggableFromCache(\n          deleteItem.id,\n          deleteItem.status,\n          data,\n          'progressTracker',\n          queryClient\n        )\n        setShowModal(false)\n        setTracker({})\n      },\n      onError: ({ _response }) => {\n        setNotify({\n          type: 'danger',\n          heading: 'Err!',\n          message: 'Failed to delete tracker',\n        })\n      },\n      onSettled: () => {\n        setDeleteItem({})\n      },\n    }\n  )\n}\n","import { Draggable } from 'react-beautiful-dnd'\nimport React, { useState } from 'react'\nimport styled from 'styled-components'\nimport ThreeDotsIcon from '../../components/svgs/threeDots'\nimport DropButton from '../../components/ui/DropButton'\nimport { useProgressTracker } from '../../contexts/progressTracker'\n\nconst colors: any = {\n  red: 'rgba(255, 216, 212, 1)',\n  green: 'rgba(210, 246, 222, 1)',\n  yellow: 'rgba(249, 240, 141, 1)',\n  blue: 'rgba(209, 230, 255, 1)',\n}\n\nconst ListItem = ({ item, index }: { item: any; index: number }) => {\n  const [show, setShow] = useState(false)\n\n  const { setModalAction, setShowModal, setTracker, setDeleteItem } =\n    useProgressTracker()\n\n  const handleEdit = (item: any) => {\n    setTracker(item)\n    setModalAction('edit')\n    setShowModal(true)\n  }\n  return (\n    <Draggable draggableId={item._id} index={index}>\n      {(provided) => {\n        return (\n          <DragItem\n            color={colors[item.color]}\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n          >\n            <ActionBtn\n              vertical=\"bottom\"\n              horizontal=\"left\"\n              show={show}\n              setShow={setShow}\n            >\n              <DropButton.Button>\n                <ThreeDotsIcon size=\"0.875rem\" />\n              </DropButton.Button>\n              <DropButton.Item>\n                <a onClick={() => handleEdit(item)}>Edit</a>\n              </DropButton.Item>\n              <DropButton.Item>\n                <a\n                  onClick={() =>\n                    setDeleteItem({ id: item._id, status: item.status })\n                  }\n                >\n                  Delete\n                </a>\n              </DropButton.Item>\n            </ActionBtn>\n            <p className=\"truncate\">\n              <b>{item.company}</b>\n            </p>\n            <p className=\"truncate\">{item.job_title}</p>\n          </DragItem>\n        )\n      }}\n    </Draggable>\n  )\n}\n\nexport default ListItem\n\nconst DragItem = styled.div<{ color: string }>`\n  padding: 15px 10px 10px;\n  margin-bottom: 10px;\n  min-height: 75px;\n  background: ${({ color }) => color};\n  box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.06);\n  border-radius: 4px;\n  position: relative;\n  p {\n    width: 95%;\n    margin: 0;\n  }\n`\n\nconst ActionBtn = styled(DropButton)`\n  display: inline-flex;\n  position: absolute;\n  z-index: 1;\n  cursor: pointer;\n  top: 0;\n  right: 0;\n  padding: 5px 10px;\n  button {\n    padding: 0;\n    svg {\n      circle {\n        transition: fill ease 0.3s;\n      }\n    }\n    &:hover {\n      svg {\n        circle {\n          fill: ${({ theme }) => theme.colors.primary};\n        }\n      }\n    }\n  }\n  ul {\n    margin: 0;\n    padding: 5px 0;\n    li {\n      a {\n        font-size: 0.8rem;\n      }\n    }\n  }\n`\n","import { Droppable } from 'react-beautiful-dnd'\nimport React, { Fragment } from 'react'\nimport styled from 'styled-components'\nimport ListItem from './listItem'\nimport { useProgressTracker } from '../../contexts/progressTracker'\n\ninterface IProps {\n  name: string\n  elements: Array<any>\n  placeholderProps: any\n}\n\nconst DraggableElement: React.FC<IProps> = ({\n  name,\n  elements,\n  placeholderProps,\n}) => {\n  const { setTracker, setModalAction, setShowModal } = useProgressTracker()\n  const handleCreate = (status: string) => {\n    setTracker({ status, color: 'blue' })\n    setModalAction('create')\n    setShowModal(true)\n  }\n  return (\n    <Wrapper>\n      <ColumnHeader>\n        <p>{name}</p>\n      </ColumnHeader>\n      <DroppableStyles>\n        <Droppable droppableId={`${name}`}>\n          {(provided, snapshot) => (\n            <Fragment>\n              <DropableContainer\n                id={`drag-column-${name}`}\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n                {elements &&\n                  elements.map((item: any, i: number) => (\n                    <ListItem\n                      key={item._id}\n                      item={{ ...item, status: name }}\n                      index={i}\n                    />\n                  ))}\n\n                {provided.placeholder}\n                {placeholderProps &&\n                  Object.keys(placeholderProps).length > 0 &&\n                  snapshot.isDraggingOver && (\n                    <Placeholder\n                      style={{\n                        top: placeholderProps.clientY,\n                        left: placeholderProps.clientX,\n                        height: placeholderProps.clientHeight,\n                        width: placeholderProps.clientWidth,\n                      }}\n                    />\n                  )}\n                <ColumnFooter>\n                  <p\n                    className=\"add-task-btn\"\n                    onClick={() => handleCreate(name)}\n                  >\n                    New Task\n                  </p>\n                </ColumnFooter>\n              </DropableContainer>\n            </Fragment>\n          )}\n        </Droppable>\n      </DroppableStyles>\n    </Wrapper>\n  )\n}\n\nexport default DraggableElement\n\nconst ColumnHeader = styled.div`\n  margin-bottom: 10px;\n  text-transform: capitalize;\n  background: rgba(241, 241, 241, 0.6);\n  padding: 10px;\n  border-radius: 4px;\n  p {\n    font-weight: bold;\n    margin: 0;\n  }\n`\nconst ColumnFooter = styled.div`\n  position: relative;\n  p {\n    text-transform: capitalize;\n    background: rgba(224, 224, 224, 0.6);\n    padding: 7px;\n    border-radius: 4px;\n    cursor: pointer;\n    margin: 0;\n    text-align: center;\n    width: 100%;\n    height: fit-content;\n  }\n`\n\nconst DroppableStyles = styled.div`\n  padding: 10px;\n  background: rgba(241, 241, 241, 0.6);\n  border-radius: 4px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  user-select: none;\n  margin-right: 0.5rem;\n  margin-left: 0.5rem;\n  @media (max-width: 900px) {\n    width: 275px;\n  }\n`\nconst DropableContainer = styled.div`\n  height: 100%;\n  position: relative;\n  min-height: 300px;\n`\nconst Placeholder = styled.div`\n  position: absolute;\n  border-radius: 3px;\n  background-color: rgba(224, 224, 224, 0.6);\n`\n","import * as Yup from 'yup'\n\nconst job_title = Yup.string()\n  .required('job title is required')\n  .max(100, 'Max 100 characters allowed')\n\nconst company = Yup.string()\n  .required('company name is required')\n  .max(100, 'Max 100 characters allowed')\n\nconst salary = Yup.string().max(100, 'Max 100 characters allowed')\n\nconst linkRegex =\n  /((https?):\\/\\/)?(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/\n\nconst job_link = Yup.string().test('isValid', 'Invalid link', (value) => {\n  if (!value) return true\n  return linkRegex.test(value)\n})\nconst location = Yup.string().max(300, 'Max 300 characters allowed')\n\nconst deadline = Yup.date()\n  .nullable()\n  .transform((curr, orig) => (orig === '' ? null : curr))\n\nconst status = Yup.string()\n  .oneOf(['applied', 'responded', 'interview', 'offers', 'rejected'])\n  .required()\n\nconst color = Yup.string().oneOf(['red', 'green', 'blue', 'yellow']).required()\n\nconst logs = Yup.array().of(\n  Yup.object().shape({\n    text: Yup.string().max(300, 'Max 300 characters allowed').required(),\n    updated_at: Yup.date().required(),\n    created_at: Yup.date().required(),\n  })\n)\n\nconst description = Yup.string().max(3000, 'Max 3000 characters allowed')\n\nexport const validateTracker = Yup.object().shape({\n  job_title,\n  company,\n  salary,\n  deadline,\n  job_link,\n  location,\n  status,\n  color,\n  logs,\n  description,\n})\n","import { yupResolver } from '@hookform/resolvers/yup'\nimport axios from 'axios'\nimport dayjs from 'dayjs'\nimport React, { Fragment, useEffect, useState } from 'react'\nimport { FormProvider, useFieldArray, useForm } from 'react-hook-form'\nimport { useMutation, useQueryClient } from 'react-query'\nimport styled from 'styled-components'\nimport Input from '../../components/form/Input'\nimport TextArea from '../../components/form/textarea'\nimport CrossIcon from '../../components/svgs/cross'\nimport DownArrowIcon from '../../components/svgs/downArrow'\nimport DustBinIcon from '../../components/svgs/dustbin'\nimport PenIcon from '../../components/svgs/pen'\nimport DropButton from '../../components/ui/DropButton'\nimport SubNavBar from '../../components/ui/subNavbar'\nimport { useNotify } from '../../contexts/notify'\nimport { useProgressTracker } from '../../contexts/progressTracker'\nimport { useViewport } from '../../contexts/viewPort'\nimport { Button } from '../../styled/button'\nimport { Spinner } from '../../styled/loader'\nimport { validateTracker } from '../../validations/progress_tracker'\n\nconst colors: any = {\n  red: 'rgb(255 111 111)',\n  green: 'rgb(82 255 140)',\n  yellow: 'rgb(255 234 0)',\n  blue: 'rgb(61 150 255)',\n}\n\ninterface FormProps {\n  job_title: string\n  company: string\n  salary: string\n  deadline: string\n  job_link: string\n  job_location: string\n  status: string\n  color: string\n  description: string\n  logs: Array<{\n    text: string\n    created_at: string\n    updated_at: string\n  }>\n}\n\nconst TaskModal = () => {\n  const [currentTab, setCurrentTab] = useState(0)\n  const [showStatus, setShowStatus] = useState(false)\n  const [showColor, setShowColor] = useState(false)\n  const [logEdit, setLogEdit] = useState(-1)\n  const [logInput, setLogInput] = useState('')\n\n  const queryClient = useQueryClient()\n\n  const { width } = useViewport()\n\n  const {\n    data,\n    tracker,\n    modalAction,\n    setShowModal,\n    setTracker,\n    setModalAction,\n    setDeleteItem,\n  } = useProgressTracker()\n  const { setNotify } = useNotify()\n\n  const defaultValues = {\n    job_title: '',\n    company: '',\n    salary: '',\n    deadline: '',\n    job_link: '',\n    job_location: '',\n    description: '',\n    status: 'applied',\n    color: 'blue',\n    logs: [],\n  }\n  const methods = useForm<FormProps>({\n    mode: 'onBlur',\n    defaultValues,\n    resolver: yupResolver(validateTracker),\n  })\n\n  const {\n    handleSubmit,\n    setValue,\n    watch,\n    reset,\n    control,\n    formState: { isDirty, isValid, isSubmitting },\n  } = methods\n\n  const { fields, update, prepend, remove } = useFieldArray({\n    control,\n    name: 'logs',\n  })\n\n  useEffect(() => {\n    const el = document.getElementById(`logs.${logEdit}.content`)\n    if (!el) setLogEdit(-1)\n    else el.focus()\n    return\n  }, [logEdit])\n\n  useEffect(() => {\n    if (Object.keys(tracker).length > 0) {\n      if (tracker.deadline) {\n        tracker.deadline = dayjs(tracker.deadline as string).format(\n          'YYYY-MM-DD'\n        )\n      }\n\n      reset(tracker, {\n        keepErrors: false,\n        keepDirty: false,\n        keepIsSubmitted: false,\n        keepTouched: false,\n        keepIsValid: false,\n        keepSubmitCount: false,\n      })\n    }\n  }, [modalAction, tracker])\n\n  const handleColor = (color: string) => {\n    setValue('color', color, {\n      shouldDirty: true,\n      shouldValidate: true,\n    })\n    setShowColor(false)\n  }\n\n  const handleStatus = (status: string) => {\n    setValue('status', status, {\n      shouldDirty: true,\n      shouldValidate: true,\n    })\n    setShowStatus(false)\n  }\n\n  const handleClose = () => {\n    setShowModal(false)\n    setTracker({})\n    setModalAction('')\n  }\n\n  const handleLogEdit = (\n    e: React.FocusEvent<HTMLParagraphElement>,\n    index: number,\n    data: any\n  ) => {\n    data.text = e.target.outerText\n    data.updated_at = new Date(Date.now()).toISOString()\n    update(index, data)\n    setLogEdit(-1)\n  }\n\n  const handleLogAdd = () => {\n    if (logInput.length <= 0) return\n    prepend({\n      text: logInput,\n      created_at: new Date(Date.now()).toISOString(),\n      updated_at: new Date(Date.now()).toISOString(),\n    })\n    setLogInput('')\n  }\n\n  const displayTime = (updatedTime: string) => {\n    const diff = dayjs().diff(updatedTime, 'seconds')\n    let output = 'just now'\n    if (diff > 60) output = `${Math.floor(diff / 60)} min ago`\n    if (diff > 3600) output = `${Math.floor(diff / 3600)} hour ago`\n    if (diff > 3600 * 24) output = `${Math.floor(diff / (3600 * 24))} day ago`\n    if (diff > 3600 * 24 * 30)\n      output = `${Math.floor(diff / (3600 * 24 * 30))} month ago`\n    if (diff > 3600 * 24 * 30 * 12)\n      output = `${Math.floor(diff / (3600 * 24 * 30 * 12))} year ago`\n\n    return output\n  }\n  const cacheNewTracker = (tracker: Record<string, any>) => {\n    const trackers = { ...data } as any\n    trackers[tracker.status].unshift(tracker)\n    queryClient.setQueryData('progressTracker', trackers)\n  }\n\n  const createTracker = useMutation(\n    (trackerData) => axios.post('/progress-tracker', trackerData),\n    {\n      onSuccess: (res: any) => {\n        if (!res.data) return\n        cacheNewTracker(res.data)\n        setShowModal(false)\n        setTracker({})\n      },\n      onError: ({ _response }) => {\n        setNotify({\n          type: 'danger',\n          heading: 'Err!',\n          message: 'Failed to create tracker',\n        })\n      },\n    }\n  )\n  const updateTrackerCache = (newTracker: Record<string, any>) => {\n    const trackers = { ...data } as any\n    const list = trackers[tracker.status]\n    if (!list) return\n    const index = list.findIndex(\n      (item: Record<string, any>) => item._id === tracker._id\n    )\n    if (index === -1) return\n\n    if (newTracker.status !== tracker.status) {\n      if (tracker) {\n        list.splice(index, 1)\n        trackers[newTracker.status].unshift(newTracker)\n        queryClient.setQueryData('progressTracker', trackers)\n      }\n    } else {\n      list.splice(index, 1, newTracker)\n      queryClient.setQueryData('progressTracker', trackers)\n    }\n  }\n\n  const updateTracker = useMutation(\n    (trackerData) => axios.patch('/progress-tracker', trackerData),\n    {\n      onSuccess: (res) => {\n        updateTrackerCache(res.data as Record<string, any>)\n        setShowModal(false)\n        setTracker({})\n      },\n      onError: ({ _response }) => {\n        setNotify({\n          type: 'danger',\n          heading: 'Err!',\n          message: 'Failed to update tracker',\n        })\n      },\n    }\n  )\n\n  const submitForm = async (data: any) => {\n    if (modalAction === 'create') {\n      return createTracker\n        .mutateAsync(data)\n        .then((_val) => true)\n        .catch((_err) => false)\n    } else if (modalAction === 'edit') {\n      data.id = tracker._id\n      data.oldStatus = tracker.status\n      // updateTracker.mutate(data)\n      return updateTracker\n        .mutateAsync(data)\n        .then((_val) => true)\n        .catch((_err) => false)\n    }\n  }\n\n  const handleSave = () => {\n    handleSubmit(submitForm)()\n  }\n\n  const handleDelete = () => {\n    if (Object.keys(tracker).length > 0 && tracker._id && tracker.status) {\n      setShowModal(false)\n      setTracker({})\n      setDeleteItem({\n        id: tracker._id as string,\n        status: tracker.status as string,\n      })\n    }\n  }\n\n  const currentColor: any = watch('color')\n  const currentStatus: any = watch('status')\n  const currentCompany: any = watch('company')\n  const currentJob: any = watch('job_title')\n\n  const company = <Input name=\"company\" label=\"Company\" />\n  const job_title = <Input name=\"job_title\" label=\"Job Title\" />\n  const salary = <Input name=\"salary\" label=\"Salary\" />\n  const deadline = <Input name=\"deadline\" type=\"date\" label=\"Deadline\" />\n  const job_link = <Input name=\"job_link\" label=\"Job Link\" />\n  const location = <Input name=\"job_location\" label=\"Location\" />\n\n  const colorPicker = (\n    <div>\n      <label>Color</label>\n      <CustomDropBtn\n        vertical=\"bottom\"\n        horizontal=\"left\"\n        show={showColor}\n        setShow={setShowColor}\n        height=\"48px\"\n      >\n        <DropButton.Button>\n          <Pallette color={colors[currentColor]}>{currentColor}</Pallette>\n          <DownArrowIcon />\n        </DropButton.Button>\n        <DropButton.Item>\n          <a onClick={() => handleColor('yellow')}>\n            <Pallette color={colors.yellow}>Yellow</Pallette>\n          </a>\n        </DropButton.Item>\n        <DropButton.Item>\n          <a onClick={() => handleColor('red')}>\n            <Pallette color={colors.red}>Red</Pallette>\n          </a>\n        </DropButton.Item>\n        <DropButton.Item>\n          <a onClick={() => handleColor('green')}>\n            <Pallette color={colors.green}>Green</Pallette>\n          </a>\n        </DropButton.Item>\n        <DropButton.Item>\n          <a onClick={() => handleColor('blue')}>\n            <Pallette color={colors.blue}>Blue</Pallette>\n          </a>\n        </DropButton.Item>\n      </CustomDropBtn>\n    </div>\n  )\n\n  const statusSelect = (\n    <CustomDropBtn\n      vertical=\"top\"\n      horizontal=\"left\"\n      show={showStatus}\n      setShow={setShowStatus}\n      height=\"40px\"\n    >\n      <DropButton.Button>\n        {currentStatus}\n        <DownArrowIcon />\n      </DropButton.Button>\n      <DropButton.Item>\n        <a onClick={() => handleStatus('applied')}>Applied </a>\n      </DropButton.Item>\n      <DropButton.Item>\n        <a onClick={() => handleStatus('responded')}>responded </a>\n      </DropButton.Item>\n      <DropButton.Item>\n        <a onClick={() => handleStatus('interview')}>interview </a>\n      </DropButton.Item>\n      <DropButton.Item>\n        <a onClick={() => handleStatus('offers')}>offers </a>\n      </DropButton.Item>\n      <DropButton.Item>\n        <a onClick={() => handleStatus('rejected')}>rejected </a>\n      </DropButton.Item>\n    </CustomDropBtn>\n  )\n\n  return (\n    <Fragment>\n      <Modal data-test-id=\"tracker-popup\">\n        <Wrapper>\n          <FormProvider {...methods}>\n            <CloseBtn onClick={() => handleClose()}>\n              <CrossIcon size=\"1rem\" />\n            </CloseBtn>\n            <div className=\"mb-2\">\n              <h2\n                className={`space-around truncate`}\n                style={width <= 480 ? { marginBottom: '1rem' } : {}}\n              >\n                {currentJob ? currentJob : 'Untitled'}\n                {currentCompany ? `(${currentCompany})` : '(Company)'}\n              </h2>\n              <SubNavBar>\n                <SubNavBar.Link>\n                  <a\n                    className={currentTab === 0 ? 'active' : ''}\n                    onClick={() => setCurrentTab(0)}\n                  >\n                    Overview\n                  </a>\n                </SubNavBar.Link>\n                <SubNavBar.Link>\n                  <a\n                    className={currentTab === 1 ? 'active' : ''}\n                    onClick={() => setCurrentTab(1)}\n                  >\n                    Notes\n                  </a>\n                </SubNavBar.Link>\n                <SubNavBar.Link>\n                  <a\n                    className={currentTab === 2 ? 'active' : ''}\n                    onClick={() => setCurrentTab(2)}\n                  >\n                    Log activity\n                  </a>\n                </SubNavBar.Link>\n              </SubNavBar>\n            </div>\n            <div className=\"space-around\">\n              {currentTab === 0 ? (\n                <Fragment>\n                  {width > 700 ? (\n                    <Fragment>\n                      <Grid col={'repeat(3, 1fr)'} className=\"mb-1\">\n                        {company}\n                        {job_title}\n                        {salary}\n                      </Grid>\n                      <Grid col={'1fr 2fr'} className=\"mb-1\">\n                        {deadline}\n\n                        {job_link}\n                      </Grid>\n                      <Grid col={'2fr 1fr'} className=\"mb-3\">\n                        {location}\n                        {colorPicker}\n                      </Grid>\n                    </Fragment>\n                  ) : width <= 700 && width > 400 ? (\n                    <Fragment>\n                      <Grid col={'repeat(2, 1fr)'} className=\"mb-1\">\n                        {company} {job_title}\n                      </Grid>\n                      <Grid col={'repeat(2, 1fr)'} className=\"mb-1\">\n                        {deadline}\n                        {salary}\n                      </Grid>\n                      <div className=\"mb-1\">{job_link}</div>\n                      <div className=\"mb-1\">{location}</div>\n                      <Grid col={'repeat(2, 1fr)'} className=\"mb-3\">\n                        <div>\n                          <label>Status</label>\n                          {statusSelect}\n                        </div>\n                        {colorPicker}\n                      </Grid>\n                    </Fragment>\n                  ) : (\n                    <Fragment>\n                      <div className=\"mb-1\">{company}</div>\n                      <div className=\"mb-1\">{job_title}</div>\n                      <div className=\"mb-1\">{deadline}</div>\n                      <div className=\"mb-1\">{salary}</div>\n\n                      <div className=\"mb-1\">{job_link}</div>\n                      <div className=\"mb-1\">{location}</div>\n                      <div className=\"mb-1\">\n                        <label>Status</label>\n                        {statusSelect}\n                      </div>\n                      <div className=\"mb-1\">{colorPicker}</div>\n                    </Fragment>\n                  )}\n                </Fragment>\n              ) : currentTab === 1 ? (\n                <TextArea\n                  name=\"description\"\n                  label=\"Description\"\n                  className=\"mb-3\"\n                  style={{\n                    minHeight: '150px',\n                    resize: 'none',\n                  }}\n                  placeholder=\"Add a more detailed description...\"\n                />\n              ) : currentTab === 2 ? (\n                <Fragment>\n                  <Grid\n                    col={width > 480 ? 'auto 10%' : 'auto 50px'}\n                    className=\"mb-1\"\n                    style={{\n                      borderBottom: '1px solid rgba(196, 196, 196, 0.4)',\n                      paddingBottom: '2rem',\n                      gridGap: '1rem',\n                    }}\n                  >\n                    <input\n                      placeholder=\"Write a comment\"\n                      value={logInput}\n                      onChange={(e) => setLogInput(e.target.value)}\n                    />\n                    <Button\n                      btnType=\"ghost\"\n                      size=\"lg\"\n                      style={{ width: '100%', margin: 'auto', height: '48px' }}\n                      onClick={handleLogAdd}\n                    >\n                      Add\n                    </Button>\n                  </Grid>\n\n                  <LogWrapper id=\"log-wrapper\">\n                    {fields.map((item, i) => (\n                      <Log key={i}>\n                        <div>\n                          <p\n                            contentEditable={logEdit === i}\n                            id={`logs.${i}.content`}\n                            onBlur={(e) => handleLogEdit(e, i, item)}\n                            suppressContentEditableWarning={true}\n                          >\n                            {item.text}\n                          </p>\n                          <p className=\"time\">{displayTime(item.updated_at)}</p>\n                        </div>\n                        <div className=\"action-wrapper\">\n                          <span\n                            data-test-id=\"log-edit\"\n                            onClick={() => setLogEdit(i)}\n                          >\n                            <PenIcon size=\"1.2rem\" />\n                          </span>\n                          <span\n                            data-test-id=\"log-delete\"\n                            onClick={() => remove(i)}\n                          >\n                            <DustBinIcon />\n                          </span>\n                        </div>\n                      </Log>\n                    ))}\n                  </LogWrapper>\n                  {fields.length > 0 && <Divider />}\n                </Fragment>\n              ) : null}\n              {width > 700 ? (\n                <Grid col=\"auto 25% 20%\">\n                  {currentTab === 0 && (\n                    <Fragment>\n                      {modalAction === 'edit' ? (\n                        <Button\n                          btnType=\"ghost\"\n                          size=\"lg\"\n                          onClick={() => handleDelete()}\n                        >\n                          Delete\n                        </Button>\n                      ) : (\n                        <div />\n                      )}\n                      {statusSelect}\n                    </Fragment>\n                  )}\n                  <Button\n                    btnType=\"primary\"\n                    size=\"lg\"\n                    disabled={isSubmitting || !isDirty || !isValid}\n                    onClick={handleSave}\n                  >\n                    {isSubmitting ? (\n                      <Spinner size={'1.4rem'} type=\"white\" />\n                    ) : (\n                      'Save'\n                    )}\n                  </Button>\n                </Grid>\n              ) : (\n                <SMActionBtnWrapper>\n                  {modalAction === 'edit' ? (\n                    <Button\n                      btnType=\"ghost\"\n                      size=\"lg\"\n                      onClick={() => handleDelete()}\n                    >\n                      Delete\n                    </Button>\n                  ) : (\n                    <div />\n                  )}\n\n                  <Button\n                    btnType=\"primary\"\n                    size=\"lg\"\n                    disabled={isSubmitting || !isDirty || !isValid}\n                    onClick={handleSave}\n                  >\n                    {isSubmitting ? (\n                      <Spinner size={'1.2rem'} type=\"white\" />\n                    ) : (\n                      'Save'\n                    )}\n                  </Button>\n                </SMActionBtnWrapper>\n              )}\n            </div>\n          </FormProvider>\n        </Wrapper>\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default TaskModal\n\nconst Modal = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  z-index: 1000;\n  top: 0;\n  left: 0;\n  background-color: ${({ theme }) => theme.shades.dark[3]};\n`\n\nconst Wrapper = styled.div`\n  max-width: 800px;\n  width: 100%;\n  background-color: #fff;\n  padding-top: 3rem;\n  padding-bottom: 3rem;\n  position: relative;\n  .space-around {\n    padding-right: 2rem;\n    padding-left: 2rem;\n  }\n  h2 {\n    margin-bottom: 0;\n    text-transform: capitalize;\n  }\n  @media (max-width: 700px) {\n    overflow-y: auto;\n    height: 100%;\n    .space-around {\n      padding-left: 1rem;\n      padding-right: 1rem;\n    }\n  }\n`\n\nconst Pallette = styled.span<{ color: string }>`\n  display: flex;\n  align-items: center;\n  font-size: 0.875rem;\n  &:before {\n    content: '';\n    display: block;\n    width: 25px;\n    height: 25px;\n    background-color: ${({ color }) => color};\n    border-radius: 3px;\n    margin-right: 0.5rem;\n    border: 1px solid #eee;\n  }\n`\nconst CustomDropBtn = styled(DropButton)<{ height: string }>`\n  width: 100%;\n  button {\n    background-color: #f4f5f7;\n    width: 100%;\n    height: ${({ height }) => height};\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0.2rem 0.8rem;\n    border-radius: 6px;\n    text-transform: capitalize;\n  }\n  a {\n    text-transform: capitalize;\n  }\n  @media (max-width: 700px) {\n    button {\n      height: 48px;\n    }\n  }\n`\n\nconst Grid = styled.div<{ col: string }>`\n  display: grid;\n  grid-template-columns: ${({ col }) => col};\n  grid-column-gap: 1.5rem;\n`\n\nconst LogWrapper = styled.div`\n  margin-bottom: 1rem;\n  max-height: 30vh;\n  overflow-y: auto;\n  padding-right: 1rem;\n  @media (max-width: 700px) {\n    overflow-y: unset;\n    max-height: unset;\n    padding-right: 0;\n  }\n`\n\nconst Divider = styled.div`\n  display: block;\n  margin-bottom: 2rem;\n  background: rgba(196, 196, 196, 0.4);\n  height: 1px;\n`\n\nconst Log = styled.div`\n  display: grid;\n  grid-template-columns: auto 10%;\n  grid-gap: 2rem;\n  padding: 1rem;\n  transition: ease 0.3s;\n\n  &:hover {\n    background-color: rgba(39, 39, 39, 0.1);\n  }\n  p {\n    margin: 0;\n  }\n  .time {\n    color: rgba(39, 39, 39, 0.4);\n    font-size: 0.8rem;\n  }\n  .action-wrapper {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    span {\n      width: 100%;\n      text-align: center;\n      cursor: pointer;\n      user-select: none;\n      &:hover {\n        svg {\n          path {\n            fill: ${({ theme }) => theme.colors.primary};\n          }\n        }\n      }\n    }\n  }\n\n  @media (max-width: 700px) {\n    grid-template-columns: auto 60px;\n    grid-gap: 1.5rem;\n    padding: 1rem 0;\n  }\n`\nconst CloseBtn = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  right: 0;\n  top: 0;\n  padding: 1rem;\n  cursor: pointer;\n  &:hover {\n    svg {\n      path {\n        stroke: ${({ theme }) => theme.colors.primary};\n      }\n    }\n  }\n`\nconst SMActionBtnWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  grid-gap: 1.5rem;\n`\n","import React, { Fragment, useState } from 'react'\nimport {\n  DragDropContext,\n  DragStart,\n  DragUpdate,\n  DropResult,\n} from 'react-beautiful-dnd'\nimport { useHistory } from 'react-router-dom'\nimport { CSSTransition } from 'react-transition-group'\nimport styled, { keyframes } from 'styled-components'\nimport CheckIcon1 from '../../components/svgs/check1'\nimport Confirmation from '../../components/ui/confirmation'\nimport DashPageHeader from '../../components/ui/dashPageHeader'\nimport {\n  ProgressTrackerProvider,\n  useProgressTracker,\n} from '../../contexts/progressTracker'\nimport { Button } from '../../styled/button'\nimport {\n  SK_Heading,\n  SK_Thumbnail,\n  SK_Wrapper,\n  Spinner,\n} from '../../styled/loader'\nimport DraggableElement from './drag-element'\nimport TaskModal from './TaskModal'\nimport {\n  progressTrackerHandleDragEnd,\n  progressTrackerHandleDragStart,\n  progressTrackerHandleDragUpdate,\n} from '../../helpers/progressTrackerHelpers'\n\nconst ProgressTracker = () => {\n  return (\n    <ProgressTrackerProvider>\n      <ProgressTrackerComponent />\n    </ProgressTrackerProvider>\n  )\n}\n\nconst ProgressTrackerComponent = () => {\n  const [placeholderProps, setPlaceholderProps] = useState({})\n\n  const {\n    showModal,\n    setShowModal,\n    setModalAction,\n    setTracker,\n    data,\n    isLoading,\n    isError,\n    setReqPosChange,\n    deleteItem,\n    setDeleteItem,\n    isDeleting,\n    handleDeleteTracker,\n    isPosUpdating,\n  } = useProgressTracker()\n\n  const lists = ['applied', 'responded', 'interview', 'offers', 'rejected']\n  const queryAttr = 'data-rbd-drag-handle-draggable-id'\n  const history = useHistory()\n\n  const handleCreate = () => {\n    setTracker('')\n    setModalAction('create')\n    setShowModal(true)\n  }\n\n  const getDraggedDom = (draggableId: string) => {\n    const domQuery = `[${queryAttr}='${draggableId}']`\n    const draggedDOM = document.querySelector(domQuery)\n\n    return draggedDOM\n  }\n  const handleDragUpdate = (event: DragUpdate) => {\n    const result = progressTrackerHandleDragUpdate(event, getDraggedDom)\n    if (!result) return\n    setPlaceholderProps({\n      clientHeight: result.clientHeight,\n      clientWidth: result.clientWidth,\n      clientY: result.clientY,\n      clientX: parseFloat(\n        window.getComputedStyle(result.draggedDOM.parentNode as any).paddingLeft\n      ),\n    })\n  }\n\n  const handleDragStart = (event: DragStart) => {\n    const result = progressTrackerHandleDragStart(event, getDraggedDom)\n    if (!result) return\n    setPlaceholderProps({\n      clientHeight: result.clientHeight,\n      clientWidth: result.clientWidth,\n      clientY: result.clientY,\n      clientX: parseFloat(\n        window.getComputedStyle(result.draggedDOM.parentNode as any).paddingLeft\n      ),\n    })\n  }\n\n  const handleDragEnd = (result: DropResult) => {\n    setPlaceholderProps({})\n\n    progressTrackerHandleDragEnd(data, result)\n    setReqPosChange(((prevState: number) => prevState + 1) as any)\n  }\n\n  return (\n    <Fragment>\n      <CSSTransition\n        in={isPosUpdating}\n        timeout={{\n          enter: 200,\n          exit: 5000,\n        }}\n      >\n        <Loader>\n          {isPosUpdating ? (\n            <Fragment>\n              <Spinner type=\"primary\" size=\"1.5rem\" />\n              <LoadingDots color=\"#f08438\">Updating</LoadingDots>\n            </Fragment>\n          ) : (\n            <Fragment>\n              <CheckIcon1 size=\"1.5rem\" color=\"#f08438\" />\n              <p style={{ color: '#f08438', margin: '0 0.7rem' }}>Done</p>\n            </Fragment>\n          )}\n        </Loader>\n      </CSSTransition>\n\n      <Confirmation\n        title=\"Delete\"\n        msg=\"Are you sure?\"\n        show={Object.keys(deleteItem).length > 0 ? true : false}\n      >\n        <Button\n          btnType=\"primary\"\n          size=\"lg\"\n          onClick={() => setDeleteItem({})}\n          disabled={isDeleting}\n        >\n          Cancel\n        </Button>\n        <Button\n          btnType=\"ghost\"\n          size=\"lg\"\n          onClick={() =>\n            deleteItem &&\n            Object.keys(deleteItem).length > 0 &&\n            handleDeleteTracker(deleteItem as any)\n          }\n          disabled={isDeleting}\n        >\n          {isDeleting ? <Spinner size=\"1.2rem\" type=\"white\" /> : 'Delete'}\n        </Button>\n      </Confirmation>\n\n      <DashPageHeader title=\"Progress tracker\" customBtns={true}>\n        <Button\n          btnType=\"primary\"\n          size=\"sm\"\n          disabled={isLoading || isError}\n          onClick={() => handleCreate()}\n        >\n          Create New Card\n        </Button>\n\n        <Button\n          btnType=\"ghost\"\n          size=\"sm\"\n          disabled={isLoading || isError}\n          onClick={() => history.push('/resumes/new')}\n        >\n          Create Resume\n        </Button>\n      </DashPageHeader>\n      {isError ? (\n        <div className=\"align-center\" style={{ height: '30vh' }}>\n          <h3>Failed to load progress tracker!</h3>\n        </div>\n      ) : isLoading ? (\n        <Sekeleton>\n          <SK_Wrapper>\n            {[...Array(5)].map((item, i) => (\n              <div key={i}>\n                <SK_Heading />\n                <SK_Thumbnail />\n              </div>\n            ))}\n          </SK_Wrapper>\n        </Sekeleton>\n      ) : (\n        <Fragment>\n          {showModal && <TaskModal />}\n          <DragDropContext\n            onDragEnd={handleDragEnd}\n            onDragStart={handleDragStart}\n            onDragUpdate={handleDragUpdate}\n          >\n            <ListGrid id=\"drag-container\">\n              {data &&\n                lists.map((listKey) => (\n                  <DraggableElement\n                    elements={data[listKey] as any}\n                    key={listKey}\n                    name={listKey}\n                    placeholderProps={placeholderProps}\n                  />\n                ))}\n            </ListGrid>\n          </DragDropContext>\n        </Fragment>\n      )}\n    </Fragment>\n  )\n}\n\nexport default ProgressTracker\n\nconst ListGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, 20%);\n  padding: 1.5rem 1rem;\n  margin-bottom: 1rem;\n  width: 100%;\n  flex: 1;\n\n  @media (max-width: 900px) {\n    grid-template-columns: repeat(5, 1fr);\n    overflow-x: scroll;\n    margin-bottom: 1.5rem;\n  }\n`\nconst Sekeleton = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  flex: 1;\n\n  ${SK_Wrapper} {\n    display: flex;\n    grid-gap: 1rem;\n    margin-bottom: 1rem;\n    width: 100%;\n    height: 100%;\n    flex: 1;\n    padding: 1.5rem;\n\n    div {\n      display: flex;\n      flex-direction: column;\n      width: 100%;\n      ${SK_Heading} {\n        height: 40px;\n        margin-bottom: 1rem;\n      }\n      ${SK_Thumbnail} {\n        width: 100%;\n        height: 100%;\n      }\n    }\n  }\n  @media (max-width: 900px) {\n    ${SK_Wrapper} {\n      overflow-x: scroll;\n      div {\n        width: 275px;\n      }\n    }\n  }\n`\nconst Loader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: fit-content;\n  padding: 0 0.5rem;\n  height: 50px;\n  min-width: 50px;\n  transition: ease 300ms;\n  background-color: #fff;\n  border-radius: 1rem;\n  box-shadow: 4px 0px 20px 0px #ddd;\n  border: 1px solid #eee;\n  position: fixed;\n  right: 40px;\n  bottom: 40px;\n  opacity: 0;\n  visibility: hidden;\n  z-index: 1;\n  &.enter-done,\n  &.enter-active,\n  &.exit-active {\n    opacity: 1;\n    visibility: visible;\n  }\n  &.exit-done {\n    opacity: 0;\n    visibility: hidden;\n  }\n`\n\nconst dots = (color: string) => keyframes`\n   0%, 20% {\n    color: rgba(0,0,0,0);\n    text-shadow:\n      .25em 0 0 rgba(0,0,0,0),\n      .5em 0 0 rgba(0,0,0,0);}\n  40% {\n    color: ${color};\n    text-shadow:\n      .25em 0 0 rgba(0,0,0,0),\n      .5em 0 0 rgba(0,0,0,0);}\n  60% {\n    text-shadow:\n      .25em 0 0 ${color},\n      .5em 0 0 rgba(0,0,0,0);}\n  80%, 100% {\n    text-shadow:\n      .25em 0 0 ${color},\n      .5em 0 0 ${color};\n    }\n    \n`\n\nconst LoadingDots = styled.p<{ color: string }>`\n  display: inline-flex;\n  margin: 0 0.7rem;\n  color: ${({ theme, color }) => (color ? color : theme.colors.dark)};\n  &:after {\n    content: '.';\n    margin-left: 0.1rem;\n    animation: ${({ theme, color }) => dots(color ? color : theme.colors.dark)}\n      1s steps(5, end) infinite;\n  }\n`\n","import styled from 'styled-components'\n\nexport const ContentWrapper = styled.div<{ maxWidth: string }>`\n  width: 100%;\n  max-width: ${({ maxWidth }) => maxWidth};\n  p {\n    max-width: 575px;\n  }\n`\nexport const PaginationWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  button {\n    width: fit-content;\n    padding: 0 1rem;\n    margin: 0 1rem;\n  }\n`\nexport const DashHeader = styled.header`\n  min-height: 175px;\n  max-height: 175px;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  border-bottom: 1px solid #e2e9f3;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1.5rem;\n  h1 {\n    margin-bottom: 0;\n    span {\n      font-weight: normal;\n    }\n  }\n  div:last-child {\n    display: flex;\n    button {\n      margin: 0 1rem;\n    }\n  }\n  @media (max-width: 768px) {\n    div:last-child {\n      flex-direction: column;\n    }\n  }\n  @media (max-width: 480px) {\n    max-height: 100px;\n    min-height: 100px;\n    h1 {\n      margin: 0;\n    }\n    div:last-child {\n      display: block;\n      width: 100%;\n    }\n  }\n`\n"],"names":["size","color","className","Fragment","xmlns","viewBox","width","height","cx","cy","r","fill","d","stroke","withTheme","theme","show","msg","title","children","Wrapper","Box","colors","primary","ChildWrapper","styled","shades","dark","name","customBtns","user","useAuth","history","useHistory","useViewport","role","Array","isArray","includes","onClick","push","btnType","SubNavBar","style","SubNav","Link","identifier","fetcher","enabled","params","token","ref","useQuery","contextValues","showModal","tracker","modalAction","setShowModal","_val","setTracker","setModalAction","data","isLoading","isError","isPosUpdating","setReqPosChange","deleteItem","setDeleteItem","isDeleting","handleDeleteTracker","ProgressTrackerContext","React","ProgressTrackerProvider","useState","reqPosChange","setIsPosUpdating","setNotify","useNotify","useExitPrompt","showExitPrompt","setShowExitPrompt","axios","getQueryAdvance","queryClient","useQueryClient","counts","callbacks","interviews","jobs_applied","responded","length","interview","applied","useEffect","updateProgressTrackerCounts","deleteTracker","useMutation","reqData","onSuccess","_res","deleteDraggableFromCache","id","status","onError","_response","type","heading","message","onSettled","deleteProgressTrackerQuery","timer","setTimeout","handleChangeProgressTrackerPos","clearTimeout","req","mutate","Provider","value","setShow","useProgressTracker","red","green","yellow","blue","item","index","draggableId","_id","provided","DragItem","innerRef","draggableProps","dragHandleProps","ActionBtn","vertical","horizontal","DropButton","handleEdit","company","job_title","elements","placeholderProps","ColumnHeader","DroppableStyles","droppableId","snapshot","DropableContainer","droppableProps","map","i","placeholder","Object","keys","isDraggingOver","Placeholder","top","clientY","left","clientX","clientHeight","clientWidth","ColumnFooter","Yup","required","max","salary","linkRegex","job_link","test","location","deadline","nullable","transform","curr","orig","oneOf","logs","of","shape","text","updated_at","created_at","description","validateTracker","currentTab","setCurrentTab","showStatus","setShowStatus","showColor","setShowColor","logEdit","setLogEdit","logInput","setLogInput","methods","useForm","mode","defaultValues","job_location","resolver","yupResolver","handleSubmit","setValue","watch","reset","control","formState","isDirty","isValid","isSubmitting","useFieldArray","fields","update","prepend","remove","el","document","getElementById","focus","dayjs","format","keepErrors","keepDirty","keepIsSubmitted","keepTouched","keepIsValid","keepSubmitCount","handleColor","shouldDirty","shouldValidate","handleStatus","createTracker","trackerData","res","trackers","unshift","setQueryData","cacheNewTracker","updateTracker","newTracker","list","findIndex","splice","updateTrackerCache","submitForm","mutateAsync","then","_err","oldStatus","handleSave","handleDelete","currentColor","currentStatus","currentCompany","currentJob","Input","label","colorPicker","CustomDropBtn","Pallette","statusSelect","Modal","CloseBtn","marginBottom","Grid","col","minHeight","resize","borderBottom","paddingBottom","gridGap","onChange","e","target","margin","Date","now","toISOString","LogWrapper","Log","contentEditable","onBlur","outerText","handleLogEdit","suppressContentEditableWarning","updatedTime","diff","output","Math","floor","Divider","disabled","SMActionBtnWrapper","ProgressTrackerComponent","setPlaceholderProps","getDraggedDom","domQuery","querySelector","CSSTransition","in","timeout","enter","exit","Loader","LoadingDots","Sekeleton","onDragEnd","result","progressTrackerHandleDragEnd","prevState","onDragStart","event","progressTrackerHandleDragStart","parseFloat","window","getComputedStyle","draggedDOM","parentNode","paddingLeft","onDragUpdate","progressTrackerHandleDragUpdate","ListGrid","listKey","SK_Wrapper","SK_Heading","SK_Thumbnail","keyframes","dots","ContentWrapper","maxWidth","PaginationWrapper","DashHeader"],"sourceRoot":""}