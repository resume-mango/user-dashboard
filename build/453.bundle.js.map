{"version":3,"file":"453.bundle.js","mappings":"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","sources":["webpack://user-dashboard/./src/components/hubspotForm.tsx","webpack://user-dashboard/./src/components/svgs/plus.tsx","webpack://user-dashboard/./src/components/ui/dashPageHeader.tsx","webpack://user-dashboard/./src/components/accordian/BasicAccordian.tsx","webpack://user-dashboard/./src/components/svgs/class.tsx","webpack://user-dashboard/./src/components/svgs/tickMark.tsx","webpack://user-dashboard/./src/pages/classes.tsx","webpack://user-dashboard/./src/styled/pages.ts"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\n\nexport interface HubspotWindow extends Window {\n  hbspt: any\n  grecaptcha: any\n}\ndeclare let window: HubspotWindow\n\ninterface IHbsptFrom {\n  region: string\n  portalId: string\n  formId: string\n  target: string\n}\n\ninterface IProps {\n  id?: string\n  form: IHbsptFrom\n  formLoaded: boolean\n  setFormLoaded: (_val: boolean) => void\n}\n\nconst HubspotForm: React.FC<IProps> = ({\n  id,\n  form,\n  formLoaded,\n  setFormLoaded,\n}) => {\n  const [sdkReady, setSdkReady] = useState(false)\n\n  useEffect(() => {\n    if (window !== undefined && !window.hbspt && !sdkReady) {\n      setFormLoaded(false)\n      const script = document.createElement('script')\n      script.type = 'text/javascript'\n      script.src = `https://js.hsforms.net/forms/v2.js`\n      script.id = 'hbspt-forms'\n      script.async = true\n      script.onload = () => {\n        setSdkReady(true)\n      }\n      script.onerror = () => {\n        return console.log('Hubspot SDK could not be loaded.')\n      }\n      document.body.appendChild(script)\n    } else {\n      setSdkReady(true)\n    }\n    return () => {\n      const script = document.getElementById('hbspt-forms')\n      if (script) script.remove()\n      if (window.hbspt) delete window.hbspt\n      setSdkReady(true)\n    }\n  }, [])\n  useEffect(() => {\n    let timer: any\n    if (window.hbspt) {\n      try {\n        window.hbspt.forms.create({\n          region: form.region,\n          portalId: form.portalId,\n          formId: form.formId,\n          target: form.target,\n        })\n        timer = setTimeout(() => {\n          setFormLoaded(true)\n        }, 1000)\n      } catch (err) {\n        console.error('Failed to render form')\n      }\n    }\n    return () => {\n      timer && clearTimeout(timer)\n    }\n  }, [sdkReady])\n\n  return (\n    <Wrapper\n      id={id ? id : 'hubspotForm'}\n      className={!sdkReady || !formLoaded ? 'hide' : ''}\n    ></Wrapper>\n  )\n}\n\nexport default HubspotForm\n\nconst Wrapper = styled.div`\n  &.hide {\n    opacity: 0;\n    height: 0;\n  }\n`\n","import React, { Fragment } from 'react'\ninterface IconProps {\n  size?: string\n  color?: string\n  className?: string\n}\nconst PlusIcon = ({ size, color, className }: IconProps) => {\n  return (\n    <Fragment>\n      <svg\n        width={size || '1rem'}\n        height={size || '1rem'}\n        className={className || ''}\n        viewBox='0 0 20 19'\n        fill='none'\n        xmlns='http://www.w3.org/2000/svg'\n      >\n        <path\n          d='M19.5406 9.44757H0.0765508'\n          stroke={color || '#898989'}\n          strokeWidth='1.5'\n        />\n        <path\n          d='M9.81017 0.000184768L9.81017 18.8953'\n          stroke={color || '#898989'}\n          strokeWidth='1.5'\n        />\n      </svg>\n    </Fragment>\n  )\n}\n\nexport default PlusIcon\n","import React, { Fragment, ReactElement, ReactNode } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useAuth } from '../../contexts/authProvider'\nimport { useViewport } from '../../contexts/viewPort'\nimport { Button } from '../../styled/button'\nimport { DashHeader } from '../../styled/pages'\n\ninterface ILayout {\n  name?: string\n  title: string | ReactElement<any, any>\n  customBtns?: boolean\n  children?: ReactNode\n}\n\nconst DashPageHeader: React.FC<ILayout> = ({\n  name,\n  title,\n  children,\n  customBtns,\n}) => {\n  const { user } = useAuth()\n  const history = useHistory()\n  const { width } = useViewport()\n\n  return (\n    <Fragment>\n      <DashHeader>\n        <div>\n          {name && <p>{name}</p>}\n          <h1>{title}</h1>\n        </div>\n        {width > 800 && (\n          <div>\n            {!customBtns ? (\n              <Fragment>\n                {user &&\n                user.role &&\n                Array.isArray(user.role) &&\n                user.role.includes('ceo') ? (\n                  <Button\n                    onClick={() => history.push('/resumes/new')}\n                    btnType=\"primary\"\n                    size=\"sm\"\n                  >\n                    Create Resume\n                  </Button>\n                ) : (\n                  <Button\n                    onClick={() => history.push('/subscribe')}\n                    btnType=\"primary\"\n                    size=\"sm\"\n                  >\n                    Upgrade\n                  </Button>\n                )}\n\n                <Button\n                  onClick={() => history.push('/progress-tracker')}\n                  btnType=\"ghost\"\n                  size=\"sm\"\n                >\n                  Tracker\n                </Button>\n              </Fragment>\n            ) : (\n              children\n            )}\n          </div>\n        )}\n      </DashHeader>\n    </Fragment>\n  )\n}\n\nexport default DashPageHeader\n","import React, { Fragment, ReactElement, ReactNode, useState } from 'react'\nimport styled from 'styled-components'\n\nimport PlusIcon from '../svgs/plus'\n\ninterface IProps {\n  children: ReactNode\n  icon: ReactElement\n  title: string\n  show: boolean\n  onClick: () => void\n}\n\nconst BasicAccordian = ({ children, icon, title, show, onClick }: IProps) => {\n  return (\n    <Fragment>\n      <Wrapper data-test-id={`acc_${title.replace(/\\s+/g, '_').toLowerCase()}`}>\n        <HeaderWrapper className=\"header\" onClick={onClick}>\n          <Heading>\n            {icon}\n            <p>{title}</p>\n          </Heading>\n          <ToggleWrapper>\n            <Toggle active={show} data-test-id=\"acc_toggle\">\n              <PlusIcon size=\"1.2rem\" />\n            </Toggle>\n          </ToggleWrapper>\n        </HeaderWrapper>\n        <BodyWrapper show={show} data-test-id=\"acc_body\">\n          {children}\n        </BodyWrapper>\n      </Wrapper>\n    </Fragment>\n  )\n}\n\nexport default BasicAccordian\n\nconst Toggle = styled.div<{ active: boolean }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  svg {\n    transition: transform 300ms;\n    transform: ${({ active }) => (active ? `rotateZ(45deg)` : `rotateZ(0deg)`)};\n  }\n`\nconst Heading = styled.div`\n  display: flex;\n  align-items: center;\n  height: 100%;\n  p {\n    font-size: 1rem;\n    margin-left: 1rem;\n    font-weight: 600;\n  }\n`\n\nconst Wrapper = styled.div`\n  display: block;\n  padding-right: 0.7rem;\n  padding-left: 0.7rem;\n  width: 100%;\n  background: #ffffff;\n  box-shadow: 4px 1px 8px rgba(0, 50, 61, 0.08);\n  border: 1px solid #f5f5f5;\n  border-radius: 6px;\n  margin-bottom: 1.5rem;\n  transition: all ease-in-out;\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n`\n\nconst HeaderWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 90% 10%;\n  min-height: 65px;\n  padding-right: 0.5rem;\n  padding-left: 0.5rem;\n  user-select: none;\n  width: 100%;\n  cursor: pointer;\n  &:hover {\n    ${Toggle} svg {\n      path {\n        stroke: ${({ theme }) => theme.colors.primary};\n      }\n    }\n  }\n`\nconst BodyWrapper = styled.div<{ show: boolean }>`\n  display: flex;\n  height: 100%;\n  max-height: ${({ show }) => (show ? '100vh' : '0px')};\n  opacity: ${({ show }) => (show ? 1 : 0)};\n  visibility: ${({ show }) => (show ? 'visible' : 'hidden')};\n\n  overflow: hidden;\n  transition: all cubic-bezier(0.43, 0.66, 0.68, 0.53) 0.5s;\n`\n","import React, { Fragment } from 'react'\ninterface IconProps {\n  size?: string\n  color?: string\n  className?: string\n}\nconst ClassIcon = ({ size, color, className }: IconProps) => {\n  return (\n    <Fragment>\n      <svg\n        width={size || '1rem'}\n        className={className || ''}\n        height={size || '1rem'}\n        viewBox=\"0 0 26 23\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <g clipPath=\"url(#clip0_23_39)\">\n          <path\n            d=\"M25.8375 1.42826C25.3652 0.520298 24.6136 0.0153082 23.598 0.0102073C19.7996 -0.00509539 16.0011 5.51365e-06 12.2027 0.0102073C11.7253 0.0102073 11.2632 0.132629 10.857 0.408078C10.1054 0.918169 9.72964 1.6272 9.72964 2.54026C9.72964 4.82546 9.72964 7.11067 9.72964 9.39588C9.72964 9.70703 9.70933 9.71723 9.44019 9.57951C8.9019 9.30916 8.36362 9.03881 7.83042 8.76847C7.59683 8.65114 7.59683 8.65115 7.75933 8.4216C8.67339 7.14128 8.78511 5.79464 8.07417 4.39189C7.43433 3.14216 6.048 2.39743 4.6769 2.46374C3.72729 2.50965 2.89956 2.88202 2.21401 3.58084C0.847998 4.97849 0.787061 7.19228 2.10229 8.64094C2.33589 8.89599 2.33589 8.89599 2.03628 9.10002C1.3812 9.5489 0.873389 10.1304 0.502686 10.8343C0.213232 11.3801 0.035498 11.9565 -0.00512695 12.5737C-0.00512695 13.7112 -0.00512695 14.8538 -0.00512695 15.9914C0.106592 16.7973 0.522998 17.3941 1.24409 17.7614C1.47261 17.8787 1.55894 18.0215 1.55386 18.2766C1.5437 19.4906 1.54878 20.7097 1.54878 21.9237C1.54878 22.6735 1.8687 22.9949 2.62026 23C3.40737 23.0051 4.19448 23 4.98159 23C5.70269 23 6.4187 23.0051 7.1398 23C7.72378 22.9949 8.02847 22.7246 8.11987 22.143C8.14526 22.0002 8.14019 21.8574 8.14019 21.7095C8.14019 19.1743 8.14019 16.6443 8.14019 14.1091C8.14019 14.0326 8.14019 13.9561 8.14019 13.8796C8.14019 13.7419 8.21128 13.7214 8.323 13.7776C8.37378 13.8031 8.42964 13.8286 8.48042 13.8541C9.09995 14.1652 9.72456 14.4713 10.3441 14.7926C11.2683 15.267 12.5378 15.114 13.1726 14.1448C13.2539 14.0173 13.3707 13.9714 13.5179 13.9714C14.2289 13.9714 14.9398 13.9765 15.6507 13.9663C15.8437 13.9663 15.864 14.0377 15.8031 14.2009C15.1074 16.0985 14.4269 18.0011 13.7363 19.9037C13.5027 20.5516 13.2589 21.1943 13.0355 21.8472C12.8527 22.3828 13.1777 22.9031 13.7312 22.9796C14.107 23.0357 14.4625 22.7756 14.6351 22.3063C15.3156 20.4495 15.9859 18.5826 16.6562 16.7259C16.9558 15.8944 17.2605 15.063 17.5601 14.2315C17.616 14.0734 17.6972 13.9663 17.8851 13.9714C18.0527 13.9714 18.1238 14.0581 18.1746 14.2009C18.9667 16.3688 19.7589 18.5418 20.5562 20.7097C20.7796 21.3218 20.9675 21.9543 21.2621 22.5409C21.455 22.9337 21.9019 23.0816 22.3031 22.9133C22.6687 22.7552 22.8769 22.3114 22.7652 21.9186C22.7347 21.8064 22.6941 21.6942 22.6535 21.5819C21.7597 19.1437 20.871 16.7004 19.9722 14.257C19.8707 13.9816 19.8757 13.9765 20.1652 13.9765C21.2824 13.9765 22.3996 13.9765 23.5167 13.9765C23.9281 13.9765 24.3242 13.9051 24.6949 13.7061C25.4566 13.3032 25.9339 12.7013 25.9999 11.8137C25.9999 8.58483 25.9999 5.35086 25.9999 2.12198C25.939 1.88734 25.9492 1.6476 25.8375 1.42826ZM4.76831 4.07053C5.84487 4.01442 6.8605 4.85097 6.92144 6.05478C7.01284 7.09027 6.15464 8.12065 5.14409 8.24307C3.89487 8.3961 2.81323 7.49324 2.75737 6.25372C2.70659 5.20293 3.46323 4.13684 4.76831 4.07053ZM11.6441 13.4154C11.446 13.5072 11.2531 13.4511 11.0601 13.3542C9.95815 12.7982 8.8562 12.2473 7.75425 11.6964C7.57651 11.6097 7.39878 11.5332 7.20073 11.5587C6.86558 11.5944 6.5812 11.8596 6.54565 12.2014C6.52026 12.4717 6.52534 12.7421 6.52534 13.0175C6.52534 14.2672 6.52534 15.517 6.52534 16.7667C6.52534 18.2204 6.52026 19.6742 6.53042 21.128C6.53042 21.332 6.48979 21.4034 6.27144 21.3983C5.30659 21.3881 4.34175 21.3881 3.3769 21.3983C3.17886 21.3983 3.14331 21.3422 3.14331 21.1586C3.15347 19.8986 3.14839 18.6438 3.14839 17.3839C3.14839 16.7922 2.91479 16.5269 2.33589 16.4606C1.83823 16.4045 1.52339 16.0679 1.52339 15.5578C1.51831 14.7314 1.50815 13.9102 1.52339 13.0838C1.55386 11.2934 2.94526 9.89577 4.72261 9.80905C5.71792 9.75804 6.63706 9.93147 7.52573 10.411C8.87144 11.1353 10.2527 11.7882 11.6238 12.4717C11.8269 12.5737 11.9843 12.7064 11.9792 12.9512C11.9691 13.1654 11.8371 13.3236 11.6441 13.4154ZM24.4765 11.3954C24.4765 12.0024 24.1312 12.3697 23.5523 12.3697C20.2261 12.3748 16.9 12.3697 13.5738 12.3697C13.5332 12.3697 13.4925 12.3646 13.4519 12.3595C13.4468 12.2575 13.5078 12.1912 13.5433 12.1147C14.1222 10.9466 14.7011 9.77845 15.2851 8.61544C15.4273 8.32469 15.4425 8.04414 15.2496 7.77379C15.0718 7.52384 14.823 7.42693 14.5183 7.46263C14.2339 7.49834 14.046 7.67177 13.9242 7.92172C13.4316 8.90619 12.939 9.89067 12.4566 10.8802C12.3652 11.069 12.2941 11.1149 12.1113 10.9976C11.9183 10.8751 11.7101 10.7782 11.5019 10.6915C11.3496 10.6303 11.3191 10.5385 11.3191 10.3804C11.3242 7.77889 11.3191 5.17743 11.3242 2.57596C11.3242 1.94345 11.6695 1.59659 12.2941 1.59659C16.0265 1.59659 19.7589 1.59659 23.4914 1.59659C24.1363 1.59659 24.4816 1.93835 24.4816 2.58617C24.4765 5.52939 24.4765 8.46241 24.4765 11.3954Z\"\n            fill={color || '#898989'}\n          />\n          <path\n            d=\"M17.9004 4.87647C16.5395 4.87647 15.1735 4.88157 13.8125 4.87647C13.4215 4.87647 13.1321 4.61632 13.066 4.24396C13.0051 3.9124 13.2032 3.55023 13.5231 3.41761C13.6754 3.3564 13.8328 3.3513 13.9953 3.3513C15.8641 3.3513 17.7379 3.3513 19.6067 3.3513C20.3785 3.3513 21.1453 3.3462 21.9172 3.3513C22.491 3.3564 22.8516 3.82058 22.7043 4.33067C22.6078 4.66223 22.3336 4.87137 21.968 4.87647C21.3434 4.88157 20.7137 4.87647 20.0891 4.87647C19.3578 4.88157 18.6266 4.88157 17.9004 4.87647Z\"\n            fill={color || '#898989'}\n          />\n          <path\n            d=\"M19.9316 6.2231C20.5918 6.2231 21.2519 6.2129 21.907 6.2231C22.491 6.2333 22.8464 6.68218 22.6992 7.19227C22.6129 7.49832 22.4046 7.67685 22.0898 7.73296C22.0796 7.73296 22.0746 7.73806 22.0644 7.73806C20.6425 7.76357 19.2257 7.77377 17.8039 7.73296C17.3164 7.71766 17.0218 7.22287 17.164 6.75359C17.2656 6.42714 17.555 6.2282 17.9714 6.2231C18.6316 6.218 19.2816 6.2231 19.9316 6.2231Z\"\n            fill={color || '#898989'}\n          />\n          <path\n            d=\"M19.9317 9.09493C20.5817 9.09493 21.2317 9.09493 21.8868 9.09493C22.3996 9.09493 22.745 9.41119 22.7399 9.86006C22.7348 10.2987 22.3895 10.6201 21.8969 10.6201C20.5868 10.6252 19.2766 10.6252 17.9664 10.6201C17.5196 10.6201 17.2149 10.3651 17.1539 9.97228C17.0981 9.59482 17.3012 9.25816 17.6567 9.13064C17.7735 9.08983 17.8903 9.09493 18.0071 9.09493C18.6469 9.09493 19.2868 9.09493 19.9317 9.09493Z\"\n            fill={color || '#898989'}\n          />\n        </g>\n        <defs>\n          <clipPath id=\"clip0_23_39\">\n            <rect width=\"26\" height=\"23\" fill=\"white\" />\n          </clipPath>\n        </defs>\n      </svg>\n    </Fragment>\n  )\n}\n\nexport default ClassIcon\n","import React, { Fragment } from 'react'\ninterface IconProps {\n  size?: string\n  color?: string\n  className?: string\n}\nconst TickMarkIcon = ({ size, color, className }: IconProps) => {\n  return (\n    <Fragment>\n      <svg\n        width={size || '1rem'}\n        height={size || '1rem'}\n        className={className || ''}\n        viewBox=\"0 0 14 10\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M13.9997 0.824795C13.9177 1.05758 13.74 1.21721 13.5656 1.38682C10.7048 4.167 7.84396 6.9505 4.98312 9.73734C4.76779 9.94685 4.52853 10.0566 4.22092 9.97345C4.09103 9.93687 3.98508 9.86371 3.88937 9.77059C2.67258 8.58336 1.45236 7.39946 0.235567 6.21555C-0.00710916 5.97944 -0.0652146 5.68679 0.0680861 5.41409C0.197969 5.15137 0.461152 5.00504 0.76877 5.02832C0.967012 5.04495 1.11398 5.14472 1.2507 5.27774C2.26926 6.26876 3.28781 7.25978 4.30295 8.2508C4.33713 8.28406 4.36789 8.32397 4.41574 8.38383C4.46359 8.32397 4.49435 8.28073 4.53195 8.24083C7.26974 5.58369 10.0041 2.92656 12.7351 0.266098C12.9709 0.0366333 13.2341 -0.069785 13.5622 0.0499356C13.8049 0.139726 13.9245 0.329284 14.0031 0.555423C13.9997 0.645214 13.9997 0.735004 13.9997 0.824795Z\"\n          fill={color || '#898989'}\n        />\n      </svg>\n    </Fragment>\n  )\n}\n\nexport default TickMarkIcon\n","import React, { Fragment, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport BasicAccordian from '../components/accordian/BasicAccordian'\nimport HubspotForm from '../components/hubspotForm'\nimport ClassIcon from '../components/svgs/class'\nimport TickMarkIcon from '../components/svgs/tickMark'\nimport DashPageHeader from '../components/ui/dashPageHeader'\nimport { SK_Form_Input, SK_Form_Label, SK_Wrapper } from '../styled/loader'\n\nconst data = [\n  {\n    name: 'Email Etiquette',\n    content: [\n      'How to avoid common email mistakes',\n      ' Learn the difference between professional and casual email etiquette',\n      'The basic structure of a good email',\n      'How to change your emails depending on your audience',\n    ],\n  },\n  {\n    name: 'Build the perfect resume: how to land your dream job',\n    content: [\n      'The key sections that every recruiter is looking for',\n      'Common mistakes made ',\n      'A sample resume created by a HR professional with over 10 years experience in recruiting',\n      'How to tailor your resume based on the industry you are applying to',\n      'Should you include a picture and address on your resume?',\n      'An open discussion',\n    ],\n  },\n  {\n    name: 'Create a cover letter that gets you hired',\n    content: [\n      'The importance of a personalized cover letter ',\n      'The basic structure of an awesome cover letter',\n      'How to do research on the company you are applying to',\n      'A sample cover letter created by a HR professional with over',\n      '10 years experience in recruiting ',\n    ],\n  },\n]\n\nconst Classes = () => {\n  const [show, setShow] = useState(0)\n  const [formLoaded, setFormLoaded] = useState(false)\n  const loader = (\n    <SK_Wrapper>\n      {[...Array(4)].map((_val, i) => (\n        <Fragment key={i}>\n          <SK_Form_Label className=\"mb-1\" />\n          <SK_Form_Input className=\"mb-3\" />\n        </Fragment>\n      ))}\n    </SK_Wrapper>\n  )\n  return (\n    <Fragment>\n      <DashPageHeader\n        name=\"Become a better version of yourself\"\n        title=\"Signup for upcoming classes\"\n      ></DashPageHeader>\n      <Wrapper>\n        <LHSWrapper>\n          <Fragment>\n            {!formLoaded && loader}\n            <HubspotForm\n              form={{\n                region: String(process.env.HUBSPOT_CLASS_REGION),\n                portalId: String(process.env.HUBSPOT_CLASS_PORTAL_ID),\n                formId: String(process.env.HUBSPOT_CLASS_FORM_ID),\n                target: '#hubspotForm',\n              }}\n              formLoaded={formLoaded}\n              setFormLoaded={setFormLoaded}\n            />\n          </Fragment>\n        </LHSWrapper>\n\n        <RHSWrapper>\n          <div className=\"acc_wrapper\">\n            {data.map((item, i) => (\n              <Fragment key={i}>\n                <BasicAccordian\n                  icon={<ClassIcon size=\"1.4rem\" color=\"#4F4F4F\" />}\n                  title={item.name}\n                  show={show === i}\n                  onClick={() => (show === i ? setShow(-1) : setShow(i))}\n                >\n                  <BodyWrapper>\n                    <p>This class will show you:</p>\n                    {item.content &&\n                      item.content.map((desc, i) => (\n                        <ListWrapper key={i}>\n                          <span>\n                            <TickMarkIcon size=\"0.9rem\" color=\"#4F4F4F\" />\n                          </span>\n                          {desc}\n                        </ListWrapper>\n                      ))}\n                  </BodyWrapper>\n                </BasicAccordian>\n              </Fragment>\n            ))}\n          </div>\n        </RHSWrapper>\n      </Wrapper>\n    </Fragment>\n  )\n}\n\nexport default Classes\n\nconst Wrapper = styled.div`\n  flex: 1;\n  display: grid;\n  grid-template-columns: 45% 55%;\n  background-color: rgba(226, 233, 243, 0.3);\n`\nconst RHSWrapper = styled.div`\n  padding: 2.5rem;\n  .acc_wrapper {\n    max-width: 600px;\n  }\n`\nconst LHSWrapper = styled.div`\n  background-color: #fff;\n  flex: 1;\n  padding: 2.5rem;\n\n  #hubspotForm,\n  .loader-wrapper {\n    max-width: 500px;\n  }\n`\nconst BodyWrapper = styled.div`\n  padding: 0 2rem 1rem 3rem;\n  width: 100%;\n`\nconst ListWrapper = styled.p`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  span {\n    width: 20px;\n    margin-right: 0.7rem;\n    height: 20px;\n    align-self: baseline;\n    margin-top: 0.2rem;\n  }\n`\n","import styled from 'styled-components'\n\nexport const ContentWrapper = styled.div<{ maxWidth: string }>`\n  width: 100%;\n  max-width: ${({ maxWidth }) => maxWidth};\n  p {\n    max-width: 575px;\n  }\n`\nexport const PaginationWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  button {\n    width: fit-content;\n    padding: 0 1rem;\n    margin: 0 1rem;\n  }\n`\nexport const DashHeader = styled.header`\n  min-height: 175px;\n  max-height: 175px;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  border-bottom: 1px solid #e2e9f3;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1.5rem;\n  h1 {\n    margin-bottom: 0;\n    span {\n      font-weight: normal;\n    }\n  }\n  div:last-child {\n    display: flex;\n    button {\n      margin: 0 1rem;\n    }\n  }\n  @media (max-width: 768px) {\n    div:last-child {\n      flex-direction: column;\n    }\n  }\n  @media (max-width: 480px) {\n    max-height: 100px;\n    min-height: 100px;\n    h1 {\n      margin: 0;\n    }\n    div:last-child {\n      display: block;\n      width: 100%;\n    }\n  }\n`\n"],"names":["id","form","formLoaded","setFormLoaded","useState","sdkReady","setSdkReady","useEffect","undefined","window","hbspt","script","document","createElement","type","src","async","onload","onerror","console","log","body","appendChild","getElementById","remove","timer","forms","create","region","portalId","formId","target","setTimeout","err","error","clearTimeout","Wrapper","className","styled","size","color","Fragment","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","name","title","children","customBtns","user","useAuth","history","useHistory","useViewport","role","Array","isArray","includes","onClick","push","btnType","icon","show","replace","toLowerCase","HeaderWrapper","Heading","ToggleWrapper","Toggle","active","BodyWrapper","theme","colors","primary","clipPath","data","content","setShow","loader","map","_val","i","LHSWrapper","String","process","RHSWrapper","item","desc","ListWrapper","ContentWrapper","maxWidth","PaginationWrapper","DashHeader"],"sourceRoot":""}