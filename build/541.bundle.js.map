{"version":3,"file":"541.bundle.js","mappings":"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","sources":["webpack://user-dashboard/./src/components/ui/downloadBtn.tsx","webpack://user-dashboard/./src/hooks/detectOutsideClick.ts","webpack://user-dashboard/./src/pages/coverletters/dashboard/templates.tsx","webpack://user-dashboard/./src/pages/coverletters/dashboard/my-designs.tsx","webpack://user-dashboard/./src/pages/coverletters/dashboard/index.tsx"],"sourcesContent":["import React, { Fragment, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useViewport } from '../../contexts/viewPort'\nimport detectOutsideClick from '../../hooks/detectOutsideClick'\nimport DocxIcon from '../svgs/docx'\nimport DownloadIcon from '../svgs/download'\nimport PdfIcon from '../svgs/pdf'\nimport TxtIcon from '../svgs/txt'\ninterface IProps {\n  id: number\n  show: boolean\n  setShow: (id: number | null) => void\n  handlePdf: () => void\n  handleTxt: () => void\n  handleDocx: () => void\n}\nconst DownloadBtn: React.FC<IProps> = ({\n  id,\n  show,\n  setShow,\n  handlePdf,\n  handleTxt,\n  handleDocx,\n}) => {\n  const { isOutside, ref } = detectOutsideClick()\n  const { width } = useViewport()\n  useEffect(() => {\n    if (!show || !isOutside || !ref || !ref.current) return\n    setShow(null)\n  }, [isOutside, ref])\n\n  const handleClick = (itemId: number) => {\n    show ? setShow(null) : setShow(itemId)\n  }\n  return (\n    <Fragment>\n      <Wrapper ref={ref} data-test-id=\"download\">\n        <ToggleBtn onClick={() => handleClick(id)}>\n          <DownloadIcon className=\"stroke\" />\n          <p style={{ fontSize: '.8rem' }}>Download</p>\n        </ToggleBtn>\n        <PopperWrapper open={show}>\n          <Fragment>\n            {width > 480 && <b>Download</b>}\n            <FlexWrapper>\n              <ToggleBtn onClick={handlePdf} data-test-id=\"pdf\">\n                <PdfIcon size=\"1.6rem\" className=\"fill\" />\n                <p>PDF</p>\n              </ToggleBtn>\n              <ToggleBtn onClick={handleDocx} data-test-id=\"docx\">\n                <DocxIcon size=\"1.6rem\" className=\"fill\" />\n                <p>Docx</p>\n              </ToggleBtn>\n              <ToggleBtn onClick={handleTxt} data-test-id=\"txt\">\n                <TxtIcon size=\"1.6rem\" className=\"fill\" />\n                <p>Txt</p>\n              </ToggleBtn>\n            </FlexWrapper>\n          </Fragment>\n        </PopperWrapper>\n      </Wrapper>\n    </Fragment>\n  )\n}\n\nexport default DownloadBtn\n\nconst Wrapper = styled.div`\n  display: block;\n  position: relative;\n`\n\nconst ToggleBtn = styled.div`\n  margin-top: 1rem;\n  text-align: center;\n  cursor: pointer;\n  user-select: none;\n  &:hover {\n    .stroke {\n      path {\n        stroke: ${({ theme }) => theme.colors.primary};\n      }\n    }\n    .fill {\n      path {\n        fill: ${({ theme }) => theme.colors.primary};\n      }\n    }\n    p {\n      color: ${({ theme }) => theme.colors.primary};\n    }\n  }\n\n  p {\n    color: #898989;\n    margin: 0;\n    font-size: 0.7rem;\n    text-align: center;\n  }\n`\nconst PopperWrapper = styled.div<{ open: boolean }>`\n  display: inline-flex;\n  flex-direction: column;\n  width: 230px;\n  text-align: center;\n  border: 1px solid #e2e9f3;\n  box-shadow: 7px 5px 31px rgba(0, 31, 78, 0.15);\n  background-color: #fff;\n  border-radius: 4px;\n  padding: 0.5rem;\n  position: absolute;\n  left: -10px;\n  margin-top: 1rem;\n  transition: transform ease-in-out 200ms, opacity 300ms, visibility 300ms;\n  visibility: ${({ open }) => (open ? 'visible' : 'hidden')};\n  opacity: ${({ open }) => (open ? 1 : 0)};\n  transform: ${({ open }) => (open ? 'scale3d(1, 1 ,1)' : 'scale3d(0, 0 ,0)')};\n  transform-origin: 10% top;\n  z-index: 10;\n  b {\n    font-size: 0.8rem;\n  }\n  &::before {\n    content: '';\n    display: block;\n    width: 12px;\n    height: 12px;\n    background-color: #fff;\n    border-top: 1px solid #e2e9f3;\n    border-left: 1px solid #e2e9f3;\n    position: absolute;\n    top: -6px;\n    left: 10%;\n    transform: rotate(45deg);\n  }\n  @media (max-width: 550px) {\n    width: 160px;\n  }\n  @media (max-width: 400px) {\n    width: 175px;\n  }\n`\n\nconst FlexWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n`\n","import { useEffect, useRef, useState } from 'react'\n\n/**\n * Detects if user clicks outside element boundary, tweaked for multiple elements in same list\n * @returns ref object of selected element\n */\nconst detectOutsideClick = () => {\n  const [isOutside, setIsOutside] = useState(false)\n  const ref = useRef<any>(null)\n\n  const handleClickOutside = (e: any) => {\n    if (!ref || !ref.current) return\n    if (!ref.current.contains(e.target)) {\n      setIsOutside(true)\n    } else {\n      setIsOutside(false)\n    }\n  }\n\n  useEffect(() => {\n    if (!ref || !ref.current) return\n    document.addEventListener('mousedown', handleClickOutside, true)\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside, true)\n    }\n  }, [ref.current])\n\n  return { isOutside, ref }\n}\n\nexport default detectOutsideClick\n","import React, { Fragment } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { SK_Wrapper, Spinner } from '../../../styled/loader'\nimport { getAllCoverLetterTemplates } from '../../../queries/coverLetterQueries'\n\nconst CoverLetterTemplates = () => {\n  const { data, isLoading, isError } = getAllCoverLetterTemplates()\n  // const [loading, setLoading] = useState<string | null>(null)\n\n  const history = useHistory()\n  // const queryClient = useQueryClient()\n  // const { setNotify } = useNotify()\n\n  // const createNewResume = async (name: string) => {\n  //   if (loading) return\n  //   setLoading(name)\n  //   try {\n  //     const { data: resData, error } = await newCoverLetter()\n  //     if (resData) {\n  //       resData.template = name\n  //       queryClient.setQueryData(['coverletter', resData._id], resData)\n  //       history.push(`edit/${resData._id}`)\n  //     }\n  //   } catch (err) {\n  //     setNotify({\n  //       type: 'danger',\n  //       heading: 'Err!',\n  //       message: 'Failed to create design',\n  //     })\n  //   }\n  //   setLoading(null)\n  // }\n\n  return (\n    <Fragment>\n      <Wrapper>\n        {isError ? (\n          <div className=\"align-center\" style={{ height: '30vh' }}>\n            <h3>Failed to load templates!</h3>\n          </div>\n        ) : !data || isLoading ? (\n          <SK_Wrapper>\n            <GridWrapper>\n              {[...Array(12)].map((item, i) => (\n                <Fragment key={i}>\n                  <SkeletonItem />\n                </Fragment>\n              ))}\n            </GridWrapper>\n          </SK_Wrapper>\n        ) : (\n          <GridWrapper data-test-id=\"template-grid\">\n            {(data as any).map((item: any, i: number) => (\n              <ItemWrapper\n                key={i}\n                onClick={() => history.push(`new/${item.name}`)}\n                data-test-id=\"template\"\n              >\n                <Item>\n                  <img src={item.thumbnail} />\n                  <Fragment>\n                    <Loader>\n                      <Spinner size=\"1.5rem\" type=\"primary\" />\n                    </Loader>\n                  </Fragment>\n                </Item>\n                <p>{item.name}</p>\n              </ItemWrapper>\n            ))}\n          </GridWrapper>\n        )}\n      </Wrapper>\n    </Fragment>\n  )\n}\n\nexport default CoverLetterTemplates\n\nconst Loader = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  margin: auto;\n  width: 100%;\n  height: 100%;\n  display: block;\n  background-color: #cfcfcf5c;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\nconst Wrapper = styled.div`\n  padding: 2rem;\n`\n\nconst GridWrapper = styled.div`\n  display: grid;\n  grid-gap: 3rem 2rem;\n  grid-template-columns: repeat(auto-fill, minmax(230px, 1fr));\n  @media (max-width: 480px) {\n    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n  }\n`\nconst SkeletonItem = styled.div`\n  border-radius: 6px;\n  background-color: #eee;\n  min-height: 325px;\n  min-width: 230px;\n  max-width: 230px;\n  margin: 0 auto;\n  height: 100%;\n  width: 100%;\n  @media (max-width: 480px) {\n    min-height: 225px;\n    min-width: 150px;\n    max-width: 150px;\n  }\n`\nconst Item = styled.div`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  height: fit-content;\n  width: fit-content;\n  min-height: 325px;\n  min-width: 230px;\n  margin: 0 auto;\n  padding: 0;\n  background-color: #eee;\n  transition: ease-in-out 0.15s;\n  outline: 1px solid #eee;\n  border-radius: 6px;\n  box-shadow: 4px 8px 15px 6px #eeeeee78;\n  overflow: hidden;\n  img {\n    width: 100%;\n    height: 100%;\n  }\n  @media (max-width: 480px) {\n    min-height: 225px;\n    min-width: 150px;\n  }\n`\nconst ItemWrapper = styled.div`\n  cursor: pointer;\n  user-select: none;\n  margin: 0 auto;\n\n  p {\n    text-transform: capitalize;\n    width: 100%;\n    text-align: center;\n    font-weight: 700;\n    font-size: 1rem;\n    transition: ease-in-out 0.3s;\n  }\n  &:hover {\n    ${Item} {\n      outline-color: ${({ theme }) => theme.shades.primary[2]};\n      outline-width: 4px;\n    }\n    p {\n      color: ${({ theme }) => theme.colors.primary};\n    }\n  }\n`\n","import React, { Fragment, useState } from 'react'\nimport { useQueryClient } from 'react-query'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport DustBinIcon from '../../../components/svgs/dustbin'\nimport EditIcon from '../../../components/svgs/edit'\nimport PlusIcon from '../../../components/svgs/plus'\nimport ConfirmationBox from '../../../components/ui/confirmation'\nimport DownloadBtn from '../../../components/ui/downloadBtn'\nimport { useNotify } from '../../../contexts/notify'\nimport { useViewport } from '../../../contexts/viewPort'\nimport { Button } from '../../../styled/button'\nimport { SK_Wrapper, Spinner } from '../../../styled/loader'\nimport {\n  getAllCoverLetters,\n  GetCoverletterParams,\n} from '../../../queries/coverLetterQueries'\nimport {\n  deleteSingleCoverletter,\n  handleCoverletterDownload,\n} from '../../../helpers/coverletter'\nimport { PaginationWrapper } from '../../../styled/pages'\n\nconst MyDesigns = () => {\n  const [loading, setLoading] = useState<string | null>(null)\n  const [showDownload, setShowDownload] = useState<number | null>(null)\n  const [deleteItemId, setDeleteItemId] = useState<string | null>(null)\n  const [page, setPage] = useState(0)\n\n  const params: GetCoverletterParams = {\n    page,\n    limit: 15,\n  }\n  const { setNotify } = useNotify()\n\n  const { data, isError, isLoading }: any = getAllCoverLetters(params)\n  const { width } = useViewport()\n  const history = useHistory()\n  const queryClient = useQueryClient()\n\n  const handleDownload = async (\n    id: string,\n    name: string,\n    type: 'pdf' | 'docx' | 'txt'\n  ) => {\n    if (loading) return\n    setLoading(id)\n    setShowDownload(null)\n    await handleCoverletterDownload(name, id, type, setNotify)\n    setLoading(null)\n  }\n  const handlePage = (type: 'next' | 'prev') => {\n    type === 'next' && setPage((page) => page + 1)\n    type === 'prev' && setPage((page) => page - 1)\n  }\n\n  return (\n    <Fragment>\n      {isError ? (\n        <div className=\"align-center\" style={{ height: '30vh' }}>\n          <h3>Failed to load designs!</h3>\n        </div>\n      ) : !data || isLoading ? (\n        <SK_Wrapper>\n          <GridWrapper>\n            {[...Array(12)].map((item, i) => (\n              <Fragment key={i}>\n                <SkeletonItem />\n              </Fragment>\n            ))}\n          </GridWrapper>\n        </SK_Wrapper>\n      ) : (\n        <Fragment>\n          <ConfirmationBox\n            title=\"Delete\"\n            msg=\"Are you sure?\"\n            show={deleteItemId ? true : false}\n          >\n            <Button\n              btnType=\"primary\"\n              size=\"lg\"\n              onClick={() => setDeleteItemId(null)}\n            >\n              Cancel\n            </Button>\n            <Button\n              btnType=\"ghost\"\n              size=\"lg\"\n              onClick={() =>\n                deleteItemId &&\n                deleteSingleCoverletter(\n                  deleteItemId,\n                  data,\n                  loading,\n                  setLoading,\n                  setDeleteItemId,\n                  setNotify,\n                  queryClient\n                )\n              }\n            >\n              Delete\n            </Button>\n          </ConfirmationBox>\n          <GridWrapper\n            style={loading ? { pointerEvents: 'none' } : {}}\n            data-test-id=\"my-designs\"\n          >\n            <CreateNew onClick={() => history.push('/coverletters/new')}>\n              <PlusIcon size=\"1.7rem\" />\n              {width > 480 && <p>Create Coverletter</p>}\n            </CreateNew>\n            {data.items.map((item: any, i: number) => (\n              <ItemWrapper key={i}>\n                <Item\n                  onClick={() => history.push(`coverletters/edit/${item._id}`)}\n                >\n                  {item.attachments && item.attachments.thumbnail ? (\n                    <img src={item.attachments.thumbnail} />\n                  ) : (\n                    <img src=\"https://resume-mango.s3.us-east-2.amazonaws.com/public/template-images/resumes/empty/template10.jpg\" />\n                  )}\n                  <Fragment>\n                    {loading === item._id ? (\n                      <Loader>\n                        <Spinner size=\"1.5rem\" type=\"primary\" />\n                      </Loader>\n                    ) : null}\n                  </Fragment>\n                </Item>\n                <ToggleWrapper>\n                  <DownloadBtn\n                    id={i}\n                    show={showDownload === i}\n                    setShow={setShowDownload}\n                    handlePdf={() =>\n                      handleDownload(item._id, item.title, 'pdf')\n                    }\n                    handleDocx={() =>\n                      handleDownload(item._id, item.title, 'docx')\n                    }\n                    handleTxt={() =>\n                      handleDownload(item._id, item.title, 'txt')\n                    }\n                  />\n                  <ToggleBtn\n                    data-test-id=\"edit-coverletter\"\n                    onClick={() =>\n                      history.push(`coverletters/edit/${item._id}`)\n                    }\n                  >\n                    <EditIcon />\n                    <p>Edit</p>\n                  </ToggleBtn>\n                  <ToggleBtn\n                    data-test-id=\"delete-coverletter\"\n                    onClick={() => setDeleteItemId(item._id)}\n                  >\n                    <DustBinIcon />\n                    <p>Delete</p>\n                  </ToggleBtn>\n                </ToggleWrapper>\n              </ItemWrapper>\n            ))}\n          </GridWrapper>\n          {data.total > params.limit && (\n            <PaginationWrapper className=\"mb-3\">\n              <Button\n                btnType=\"secondary\"\n                disabled={page === 0}\n                onClick={() => handlePage('prev')}\n              >\n                Previous\n              </Button>\n              <Button\n                btnType=\"secondary\"\n                disabled={page + 1 >= Math.ceil(data.total / data.limit)}\n                onClick={() => handlePage('next')}\n              >\n                Next\n              </Button>\n            </PaginationWrapper>\n          )}\n        </Fragment>\n      )}\n    </Fragment>\n  )\n}\n\nexport default MyDesigns\n\nconst GridWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(230px, 1fr));\n  grid-gap: 3rem 2rem;\n  padding: 2rem;\n  @media (max-width: 600px) {\n    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n  }\n  @media (max-width: 400px) {\n    grid-template-columns: (1, 1fr);\n  }\n`\nconst CreateNew = styled.div`\n  display: flex;\n  cursor: pointer;\n  user-select: none;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  background-color: #fff !important;\n  background-image: url(\"data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' stroke='%23ACACACFF' stroke-width='2' stroke-dasharray='5%2c 8' stroke-dashoffset='0' stroke-linecap='square'/%3e%3c/svg%3e\");\n  max-width: 230px;\n  max-height: 325px;\n  min-height: 325px;\n  min-width: 230px;\n  height: 100%;\n  width: 100%;\n  margin: 0 auto;\n\n  svg {\n    path {\n      fill: #949494;\n      stroke-width: 2.5;\n    }\n  }\n  p {\n    color: #949494;\n    font-size: 0.875rem;\n  }\n  &:hover {\n    svg {\n      path {\n        stroke: ${({ theme }) => theme.colors.primary};\n      }\n    }\n    p {\n      color: ${({ theme }) => theme.colors.primary};\n    }\n  }\n  @media (max-width: 600px) {\n    min-width: 160px;\n    max-width: 160px;\n    min-height: 82%;\n    max-height: 82%;\n  }\n  @media (max-width: 400px) {\n    min-height: 50px;\n    max-height: 50px;\n    max-width: 100%;\n  }\n`\nconst Item = styled.div`\n  display: flex;\n  overflow: hidden;\n  background-color: #f7f7f7;\n  position: relative;\n  margin: 0 auto;\n  transition: ease-in-out 0.3s;\n  min-height: 325px;\n  outline: 8px solid #eee;\n  border-radius: 1px;\n  &:hover {\n    outline-color: ${({ theme }) => theme.shades.primary[3]};\n  }\n  img {\n    width: 100%;\n    height: 100%;\n  }\n  @media (max-width: 600px) {\n    min-height: 225px;\n  }\n  @media (max-width: 400px) {\n    min-width: unset;\n    max-width: unset;\n    min-height: unset;\n    max-height: unset;\n  }\n`\n\nconst ItemWrapper = styled.div`\n  cursor: pointer;\n  user-select: none;\n  min-height: 325px;\n  min-width: 230px;\n  height: 100%;\n  width: 100%;\n  max-width: 175px;\n  margin: 0 auto;\n\n  @media (max-width: 600px) {\n    min-height: 225px;\n    min-width: 150px;\n  }\n`\n\nconst Loader = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  margin: auto;\n  width: 100%;\n  height: 100%;\n  display: block;\n  background-color: #cfcfcf5c;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n`\nconst ToggleBtn = styled.div`\n  margin-top: 1rem;\n  text-align: center;\n  cursor: pointer;\n  user-select: none;\n  &:hover {\n    svg {\n      path {\n        fill: ${({ theme }) => theme.colors.primary};\n      }\n    }\n    p {\n      color: ${({ theme }) => theme.colors.primary};\n    }\n  }\n\n  p {\n    color: #898989;\n    margin: 0;\n    font-size: 0.8rem;\n    text-align: center;\n  }\n`\nconst SkeletonItem = styled.div`\n  border-radius: 6px;\n  background-color: #eee;\n  min-height: 325px;\n  min-width: 230px;\n  max-height: 325px;\n  max-width: 230px;\n  margin: 0 auto;\n  height: 100%;\n  width: 100%;\n  @media (max-width: 600px) {\n    min-height: 225px;\n    min-width: 150px;\n    max-height: 225px;\n    max-width: 150px;\n  }\n`\n","import React, { Fragment } from 'react'\nimport { NavLink, Route, Switch, useRouteMatch } from 'react-router-dom'\nimport DashPageHeader from '../../../components/ui/dashPageHeader'\nimport SubNavBar from '../../../components/ui/subNavbar'\nimport PageNotFound from '../../404'\nimport ResumeTemplates from './templates'\nimport MyDesigns from './my-designs'\n\nconst CoverLetterDashboard = () => {\n  const { path, url } = useRouteMatch()\n\n  return (\n    <Fragment>\n      <DashPageHeader title=\"Cover Letters\"></DashPageHeader>\n      <SubNavBar>\n        <SubNavBar.Link>\n          <NavLink exact to={`${url}`}>\n            My Designs\n          </NavLink>\n        </SubNavBar.Link>\n        <SubNavBar.Link>\n          <NavLink to={`${url}/all-templates`}>All Templates </NavLink>\n        </SubNavBar.Link>\n      </SubNavBar>\n\n      <Switch>\n        <Route exact path={path} component={MyDesigns} />\n\n        <Route\n          exact\n          path={`${path}/all-templates`}\n          component={ResumeTemplates}\n        />\n\n        <Route component={PageNotFound} />\n      </Switch>\n    </Fragment>\n  )\n}\n\nexport default CoverLetterDashboard\n"],"names":["id","show","setShow","handlePdf","handleTxt","handleDocx","detectOutsideClick","isOutside","ref","width","useViewport","useEffect","current","Fragment","Wrapper","ToggleBtn","onClick","className","style","fontSize","PopperWrapper","open","FlexWrapper","size","styled","theme","colors","primary","useState","setIsOutside","useRef","handleClickOutside","e","contains","target","document","addEventListener","removeEventListener","getAllCoverLetterTemplates","data","isLoading","isError","history","useHistory","height","GridWrapper","Array","map","item","i","SkeletonItem","ItemWrapper","push","name","Item","src","thumbnail","Loader","type","shades","loading","setLoading","showDownload","setShowDownload","deleteItemId","setDeleteItemId","page","setPage","params","limit","setNotify","useNotify","getAllCoverLetters","queryClient","useQueryClient","handleDownload","handleCoverletterDownload","handlePage","title","msg","btnType","deleteSingleCoverletter","pointerEvents","CreateNew","items","_id","attachments","ToggleWrapper","total","disabled","Math","ceil","useRouteMatch","path","url","exact","to","component","MyDesigns","ResumeTemplates","PageNotFound"],"sourceRoot":""}