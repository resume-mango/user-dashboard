{"version":3,"file":"717.bundle.js","mappings":"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","sources":["webpack://user-dashboard/./src/components/form/Input.tsx","webpack://user-dashboard/./src/components/ui/FormButton.tsx","webpack://user-dashboard/./src/components/ui/dashPageHeader.tsx","webpack://user-dashboard/./src/components/ui/subNavbar.tsx","webpack://user-dashboard/./src/helpers/axiosRequest.ts","webpack://user-dashboard/./src/helpers/date.ts","webpack://user-dashboard/./src/hooks/getQueryAdvance.ts","webpack://user-dashboard/./src/pages/404.tsx","webpack://user-dashboard/./src/styled/badge.ts","webpack://user-dashboard/./src/queries/mebershipQueries.ts","webpack://user-dashboard/./src/components/svgs/clock.tsx","webpack://user-dashboard/./src/styled/table.ts","webpack://user-dashboard/./src/pages/my-account/membershipList.tsx","webpack://user-dashboard/./src/components/svgs/linkArrow.tsx","webpack://user-dashboard/./src/pages/my-account/memberships.tsx","webpack://user-dashboard/./src/pages/my-account/payments.tsx","webpack://user-dashboard/./src/styled/pages.ts","webpack://user-dashboard/./src/components/ui/message.tsx","webpack://user-dashboard/./src/validations/user.ts","webpack://user-dashboard/./src/apis/user.ts","webpack://user-dashboard/./src/helpers/profileHelper.ts","webpack://user-dashboard/./src/pages/my-account/profile/index.tsx","webpack://user-dashboard/./src/pages/my-account/index.tsx","webpack://user-dashboard/./src/styled/form.ts"],"sourcesContent":["import React, { Fragment } from 'react'\nimport { useFormContext } from 'react-hook-form'\nimport { InvalidFeedBack } from '../../styled/form'\n\ninterface IInput {\n  name: string\n  label?: string\n  className?: string\n  style?: React.CSSProperties\n  isFieldArray?: boolean\n  hideError?: boolean\n}\n\nconst Input: React.FC<\n  IInput &\n    React.DetailedHTMLProps<\n      React.InputHTMLAttributes<HTMLInputElement>,\n      HTMLInputElement\n    >\n> = ({ name, label, isFieldArray, className, style, hideError, ...props }) => {\n  const {\n    register,\n    formState: { errors },\n  } = useFormContext()\n\n  let errMsg = null\n  if (isFieldArray && !hideError) {\n    const Errname = name.split('.')\n    const getKeyVal = (selectionArray: Array<any>, obj: any) => {\n      if (Object.keys(obj).length > 0) {\n        selectionArray.forEach((key) => {\n          if (!obj || !obj[key]) obj = null\n          else obj = obj[key]\n        })\n      }\n      const msg = obj && typeof obj === 'string' && obj.split('.')[1]\n      return msg ? msg : obj\n    }\n    errMsg =\n      Errname.length === 3 &&\n      Object.keys(errors).length > 0 &&\n      errors[Errname[0]]\n        ? getKeyVal([Errname[1], Errname[2], 'message'], errors[Errname[0]])\n        : null\n  }\n\n  return (\n    <Fragment>\n      <div className={className} style={style}>\n        {label && <label htmlFor={name}>{label}</label>}\n        <input\n          className={`form-control ${(errors[name] || errMsg) && 'is-invalid'}`}\n          {...register(name)}\n          {...props}\n        />\n        {errors[name] && !hideError && (\n          <InvalidFeedBack className=\"invalid-feild\">\n            {errors[name].message}\n          </InvalidFeedBack>\n        )}\n        {errMsg && !hideError && (\n          <InvalidFeedBack className=\"invalid-feild\">{errMsg}</InvalidFeedBack>\n        )}\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Input\n","import React, { Fragment } from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '../../styled/loader'\n\nexport interface BtnProps {\n  btnType: 'primary' | 'secondary' | 'ghost' | 'text' | 'link'\n  btnSize: 'lg' | 'sm' | 'xl'\n  fontSize?: string\n  backgroundColor?: string\n  color?: string\n  type?: 'button' | 'reset' | 'submit' | undefined\n  width?: string\n  setLoading: (val: boolean) => void\n}\n\ninterface IProps {\n  loading?: boolean\n  disabled?: boolean\n\n  children: any\n}\n\nconst FormButton: React.FC<IProps & any> = ({\n  loading,\n  disabled,\n  children,\n  style,\n  ...rest\n}) => {\n  return (\n    <Fragment>\n      <StyledButton\n        {...rest}\n        disabled={disabled ? disabled : loading}\n        style={style}\n      >\n        {loading ? (\n          <Spinner\n            size=\"20px\"\n            type={\n              rest.btnType === 'primary' ||\n              rest.btnType === 'secondary' ||\n              rest.btnType === 'ghost'\n                ? 'white'\n                : 'primary'\n            }\n          />\n        ) : (\n          children\n        )}\n      </StyledButton>\n    </Fragment>\n  )\n}\n\nexport default FormButton\n\nexport const StyledButton = styled.button<BtnProps>`\n  background-color: ${({ btnType, theme, backgroundColor }) =>\n    backgroundColor\n      ? backgroundColor\n      : btnType === 'secondary' || btnType === 'text' || btnType === 'link'\n      ? theme.colors.white\n      : btnType === 'ghost'\n      ? theme.colors.light\n      : theme.colors.primary};\n  height: ${({ btnSize }) =>\n    btnSize === 'xl' ? '48px' : btnSize === 'lg' ? '40px' : '32px'};\n  color: ${({ btnType, theme, disabled }) =>\n    !disabled\n      ? btnType === 'secondary' || btnType === 'link'\n        ? theme.colors.primary\n        : btnType === 'ghost' || btnType === 'text'\n        ? theme.colors.dark\n        : theme.colors.white\n      : theme.colors.white};\n  border: 1px solid\n    ${({ btnType, theme }) =>\n      btnType === 'secondary' || btnType === 'primary'\n        ? theme.colors.primary\n        : 'transparent'};\n  user-select: none;\n  font-size: ${({ fontSize }) => fontSize || '0.875rem'};\n  text-align: center;\n  justify-content: center;\n  font-weight: normal;\n  font-style: normal;\n  letter-spacing: 0.035em;\n  width: ${({ width }) => (width ? width : 'fit-content')};\n  padding: 0 1.5rem;\n  border-radius: 4px;\n  margin: 0;\n  transition: background 300ms ease-in-out;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  transition: all 150ms ease-in-out;\n  &:hover,\n  &:focus {\n    ${({ btnType, theme }) =>\n      btnType === 'primary' || btnType === 'secondary'\n        ? `box-shadow: 0 0 1px 3px ${theme.shades.primary[3]}`\n        : btnType === 'ghost'\n        ? `background-color: #e6e6e6`\n        : null};\n  }\n  &:disabled {\n    color: ${({ theme }) => theme.colors.dark};\n    border: transparent;\n    background-color: ${({ theme }) => theme.colors.light};\n  }\n  @media (max-width: 834px) {\n    height: ${({ btnSize }) =>\n      btnSize === 'xl' ? '40px' : btnSize === 'lg' ? '40px' : '32px'};\n    font-size: 0.875rem;\n  }\n  @media (max-width: 480px) {\n    height: ${({ btnSize }) =>\n      btnSize === 'xl' ? '32px' : btnSize === 'lg' ? '40px' : '32px'};\n    font-size: 0.75rem;\n  }\n`\n","import React, { Fragment, ReactElement, ReactNode } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useAuth } from '../../contexts/authProvider'\nimport { useViewport } from '../../contexts/viewPort'\nimport { Button } from '../../styled/button'\n\ninterface ILayout {\n  name?: string\n  title: string | ReactElement<any, any>\n  customBtns?: boolean\n  children?: ReactNode\n}\n\nconst DashPageHeader: React.FC<ILayout> = ({\n  name,\n  title,\n  children,\n  customBtns,\n}) => {\n  const { user } = useAuth()\n  const history = useHistory()\n  const { width } = useViewport()\n\n  return (\n    <Fragment>\n      <Header>\n        <div>\n          {name && <p>{name}</p>}\n          <h1>{title}</h1>\n        </div>\n        {width > 800 && (\n          <div>\n            {!customBtns ? (\n              <Fragment>\n                {user &&\n                user.role &&\n                Array.isArray(user.role) &&\n                user.role.includes('ceo') ? (\n                  <Button\n                    onClick={() => history.push('/resumes/new')}\n                    btnType=\"primary\"\n                    size=\"sm\"\n                  >\n                    Create Resume\n                  </Button>\n                ) : (\n                  <Button\n                    onClick={() => history.push('/subscribe')}\n                    btnType=\"primary\"\n                    size=\"sm\"\n                  >\n                    Upgrade\n                  </Button>\n                )}\n\n                <Button\n                  onClick={() => history.push('/progress-tracker')}\n                  btnType=\"ghost\"\n                  size=\"sm\"\n                >\n                  Tracker\n                </Button>\n              </Fragment>\n            ) : (\n              children\n            )}\n          </div>\n        )}\n      </Header>\n    </Fragment>\n  )\n}\n\nexport default DashPageHeader\n\nconst Header = styled.header`\n  min-height: 175px;\n  max-height: 175px;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  border-bottom: 1px solid #e2e9f3;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1.5rem;\n  h1 {\n    margin-bottom: 0;\n    span {\n      font-weight: normal;\n    }\n  }\n  div:last-child {\n    display: flex;\n    button {\n      margin: 0 1rem;\n    }\n  }\n  @media (max-width: 768px) {\n    div:last-child {\n      flex-direction: column;\n    }\n  }\n  @media (max-width: 480px) {\n    max-height: 100px;\n    min-height: 100px;\n    h1 {\n      margin: 0;\n    }\n    div:last-child {\n      display: block;\n      width: 100%;\n    }\n  }\n`\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\n\nconst SubNavBar = ({\n  children,\n  style,\n}: {\n  children: ReactNode\n  style?: any\n}) => {\n  return <SubNav style={style}>{children}</SubNav>\n}\n\nconst SubNavLink = ({ children }: { children: ReactNode }) => {\n  return <li>{children}</li>\n}\nSubNavBar.Link = SubNavLink\n\nexport default SubNavBar\n\nconst SubNav = styled.ul`\n  display: flex;\n  padding: 0 0.875rem;\n  border-bottom: 1px solid #e2e9f3;\n  user-select: none;\n  li {\n    display: flex;\n    float: left;\n    padding: 0;\n    a {\n      color: #878787;\n      padding: 1.5rem 1rem 0.5rem;\n      margin: 0 1rem;\n      transition: color ease-in-out 300ms;\n      &:hover {\n        color: #f08438;\n      }\n      &.active {\n        font-weight: 700;\n        color: #f08438;\n        border-bottom: 2px solid #f08438;\n      }\n    }\n  }\n  @media (max-width: 480px) {\n    justify-content: space-between;\n    li {\n      a {\n        margin: 0 0.5rem;\n        padding: 0.5rem 0;\n        font-size: 0.8rem;\n      }\n    }\n  }\n`\n","import axios, { AxiosResponse } from 'axios'\n/**\n * Axios api request helper\n * @param options axios request options\n * @returns data | error\n */\nconst axiosRequest = async (\n  options: any\n): Promise<{ data: any; error: any }> => {\n  let data: any = ''\n  let error: any = ''\n  try {\n    const { data: res }: AxiosResponse<any> = await axios.request(options)\n    data = res || ''\n  } catch (err: any) {\n    error =\n      (err.response && err.response.data && err.response.data.error.message) ||\n      'Something went wrong!'\n  }\n\n  return { data, error }\n}\n\nexport default axiosRequest\n","/**\n * Converts Normal date to ISO string\n * @param date as Date\n * @returns ISO Date\n */\nexport const convertDatetoISO = (date: Date) => {\n  return new Date(date).toISOString()\n}\n\n/**\n * Converts UNIX date to ISO date\n * @param date as UNIX Date\n * @returns ISO Date\n */\nexport const convertUnixToISODate = (date: number) => {\n  const result = new Date(date * 1000).toISOString()\n  return result\n}\n\n/**\n * Converts ISO Date to UNIX date\n * @param date as Date\n * @returns Unix Date\n */\nexport const convertISOToUnixDate = (date: Date) => {\n  const result = Math.floor(new Date(date).getTime() / 1000)\n  return result\n}\n\n/**\n * converts Normal Date to HTML Input friendly date\n * @param date Date\n * @returns HTML Input freindly date\n */\nexport const convertDateToInput = (date: Date) => {\n  return new Date(date).toISOString().slice(0, 16) as any\n}\n","import { useQuery, UseQueryOptions } from 'react-query'\nimport { useAuth } from '../contexts/authProvider'\n\n/**\n * Advance hook for useQuery()\n * @param identifier queryKey  identifier\n * @param fetcher queryFn()\n * @param enabled should query be enabled?\n * @param params useQuery() options\n * @returns useQuery()\n */\nconst getQueryAdvance = (\n  identifier: any,\n  fetcher: () => any,\n  enabled = true,\n  params?: Omit<\n    UseQueryOptions<any, unknown, any, any>,\n    'queryKey' | 'queryFn' | 'enabled'\n  >\n) => {\n  const { user, token } = useAuth()\n  const ref = user && user.ref\n\n  return useQuery(identifier, fetcher, {\n    enabled: !!token && !!ref && enabled,\n    ...params,\n  })\n}\n\nexport default getQueryAdvance\n","import React from 'react'\n\nconst PageNotFound = () => {\n  return (\n    <div className='align-center'>\n      <div>\n        <h3 className='text-center'>This page could not be found</h3>\n      </div>\n    </div>\n  )\n}\n\nexport default PageNotFound\n","import styled from 'styled-components'\n\nexport const Badge = styled.span<{\n  type: 'success' | 'ghost' | 'info' | 'primary' | 'danger'\n}>`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.2rem 0.7rem;\n  height: fit-content;\n  background-color: ${({ type, theme }) =>\n    type === 'success'\n      ? 'rgb(67 196 66 / 30%)'\n      : type === 'ghost'\n      ? '#eee'\n      : type === 'primary'\n      ? theme.shades.primary[3]\n      : type === 'danger'\n      ? theme.shades.danger\n      : theme.shades.info};\n  color: ${({ theme }) => theme.shades.dark[1]};\n  text-transform: capitalize;\n  font-size: 0.75rem;\n  border-radius: 4px;\n  @media (max-width: 1300px) {\n    font-size: 0.7rem;\n  }\n`\n","import axios from 'axios'\nimport { QueryClient, useMutation } from 'react-query'\nimport getQueryAdvance from '../hooks/getQueryAdvance'\n\ntype AllSubsParams = {\n  page: number\n  limit: number\n  exclude_id?: string\n}\n\n/**\n * Gets user subscription\n * @param enabled boolean\n * @returns UseQueryResult\n */\nexport const getSubscription = (enabled?: boolean) => {\n  const fetcher = async () => {\n    const { data } = await axios.get(`/subscription`)\n    return data\n  }\n\n  return getQueryAdvance('activeSubscription', () => fetcher(), enabled)\n}\n\n/**\n * Api request to get all subscriptions\n * @param params from interface AllSubsParams\n * @returns all subscription list\n */\nexport const AllSubsfetcher = async (params: AllSubsParams) => {\n  const { data } = await axios.get(`/subscriptions`, {\n    params,\n  })\n  return data\n}\n\n/**\n * Get all subscription query\n * @param params from interface AllSubsParams\n * @param enabled boolean\n * @returns UseQueryResult\n */\nexport const getAllSubscriptions = (\n  params: AllSubsParams,\n  enabled?: boolean\n) => {\n  return getQueryAdvance(\n    ['subscription', params.page],\n    () => AllSubsfetcher(params),\n    enabled\n  )\n}\n\n/**\n * Gets all subscription payments\n * @param page number\n * @param enabled boolean\n * @returns UseQueryResult\n */\nexport const getSubscriptionPayments = (page: number, enabled?: boolean) => {\n  const fetcher = async () => {\n    const { data } = await axios.get(`/payments`, {\n      params: { page },\n    })\n    return data\n  }\n\n  return getQueryAdvance(['payments', page], () => fetcher(), enabled)\n}\n\n/**\n * Cancels user subscription\n * @param setToken from useAuth()\n * @param setNotify from useNotify()\n * @param queryClient from useQueryClient()\n * @returns UseMutationResult\n */\nexport const cancelSubscription = (\n  setToken: (_val: string) => void,\n  setNotify: (_val: any) => void,\n  queryClient: QueryClient\n) => {\n  return useMutation(() => axios.delete('/subscription'), {\n    onSuccess: async (res) => {\n      setToken('')\n      queryClient.setQueryData('activeSubscription', res.data)\n      queryClient.invalidateQueries('subscription')\n    },\n    onError: ({ _response }) => {\n      setNotify({\n        type: 'danger',\n        heading: 'Err!',\n        message: 'Failed to cancel subscription',\n      })\n    },\n  })\n}\n","import React, { Fragment } from 'react'\ninterface IconProps {\n  size?: string\n  color?: string\n  className?: string\n  style?: React.CSSProperties\n}\nconst ClockIcon = ({ size, color, className, style }: IconProps) => {\n  return (\n    <Fragment>\n      <svg\n        style={style}\n        width={size || '1rem'}\n        height={size || '1rem'}\n        className={className || ''}\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fill={color || '#898989'}\n          d=\"M12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C17.5 22 22 17.5 22 12S17.5 2 12 2M7.7 15.5L7 14.2L11 11.9V7H12.5V12.8L7.7 15.5Z\"\n        />\n      </svg>\n    </Fragment>\n  )\n}\n\nexport default ClockIcon\n","import styled from 'styled-components'\n\nexport const TableList = styled.table<{\n  borderTop?: boolean\n  size?: 'sm' | 'lg'\n}>`\n  margin-bottom: 2rem;\n\n  p,\n  td,\n  th {\n    font-size: 0.875rem;\n  }\n  th,\n  td {\n    text-align: start;\n    padding: 0.5rem 1.25rem;\n    height: ${({ size }) => (size === 'sm' ? '50px' : '75px')};\n  }\n\n  thead {\n    tr {\n      border-top-width: ${({ borderTop }) => (borderTop ? 1 : 0)};\n    }\n  }\n  tbody {\n    tr {\n      transition: background ease 0.3s;\n      &:hover {\n        background-color: #dddddd40;\n      }\n    }\n  }\n  @media (max-width: 1300px) {\n    td {\n      font-size: 0.7rem;\n    }\n  }\n`\n\nTableList.defaultProps = {\n  borderTop: true,\n  size: 'lg',\n}\n\nexport const TableThumbnail = styled.div<{ size?: string; rounded?: boolean }>`\n  width: ${({ size }) => (size ? size : '70px')};\n  height: ${({ size }) => (size ? size : '70px')};\n  min-width: ${({ size }) => (size ? size : '70px')};\n  min-height: ${({ size }) => (size ? size : '70px')};\n  background: #eee;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 1.5rem;\n  border-radius: ${({ rounded }) => (rounded ? '50%' : 0)};\n  overflow: hidden;\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    object-position: center;\n  }\n`\nexport const TableDetailsThumbnailWrapper = styled.div`\n  text-align: start !important;\n  display: flex;\n  align-items: center;\n  p {\n    margin: 0;\n    color: #777;\n  }\n  &:hover {\n    b {\n      text-decoration: underline;\n      text-decoration-color: ${({ theme }) => theme.colors.primary};\n      color: ${({ theme }) => theme.colors.primary};\n      text-underline-position: under;\n    }\n  }\n`\n","import dayjs from 'dayjs'\nimport React, { Fragment, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button } from '../../styled/button'\nimport { Spinner } from '../../styled/loader'\nimport { TableList } from '../../styled/table'\nimport { getAllSubscriptions } from '../../queries/mebershipQueries'\n\ninterface IMembershipList {\n  setShow: (_val: boolean) => void\n}\n\nconst MembershipList = ({ setShow }: IMembershipList) => {\n  const [page, setPage] = useState(0)\n\n  const limit = 10\n  const handlePage = (type: 'next' | 'prev') => {\n    type === 'next' && setPage((page) => page + 1)\n    type === 'prev' && setPage((page) => page - 1)\n  }\n\n  const params = {\n    limit,\n    page,\n    // exclude_id,\n  }\n\n  const { data, isLoading, isError } = getAllSubscriptions(params)\n\n  return (\n    <Fragment>\n      {isError && !data ? (\n        <div className=\"flex-center\">\n          <h3>Failed to load memberships!</h3>\n        </div>\n      ) : isLoading ? (\n        <div className=\"flex-center\">\n          <Spinner size=\"2rem\" type=\"primary\" />\n        </div>\n      ) : data ? (\n        <Fragment>\n          <HeadingWrapper>\n            <div>\n              <h4>Last Memberships</h4>\n              <p>List of all previosly subscribed membership plans.</p>\n            </div>\n            <div></div>\n            <Button btnType=\"secondary\" onClick={() => setShow(false)}>\n              View Current Plan\n            </Button>\n          </HeadingWrapper>\n          <Fragment>\n            {data.items && data.items.length > 0 ? (\n              <Fragment>\n                <TableList size=\"sm\" className=\"mb-4\">\n                  <thead>\n                    <tr>\n                      <th style={{ width: '25%' }}>ID</th>\n                      <th style={{ width: 'auto' }}>Plan Name</th>\n                      <th style={{ width: '10%' }}>Amount</th>\n                      <th style={{ width: '15%' }}>Status</th>\n                      <th style={{ width: '15%' }}>Created</th>\n                      <th style={{ width: '15%' }}>Ended</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {data.items.map((sub: Record<string, any>, i: number) => (\n                      <tr key={i}>\n                        <td>{sub._id}</td>\n                        <td className=\"capitalize\">\n                          {sub.name || 'Unknown'} plan\n                        </td>\n                        <td>\n                          ${sub.amount || '0.00'}&nbsp;\n                          {sub.currency && sub.currency.toUpperCase()}\n                        </td>\n                        <td className=\"capitalize\">{sub.status || '-'}</td>\n                        <td>\n                          {sub.create_time\n                            ? dayjs(sub.create_time).format('DD MMM YYYY')\n                            : '-'}\n                        </td>\n                        <td>\n                          {sub.ended_time\n                            ? dayjs(sub.ended_time).format('DD MMM YYYY')\n                            : '-'}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </TableList>\n                <PaginationWrapper>\n                  <Button\n                    btnType=\"secondary\"\n                    disabled={page === 0}\n                    onClick={() => handlePage('prev')}\n                  >\n                    Previous\n                  </Button>\n                  <Button\n                    btnType=\"secondary\"\n                    disabled={page + 1 >= Math.ceil(data.total / data.limit)}\n                    onClick={() => handlePage('next')}\n                  >\n                    Next\n                  </Button>\n                </PaginationWrapper>\n              </Fragment>\n            ) : (\n              <div className=\"flex-center\" style={{ height: '150px' }}>\n                <h3>No past memberships!</h3>\n              </div>\n            )}\n          </Fragment>\n        </Fragment>\n      ) : null}\n    </Fragment>\n  )\n}\n\nexport default MembershipList\n\nconst PaginationWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  button {\n    width: fit-content;\n    padding: 0 1rem;\n    margin: 0 1rem;\n  }\n`\nconst HeadingWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1rem;\n  h4 {\n    margin-bottom: 0.5rem;\n  }\n  p {\n    margin: 0;\n  }\n`\n","import React, { Fragment } from 'react'\ninterface IconProps {\n  size?: string\n  color?: string\n  className?: string\n}\nconst LinkArrowIcon = ({ size, color, className }: IconProps) => {\n  return (\n    <Fragment>\n      <svg\n        width={size || '1rem'}\n        height={size || '1rem'}\n        className={className || ''}\n        viewBox=\"0 0 512 512\"\n        fill={color}\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path d=\"M502.6 278.6l-128 128c-12.51 12.51-32.76 12.49-45.25 0c-12.5-12.5-12.5-32.75 0-45.25L402.8 288H32C14.31 288 0 273.7 0 255.1S14.31 224 32 224h370.8l-73.38-73.38c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0l128 128C515.1 245.9 515.1 266.1 502.6 278.6z\" />\n      </svg>\n    </Fragment>\n  )\n}\n\nexport default LinkArrowIcon\n","import dayjs from 'dayjs'\nimport React, { Fragment, useState } from 'react'\nimport { useQueryClient } from 'react-query'\nimport styled from 'styled-components'\nimport { useNotify } from '../../contexts/notify'\nimport { Badge } from '../../styled/badge'\nimport { Button } from '../../styled/button'\nimport { Spinner } from '../../styled/loader'\nimport {\n  cancelSubscription,\n  getSubscription,\n} from '../../queries/mebershipQueries'\nimport Image from '../../public/images/items-in-box.png'\nimport { useHistory } from 'react-router-dom'\nimport { convertISOToUnixDate } from '../../helpers/date'\nimport ClockIcon from '../../components/svgs/clock'\nimport MembershipList from './membershipList'\nimport LinkArrowIcon from '../../components/svgs/linkArrow'\nimport { useAuth } from '../../contexts/authProvider'\n\nconst Memberships = () => {\n  const [showMembershipList, setShowMembershipList] = useState(false)\n\n  const history = useHistory()\n  const { setToken } = useAuth()\n  const { data, isLoading, isError } = getSubscription()\n\n  const UnixExpireDate =\n    (data && data.cancel_at && convertISOToUnixDate(data.cancel_at)) || null\n\n  const showNextBilling =\n    data &&\n    ((UnixExpireDate &&\n      UnixExpireDate > convertISOToUnixDate(data.current_period_end)) ||\n      !UnixExpireDate)\n\n  const queryClient = useQueryClient()\n\n  const { setNotify } = useNotify()\n\n  const cancelSub = cancelSubscription(setToken, setNotify, queryClient)\n\n  return (\n    <Fragment>\n      {isError ? (\n        <div className=\"flex-center\">\n          <h3>Failed to load membership!</h3>\n        </div>\n      ) : data ? (\n        <Fragment>\n          {showMembershipList ? (\n            <MembershipList setShow={setShowMembershipList} />\n          ) : (\n            <Wrapper>\n              {data._id && (\n                <Fragment>\n                  <HeadWrappper>\n                    <div className=\"heading\">\n                      <h2>{data.name || 'Unknown'} Plan</h2>\n                      <Badge\n                        type={\n                          data.status === 'active'\n                            ? 'success'\n                            : data.status === 'pending'\n                            ? 'primary'\n                            : 'ghost'\n                        }\n                      >\n                        {data.status}\n                      </Badge>\n                      {data.cancel_at && (\n                        <Badge type=\"ghost\" style={{ marginLeft: '1rem' }}>\n                          <ClockIcon style={{ marginRight: '.3rem' }} />\n                          Cancels&nbsp;\n                          {dayjs(data.cancel_at).format('MMM DD')}\n                        </Badge>\n                      )}\n                    </div>\n                    <div>\n                      {!data.cancel_at &&\n                        data.status !== 'cancel requested' &&\n                        !data.ended_time && (\n                          <Button\n                            btnType=\"secondary\"\n                            size=\"sm\"\n                            disabled={cancelSub.isLoading}\n                            onClick={() => cancelSub.mutate()}\n                          >\n                            {cancelSub.isLoading ? (\n                              <Fragment>\n                                Cancelling\n                                <Spinner\n                                  size=\"1rem\"\n                                  style={{ marginLeft: '1rem' }}\n                                />\n                              </Fragment>\n                            ) : (\n                              'Cancel Subscription'\n                            )}\n                          </Button>\n                        )}\n                    </div>\n                  </HeadWrappper>\n                  <HorizontalInfo>\n                    <div className=\"info-item\">\n                      <p className=\"info-item-label\">Started</p>\n                      <p>\n                        {data.create_time\n                          ? dayjs(data.create_time).format('DD MMM YYYY')\n                          : '-'}\n                      </p>\n                    </div>\n                    {showNextBilling && (\n                      <div className=\"info-item\">\n                        <p className=\"info-item-label\">Next Billing Time</p>\n                        <p>\n                          {data.current_period_end\n                            ? dayjs(data.current_period_end).format(\n                                'DD MMM YYYY'\n                              )\n                            : '-'}\n                        </p>\n                      </div>\n                    )}\n\n                    {!data.ended_time && data.cancel_at && (\n                      <div className=\"info-item\">\n                        <p className=\"info-item-label\">Expires On</p>\n                        <p>\n                          {data.cancel_at\n                            ? dayjs(data.cancel_at).format('DD MMM YYYY')\n                            : '-'}\n                        </p>\n                      </div>\n                    )}\n                  </HorizontalInfo>\n                  <SubHeading>\n                    <h4>Subscription Details</h4>\n                    <div>\n                      <LinkWrapper onClick={() => setShowMembershipList(true)}>\n                        View past memberships <LinkArrowIcon size=\"0.8rem\" />\n                      </LinkWrapper>\n                    </div>\n                  </SubHeading>\n                  <SubDetails>\n                    <div className=\"sub-item\">\n                      <p>ID</p>\n                      <p className=\"sub-value\">{data._id}</p>\n                      <p>Plan Name</p>\n                      <p className=\"sub-value\">{data.name} Plan</p>\n                      <p>Amount</p>\n                      <p className=\"sub-value\">\n                        ${data.amount ? data.amount : '0.00'}&nbsp;\n                        {data.currency && data.currency.toUpperCase()}\n                      </p>\n                    </div>\n\n                    <div className=\"sub-item\">\n                      <p>Payment Method</p>\n                      <p className=\"sub-value\">\n                        {data.payment_method &&\n                        data.payment_method.brand &&\n                        data.payment_method.last4 ? (\n                          <PaymentCardWrapper>\n                            {data.payment_method.brand}\n                            <Fragment>\n                              <span className=\"dot\" />\n                              <span className=\"dot\" />\n                              <span className=\"dot\" />\n                              <span className=\"dot\" />\n                              <span className=\"dot\" />\n                              {data.payment_method.last4}\n                            </Fragment>\n                          </PaymentCardWrapper>\n                        ) : (\n                          '-'\n                        )}\n                      </p>\n                      <p>Created</p>\n                      <p className=\"sub-value\">\n                        {data.create_time\n                          ? dayjs(data.create_time).format('DD MMM YYYY')\n                          : '-'}\n                      </p>\n                      <p>Current Period</p>\n                      <p className=\"sub-value\">\n                        {data.current_period_start\n                          ? dayjs(data.current_period_start).format(\n                              'DD MMM YYYY'\n                            )\n                          : '-'}\n                        &nbsp;&nbsp;to&nbsp;&nbsp;\n                        {data.current_period_end\n                          ? dayjs(data.current_period_end).format('DD MMM YYYY')\n                          : '-'}\n                      </p>\n                    </div>\n                  </SubDetails>\n                  {data.upcoming_invoice && (\n                    <Fragment>\n                      <SubHeading>\n                        <div>\n                          <h4>Upcoming Invoice</h4>\n                          <p>\n                            This is a preview of the invoice that will be billed\n                            on&nbsp;\n                            {data.current_period_end\n                              ? dayjs(data.current_period_end).format(\n                                  'DD MMM YYYY'\n                                )\n                              : 'end of the period'}\n                            . It may change if the subscription is updated.\n                          </p>\n                        </div>\n                      </SubHeading>\n                      <InvoiceTable>\n                        <thead>\n                          <tr>\n                            <th style={{ width: 'auto' }}>Description</th>\n                            <th style={{ width: '120px' }}>Amount</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {data.upcoming_invoice.data.map(\n                            (item: Record<string, any>, i: number) => (\n                              <tr key={i}>\n                                <td>{item.description}</td>\n                                <td\n                                  className={`amount ${\n                                    item.amount < 0 && 'negative'\n                                  }`}\n                                >\n                                  <span className=\"currency-symbol\">$</span>\n                                  {Math.abs(item.amount)}\n                                </td>\n                              </tr>\n                            )\n                          )}\n                        </tbody>\n                      </InvoiceTable>\n                      <InvoiceFooter>\n                        <div className=\"container\">\n                          <p className=\"semibold\">Subtotal</p>\n                          <p\n                            className={`semibold amount ${\n                              data.upcoming_invoice.total < 0 && 'negative'\n                            }`}\n                          >\n                            <span className=\"currency-symbol\">$</span>\n                            {data.upcoming_invoice.total || '0.00'}\n                          </p>\n\n                          <p className=\"semibold\">Total </p>\n                          <p\n                            className={`semibold amount ${\n                              data.upcoming_invoice.total < 0 && 'negative'\n                            }`}\n                          >\n                            <span className=\"currency-symbol\">$</span>\n                            {data.upcoming_invoice.total || '0.00'}\n                          </p>\n                          {data.upcoming_invoice.amount_paid > 0 && (\n                            <Fragment>\n                              <p className=\"semibold\">Amount Paid</p>\n\n                              <p\n                                className={`semibold amount ${\n                                  data.upcoming_invoice.amount_paid < 0 &&\n                                  'negative'\n                                }`}\n                              >\n                                <span className=\"currency-symbol\">$</span>\n                                {data.upcoming_invoice.amount_paid || '0.00'}\n                              </p>\n                            </Fragment>\n                          )}\n                          <p className=\"semibold\">Amount Due</p>\n                          <p\n                            className={`semibold amount ${\n                              data.upcoming_invoice.amount_due < 0 && 'negative'\n                            }`}\n                          >\n                            <span className=\"currency-symbol\">$</span>\n                            {data.upcoming_invoice.amount_due || '0.00'}\n                          </p>\n                        </div>\n                      </InvoiceFooter>\n                    </Fragment>\n                  )}\n                  {data.latest_invoice && (\n                    <Fragment>\n                      <SubHeading>\n                        <div>\n                          <h4>Latest Invoice</h4>\n                        </div>\n                        <div>\n                          <LinkWrapper\n                            onClick={() => history.push('/my-account/payments')}\n                          >\n                            View all payments <LinkArrowIcon size=\"0.8rem\" />\n                          </LinkWrapper>\n                        </div>\n                      </SubHeading>\n                      <InvoiceTable>\n                        <thead>\n                          <tr>\n                            <th style={{ width: 'auto' }}>ID</th>\n                            <th style={{ width: '15%' }}>Status</th>\n                            <th style={{ width: '15%' }}>Amount</th>\n                            <th style={{ width: '15%' }}>Created</th>\n                            <th style={{ width: '15%' }}></th>\n                          </tr>\n                        </thead>\n\n                        <tbody>\n                          <tr>\n                            <td>{data.latest_invoice.id || '-'}</td>\n                            <td>\n                              <Badge\n                                type={\n                                  data.latest_invoice.status === 'paid'\n                                    ? 'success'\n                                    : 'ghost'\n                                }\n                              >\n                                {data.latest_invoice.status || 'unknown'}\n                              </Badge>\n                            </td>\n                            <td>${data.latest_invoice.total || '0.00'}</td>\n                            <td>\n                              {(data.latest_invoice.created &&\n                                dayjs(data.latest_invoice.created).format(\n                                  'DD MMM YYYY'\n                                )) ||\n                                '-'}\n                            </td>\n                            <td>\n                              {data.latest_invoice.hosted_invoice_url && (\n                                <a\n                                  className=\"link\"\n                                  href={data.latest_invoice.hosted_invoice_url}\n                                >\n                                  View Invoice\n                                </a>\n                              )}\n                            </td>\n                          </tr>\n                        </tbody>\n                      </InvoiceTable>\n                    </Fragment>\n                  )}\n                </Fragment>\n              )}\n              <Fragment>\n                {!isLoading && data && !data._id && (\n                  <Fragment>\n                    <PendingWrapper>\n                      <SMImage>\n                        <img src={Image} />\n                      </SMImage>\n                      <h3>No Active Plan</h3>\n                      <p>Upgrade to unlock all features and more.</p>\n\n                      <div className=\"action-wrapper\">\n                        <Button\n                          btnType=\"primary\"\n                          onClick={() => history.push('/subscribe')}\n                        >\n                          Upgrade\n                        </Button>\n                        <Button\n                          btnType=\"secondary\"\n                          onClick={() => setShowMembershipList(true)}\n                          style={{\n                            width: 'fit-content',\n                            paddingRight: '0.7rem',\n                            paddingLeft: '0.7rem',\n                          }}\n                        >\n                          Previous Memberships\n                        </Button>\n                      </div>\n                    </PendingWrapper>\n                  </Fragment>\n                )}\n              </Fragment>\n            </Wrapper>\n          )}\n        </Fragment>\n      ) : isLoading ? (\n        <div className=\"flex-center\">\n          <Spinner size=\"2rem\" type=\"primary\" />\n        </div>\n      ) : (\n        <div className=\"flex-center\">\n          <h3>Failed to load memberships!</h3>\n        </div>\n      )}\n      {/* {!isError && !isLoading && !data && (\n        <GridWrapper>\n          <ImageWrapper>\n            <img src={Image} alt=\"items-in-box\" />\n          </ImageWrapper>\n          <PlansWrapper>\n            <h3>Plans and pricing</h3>\n            <p>\n              This section includes all the plans and pricing details. This\n              section includes all the plans and pricing details\n            </p>\n            <ul>\n              {options.map((option: string, i: number) => (\n                <li key={i}>\n                  <img src={CheckCircle} alt=\"check circle\" />\n                  {option}\n                </li>\n              ))}\n            </ul>\n            <Button\n              btnType=\"primary\"\n              size=\"lg\"\n              onClick={() => history.push('/subscribe')}\n            >\n              Upgrade\n            </Button>\n          </PlansWrapper>\n        </GridWrapper>\n      )} */}\n    </Fragment>\n  )\n}\n\nexport default Memberships\n\nconst LinkWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: ease-in-out 0.2s;\n  cursor: pointer;\n  width: 200px;\n  font-size: 0.9rem;\n  font-weight: 600;\n  margin-right: auto;\n  svg {\n    margin-left: 0.5rem;\n  }\n  &:hover {\n    color: ${({ theme }) => theme.colors.primary};\n    svg {\n      fill: ${({ theme }) => theme.colors.primary};\n    }\n  }\n`\n\nconst InvoiceTable = styled.table`\n  margin-bottom: 1rem;\n  thead {\n    tr {\n      border-top: unset;\n    }\n  }\n  td,\n  th {\n    font-size: 0.875rem;\n  }\n  th {\n    font-size: 0.7rem;\n    font-weight: 600;\n    text-transform: uppercase;\n  }\n  th,\n  td {\n    text-align: start;\n    padding: 0.7rem 1.25rem;\n  }\n  .amount {\n    font-weight: 600;\n    color: #888;\n    letter-spacing: 1.5px;\n  }\n  .negative:before {\n    content: '-';\n  }\n  ${Badge} {\n    min-width: 75px;\n  }\n`\n\nconst PendingWrapper = styled.div`\n  margin-top: 2rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  h2,\n  p {\n    margin: 0;\n  }\n\n  .action-wrapper {\n    margin-top: 2rem;\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n    width: 400px;\n  }\n`\n\nconst InvoiceFooter = styled.div`\n  border-bottom: 1px solid #e7e7e7;\n  margin-bottom: 3rem;\n  padding-bottom: 0.5rem;\n  .container {\n    margin-top: 0.5rem;\n    display: grid;\n    grid-template-columns: auto 100px;\n    max-width: 300px;\n    margin-left: auto;\n    p {\n      margin: 0 0 0.5rem;\n    }\n    .amount {\n      font-size: 0.8rem;\n    }\n    .currency-symbol {\n      margin-right: 2px;\n    }\n  }\n`\n\nconst SMImage = styled.div`\n  display: flex;\n  align-items: center;\n  width: 250px;\n  height: 250px;\n  margin-bottom: 2rem;\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n  }\n`\n\nconst Wrapper = styled.div`\n  .sub-heading-wrapper {\n    h4 {\n      margin-bottom: 0;\n    }\n    p {\n      margin-bottom: 1rem;\n    }\n  }\n`\nconst SubHeading = styled.div`\n  border-bottom: 1px solid #e7e7e7;\n  padding-bottom: 0.5rem;\n  margin-bottom: 0.5rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  h4,\n  p {\n    margin: 0 0 0.5rem;\n  }\n  a {\n    margin-right: 2rem;\n  }\n`\n\nconst HorizontalInfo = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  margin-bottom: 3rem;\n  p {\n    margin: 0;\n    line-height: 1.7;\n  }\n  .info-item-label {\n    margin-bottom: 0.5rem;\n    font-weight: 700;\n    color: ${({ theme }) => theme.colors.primary};\n  }\n  .info-item {\n    &:not(:last-child) {\n      margin-right: 1rem;\n      padding-right: 1rem;\n      border-right: 1px solid #e7e7e7;\n    }\n  }\n`\nconst SubDetails = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 50%);\n  max-width: 1000px;\n  margin-bottom: 4rem;\n  .sub-item {\n    display: grid;\n    grid-template-columns: minmax(75px, 130px) auto;\n    align-items: center;\n    .sub-value {\n      color: #878787;\n      text-transform: capitalize;\n    }\n    p {\n      line-height: 2.5;\n      margin: 0;\n    }\n  }\n`\nconst HeadWrappper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  .heading {\n    display: flex;\n    align-items: center;\n    padding-top: 1rem;\n\n    h2 {\n      margin-right: 1rem;\n      margin-bottom: 0;\n      text-transform: capitalize;\n    }\n    margin-bottom: 1rem;\n  }\n  button {\n    margin-right: 2rem;\n  }\n`\n\nconst GridWrapper = styled.div`\n  display: flex;\n  max-width: 1300px;\n  justify-content: space-around;\n  div {\n    padding: 1rem;\n  }\n  @media (max-width: 900px) {\n    display: block;\n  }\n`\nconst PlansWrapper = styled.div`\n  h3 {\n    margin: 1rem 0;\n  }\n  ul {\n    margin-bottom: 2.3rem;\n    li {\n      display: flex;\n      font-size: 1rem;\n      padding: 0.5rem 0;\n      img {\n        margin-right: 15px;\n      }\n    }\n  }\n  @media (max-width: 480px) {\n    ul {\n      li {\n        font-size: 0.8rem;\n      }\n    }\n  }\n`\nconst ImageWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  img {\n    width: 100%;\n  }\n  @media (max-width: 900px) {\n    max-width: 480px;\n  }\n`\n\nconst PaymentCardWrapper = styled.span`\n  display: flex;\n  align-items: center;\n  text-transform: capitalize;\n\n  .dot {\n    width: 4px;\n    height: 4px;\n    border-radius: 50%;\n    background-color: #777;\n    margin-right: 2px;\n    &:first-child {\n      margin-left: 10px;\n    }\n    &:last-child {\n      margin-right: 5px;\n    }\n  }\n`\n","import dayjs from 'dayjs'\nimport React, { Fragment, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Badge } from '../../styled/badge'\nimport { Button } from '../../styled/button'\nimport { Spinner } from '../../styled/loader'\nimport { TableList } from '../../styled/table'\nimport { getSubscriptionPayments } from '../../queries/mebershipQueries'\n\nconst Payments = () => {\n  const [page, setPage] = useState(0)\n\n  const { data, isLoading, isError } = getSubscriptionPayments(page)\n\n  useEffect(() => {\n    if (!data || data.items.length === 0) return\n  }, [data])\n\n  const handlePage = (type: 'next' | 'prev') => {\n    type === 'next' && setPage((page) => page + 1)\n    type === 'prev' && setPage((page) => page - 1)\n  }\n\n  return (\n    <Fragment>\n      <h2 style={{ margin: 0 }}>Payment History</h2>\n      <p style={{ marginBottom: '2rem' }}>\n        This section includes all your payment history, plans and the method of\n        payment used .\n      </p>\n      {isLoading ? (\n        <div className=\"flex-center\">\n          <Spinner size=\"2rem\" type=\"primary\" />\n        </div>\n      ) : data && !isError ? (\n        <Fragment>\n          {data.items && data.items.length > 0 ? (\n            <Fragment>\n              <TableList size=\"sm\">\n                <thead>\n                  <tr>\n                    <th style={{ width: 'auto' }}>ID</th>\n                    <th style={{ width: '15%' }}>Plan</th>\n                    <th style={{ width: '10%' }}>Amount</th>\n                    <th style={{ width: '15%' }}>Status</th>\n                    <th style={{ width: '18%' }}>Card</th>\n                    <th style={{ width: '18%' }}>Date</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {data.items.map((item: Record<string, any>, i: number) => (\n                    <tr key={i}>\n                      <td>{item.id}</td>\n                      <td className=\"capitalize\">{item.plan_name || '-'}</td>\n                      <td>\n                        ${item.amount || '0.00'}&nbsp;\n                        {item.currency && item.currency}\n                      </td>\n                      <td className=\"capitalize\">\n                        {item.refunded ? (\n                          <RefundWrapper>\n                            <Badge type=\"ghost\">Refunded</Badge>\n                            <span className=\"redund-amt\">\n                              ${item.amount_refunded || '0.00'}&nbsp;refunded\n                            </span>\n                          </RefundWrapper>\n                        ) : item.amount_refunded > 0 ? (\n                          <RefundWrapper>\n                            <Badge type=\"ghost\">Partial Refund</Badge>\n                            <span className=\"redund-amt\">\n                              ${item.amount_refunded}&nbsp;refunded\n                            </span>\n                          </RefundWrapper>\n                        ) : (\n                          <Badge\n                            type={\n                              item.status === 'succeeded'\n                                ? 'success'\n                                : item.status === 'cancelled'\n                                ? 'ghost'\n                                : item.status === 'failed'\n                                ? 'danger'\n                                : 'info'\n                            }\n                          >\n                            {item.status}\n                          </Badge>\n                        )}\n                      </td>\n                      <td>\n                        <PaymentCardWrapper>\n                          {item.method.brand && item.method.brand}\n\n                          <span className=\"dot\" />\n                          <span className=\"dot\" />\n                          <span className=\"dot\" />\n                          <span className=\"dot\" />\n                          <span className=\"dot\" />\n                          {item.method.last4}\n                        </PaymentCardWrapper>\n                      </td>\n                      <td>{dayjs(item.date).format('DD MMM YYYY, hh:mm a')}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </TableList>\n              <PaginationWrapper>\n                <Button\n                  btnType=\"secondary\"\n                  disabled={page === 0}\n                  onClick={() => handlePage('prev')}\n                >\n                  Previous\n                </Button>\n                <Button\n                  btnType=\"secondary\"\n                  disabled={!data.has_more}\n                  onClick={() => handlePage('next')}\n                >\n                  Next\n                </Button>\n              </PaginationWrapper>\n            </Fragment>\n          ) : (\n            <div className=\"flex-center\">\n              <h3>No payments!</h3>\n            </div>\n          )}\n        </Fragment>\n      ) : (\n        <div className=\"flex-center\">\n          <h3>Failed to load payments!</h3>\n        </div>\n      )}\n    </Fragment>\n  )\n}\n\nexport default Payments\n\nconst PaymentCardWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  text-transform: capitalize;\n  .dot {\n    width: 4px;\n    height: 4px;\n    border-radius: 50%;\n    background-color: #777;\n    margin-right: 2px;\n    &:first-child {\n      margin-left: 10px;\n    }\n    &:last-child {\n      margin-right: 5px;\n    }\n  }\n`\nconst RefundWrapper = styled.div`\n  display: block;\n  align-items: center;\n  .redund-amt {\n    display: block;\n    font-size: 0.7rem;\n    margin-top: 0.3rem;\n  }\n`\nconst PaginationWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  button {\n    width: fit-content;\n    padding: 0 1rem;\n    margin: 0 1rem;\n  }\n`\n","import styled from 'styled-components'\n\nexport const ContentWrapper = styled.div<{ maxWidth: string }>`\n  width: 100%;\n  max-width: ${({ maxWidth }) => maxWidth};\n  p {\n    max-width: 575px;\n  }\n`\n","import React, { Fragment, useState, useEffect } from 'react'\nimport styled, { DefaultTheme, withTheme } from 'styled-components'\nimport CheckIcon from '../svgs/check'\nimport DangerIcon from '../svgs/danger'\nimport WarningIcon from '../svgs/warning'\nimport InfoIcon from '../svgs/info'\nimport CrossIcon from '../svgs/cross'\ninterface IProps {\n  type: 'danger' | 'info' | 'warning' | 'success'\n  theme: DefaultTheme\n  message: string\n  interval?: number\n  id: number\n}\n\nconst Message: React.FC<IProps> = ({ type, theme, message, interval, id }) => {\n  const [show, setShow] = useState(false)\n  const time = (interval as number) || 6000\n  useEffect(() => {\n    setShow(true)\n    if (time === -1) return\n    const interval = setInterval(() => {\n      setShow(false)\n    }, time)\n\n    return () => {\n      clearInterval(interval)\n    }\n  }, [id])\n\n  useEffect(() => {\n    if (message) setShow(true)\n  }, [id])\n\n  let icon\n\n  switch (type) {\n    case 'danger':\n      icon = <DangerIcon color={theme.colors.danger} />\n      break\n    case 'warning':\n      icon = <WarningIcon color={theme.colors.warning} />\n      break\n    case 'success':\n      icon = <CheckIcon color={theme.colors.success} />\n      break\n    case 'info':\n      icon = <InfoIcon color={theme.colors.info} />\n      break\n    default:\n      break\n  }\n\n  return (\n    <Fragment>\n      {show && (\n        <Wrapper type={type}>\n          <div>\n            {icon} <p>{JSON.stringify(message)}</p>\n          </div>\n          <div>\n            <button onClick={() => setShow(false)}>\n              <CrossIcon size='0.85rem' color={theme.colors[type]} />\n            </button>\n          </div>\n        </Wrapper>\n      )}\n    </Fragment>\n  )\n}\n\nexport default withTheme(Message)\n\nconst Wrapper = styled.div<{ type: 'danger' | 'info' | 'warning' | 'success' }>`\n  display: flex;\n  padding: 0.6rem 1rem;\n  align-items: center;\n  border: 1px solid;\n  border-radius: 7px;\n  border-color: ${({ type, theme }) => theme.colors[type]};\n  background-color: ${({ type, theme }) => theme.shades[type]};\n  justify-content: space-between;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n  div {\n    display: flex;\n    align-items: center;\n    &:first-child {\n      svg {\n        min-width: 20px;\n        min-height: 20px;\n      }\n    }\n  }\n  p {\n    margin: 0 0.7rem;\n    color: ${({ type, theme }) => theme.colors[type]};\n  }\n\n  button {\n    cursor: pointer;\n  }\n`\n","import * as Yup from 'yup'\n\nconst name = Yup.string()\n  .min(3, 'Too Short!')\n  .max(30, 'Too Long!')\n  .required('Required')\n\nexport const changeNameSchema = Yup.object().shape({\n  firstName: name,\n  lastName: name\n})\n","import axiosRequest from '../helpers/axiosRequest'\n\n/**\n * Refresh user session data\n * @returns access_token\n */\nexport const apiRefreshSession = async () => {\n  let data\n  let error: string\n\n  const options = {\n    method: 'GET',\n    url: `${process.env.AUTH_HOST}/auth/refresh`,\n  }\n\n  try {\n    const res = await axiosRequest(options)\n    data = res.data as any\n    error = res.error\n    return { data, error }\n  } catch (err: any) {\n    return { data: undefined, error: err }\n  }\n}\n","import { apiRefreshSession } from '../apis/user'\nimport axiosRequest from './axiosRequest'\n/**\n * Changes User Name\n * @param firstName\n * @param lastName\n * @param user from useAuth()\n * @param data state form useState()\n * @param setUser from useAuth(), setState fn\n * @param setToken from useAuth(), setState Fn\n * @param setLoading setState fn\n * @param setNotify from useNotify(), setState fn\n * @returns void\n */\nexport const changeUserName = async (\n  firstName: string,\n  lastName: string,\n  user: Record<string, any>,\n  data: any,\n  setUser: (_val: Record<string, any>) => void,\n  setToken: (_val: string) => void,\n  setLoading: (_val: any) => void,\n  setNotify: (_val: any) => void\n) => {\n  setLoading({ name: true })\n  const options = {\n    method: 'PATCH',\n    url: '/user',\n    data: { firstName, lastName },\n  }\n  const { data: res, error } = await axiosRequest(options)\n  if (res) {\n    const userData = {\n      firstName,\n      lastName,\n      role: user.role,\n      ref: user.ref,\n    }\n\n    setUser(userData)\n    const { data: token, error: tokenError } = await apiRefreshSession()\n    if (token && !tokenError) {\n      setToken(data)\n    } else setNotify({ type: 'danger', heading: 'Failed to update session!' })\n  }\n  if (error) setNotify({ type: 'danger', heading: 'Failed to update!' })\n\n  return setLoading({ name: false })\n}\n\n/**\n * Changes user password\n * @param setData setState fn\n * @param setLoading setState fn\n * @returns boolean\n */\nexport const handleChangeUserPassword = async (\n  setData: (_val: any) => void,\n  setLoading: (_val: any) => void\n) => {\n  const options = {\n    method: 'POST',\n    url: '/change-password',\n    data: '',\n  }\n  try {\n    setLoading({ password: true })\n    const { data: res, error } = await axiosRequest(options)\n    if (res) {\n      setData({ message: res, type: 'success', id: Math.random() })\n    }\n    if (error) {\n      setData({ message: error, type: 'danger', id: Math.random() })\n    }\n  } catch (err) {\n    setData({\n      message: 'Something went wrong!',\n      type: 'danger',\n      id: Math.random(),\n    })\n  }\n\n  return setLoading({ password: false })\n}\n","import React, { Fragment, useEffect, useState } from 'react'\nimport { FormProvider, useForm } from 'react-hook-form'\nimport Input from '../../../components/form/Input'\nimport { ContentWrapper } from '../../../styled/pages'\nimport { FormButtonWrapper, FormWrapper, GridForm } from '../../../styled/form'\nimport Message from '../../../components/ui/message'\nimport { useNotify } from '../../../contexts/notify'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport FormButton from '../../../components/ui/FormButton'\nimport { changeNameSchema } from '../../../validations/user'\nimport { Button } from '../../../styled/button'\nimport { useAuth } from '../../../contexts/authProvider'\nimport {\n  changeUserName,\n  handleChangeUserPassword,\n} from '../../../helpers/profileHelper'\n\ninterface IName {\n  firstName: string\n  lastName: string\n}\n\ninterface StateProps {\n  message: string\n  type: 'success' | 'danger' | 'info' | 'warning'\n  id: number\n}\n\nconst Profile = () => {\n  const [data, setData] = useState<StateProps | undefined>(undefined)\n  const { setNotify } = useNotify()\n  const { user, isLoading, setUser, setToken } = useAuth()\n  const [loading, setLoading] = useState<any>({\n    name: false,\n    password: false,\n  })\n\n  const defaultValues = {\n    firstName: user.firstName || '',\n    lastName: user.lastName || '',\n  }\n\n  const methods = useForm<IName>({\n    mode: 'onBlur',\n    defaultValues,\n    resolver: yupResolver(changeNameSchema),\n  })\n\n  const { handleSubmit, setValue } = methods\n\n  useEffect(() => {\n    setValue('firstName', user.firstName)\n  }, [user.firstName])\n\n  useEffect(() => {\n    setValue('lastName', user.lastName)\n  }, [user.lastName])\n\n  const changeName = ({ firstName, lastName }: IName) =>\n    changeUserName(\n      firstName,\n      lastName,\n      user,\n      data,\n      setUser,\n      setToken,\n      setLoading,\n      setNotify\n    )\n\n  return (\n    <Fragment>\n      {isLoading || Object.keys(user).length <= 0 ? (\n        'Loading'\n      ) : (\n        <ContentWrapper maxWidth=\"600px\" style={{ marginTop: '1rem' }}>\n          <FormWrapper>\n            <h3>Change Name</h3>\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n              Suspendisse a mauris ornare.\n            </p>\n            <FormProvider {...methods}>\n              <form onSubmit={handleSubmit(changeName)}>\n                {/* {(errors.firstName, errors.lastName)} */}\n\n                <GridForm>\n                  <div>\n                    <Input name=\"firstName\" label=\"First Name\" />\n                  </div>\n                  <div>\n                    <Input name=\"lastName\" label=\"Last Name\" />\n                  </div>\n                </GridForm>\n                <FormButtonWrapper>\n                  <FormButton\n                    loading={loading.name}\n                    btnType=\"secondary\"\n                    size=\"sm\"\n                    type=\"submit\"\n                  >\n                    Save\n                  </FormButton>\n                </FormButtonWrapper>\n              </form>\n            </FormProvider>\n          </FormWrapper>\n\n          <FormWrapper>\n            <h3>Change Password</h3>\n            <p>\n              Please choose a storng password including the numbers and letters\n              for better security.\n            </p>\n            <FormButtonWrapper>\n              <FormButton\n                btnType=\"primary\"\n                size=\"lg\"\n                type=\"submit\"\n                onClick={() => handleChangeUserPassword(setData, setLoading)}\n                loading={loading.password}\n              >\n                Change Password\n              </FormButton>\n            </FormButtonWrapper>\n            {data && (\n              <Fragment>\n                {data.message.split('//')[0] !== 'https:' ? (\n                  <Message\n                    type={data.type}\n                    message={data.message}\n                    id={data.id}\n                  />\n                ) : (\n                  <Fragment>\n                    <Message\n                      type={'info'}\n                      message={\n                        'As you are not signed in with tech email you will not recieve password reset email to change password instead click on button below'\n                      }\n                      id={data.id}\n                      interval={-1}\n                    />\n\n                    <Button\n                      as=\"a\"\n                      btnType=\"secondary\"\n                      size=\"sm\"\n                      href={data.message}\n                    >\n                      Reset\n                    </Button>\n                  </Fragment>\n                )}\n              </Fragment>\n            )}\n          </FormWrapper>\n        </ContentWrapper>\n      )}\n    </Fragment>\n  )\n}\n\nexport default Profile\n","import React, { Fragment } from 'react'\nimport { NavLink, Route, Switch, useRouteMatch } from 'react-router-dom'\nimport styled from 'styled-components'\nimport DashPageHeader from '../../components/ui/dashPageHeader'\nimport SubNavBar from '../../components/ui/subNavbar'\nimport PageNotFound from '../404'\nimport Memberships from './memberships'\nimport Payments from './payments'\nimport Profile from './profile'\n\nconst MyAccount = () => {\n  const { path, url } = useRouteMatch()\n\n  return (\n    <Fragment>\n      <DashPageHeader name=\"Setting\" title=\"My Account\"></DashPageHeader>\n\n      <SubNavBar>\n        <SubNavBar.Link>\n          <NavLink exact to={`${url}`}>\n            Profile\n          </NavLink>\n        </SubNavBar.Link>\n        <SubNavBar.Link>\n          <NavLink to={`${url}/membership`}>Membership </NavLink>\n        </SubNavBar.Link>\n        <SubNavBar.Link>\n          <NavLink to={`${url}/payments`}>Payment History </NavLink>\n        </SubNavBar.Link>\n      </SubNavBar>\n      <SubLayout>\n        <Switch>\n          <Route exact path={path} component={Profile} />\n          <Route exact path={`${path}/membership`} component={Memberships} />\n          <Route exact path={`${path}/payments`} component={Payments} />\n          <Route exact component={PageNotFound} />\n        </Switch>\n      </SubLayout>\n    </Fragment>\n  )\n}\n\nexport default MyAccount\n\nconst SubLayout = styled.div`\n  margin: 1.5rem;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  @media (max-width: 480px) {\n    margin: 1.5rem 1rem;\n  }\n`\n","import styled from 'styled-components'\n\nexport const GridForm = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 1.5rem;\n  margin: 1.5rem 0;\n  width: 100%;\n\n  @media (max-width: 480px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`\nexport const FormWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  margin-bottom: 3rem;\n`\nexport const FormButtonWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n`\nexport const InvalidFeedBack = styled.div`\n  font-size: 0.8rem;\n  color: ${({ theme }) => theme.colors.danger};\n`\n"],"names":["selectionArray","obj","name","label","isFieldArray","className","style","hideError","props","useFormContext","register","errors","formState","errMsg","Errname","split","length","Object","keys","forEach","key","Fragment","htmlFor","message","loading","disabled","children","rest","StyledButton","size","type","btnType","styled","theme","backgroundColor","colors","white","light","primary","btnSize","dark","fontSize","width","shades","title","customBtns","user","useAuth","history","useHistory","useViewport","Header","role","Array","isArray","includes","onClick","push","SubNavBar","SubNav","Link","options","data","error","axios","res","response","convertISOToUnixDate","date","Math","floor","Date","getTime","convertDateToInput","toISOString","slice","identifier","fetcher","enabled","params","token","ref","useQuery","Badge","danger","info","AllSubsfetcher","color","height","viewBox","fill","xmlns","d","TableList","borderTop","defaultProps","rounded","setShow","useState","page","setPage","handlePage","limit","getQueryAdvance","getAllSubscriptions","isLoading","isError","HeadingWrapper","items","map","sub","i","_id","amount","currency","toUpperCase","status","create_time","dayjs","format","ended_time","PaginationWrapper","ceil","total","showMembershipList","setShowMembershipList","setToken","UnixExpireDate","cancel_at","showNextBilling","current_period_end","queryClient","useQueryClient","cancelSub","setNotify","useMutation","onSuccess","setQueryData","invalidateQueries","onError","_response","heading","cancelSubscription","useNotify","Wrapper","HeadWrappper","marginLeft","marginRight","mutate","HorizontalInfo","SubHeading","LinkWrapper","SubDetails","payment_method","brand","last4","PaymentCardWrapper","current_period_start","upcoming_invoice","InvoiceTable","item","description","abs","InvoiceFooter","amount_paid","amount_due","latest_invoice","id","created","hosted_invoice_url","href","PendingWrapper","SMImage","src","Image","paddingRight","paddingLeft","getSubscriptionPayments","useEffect","margin","marginBottom","plan_name","refunded","RefundWrapper","amount_refunded","method","has_more","ContentWrapper","maxWidth","withTheme","icon","interval","show","time","setInterval","clearInterval","warning","success","JSON","stringify","Yup","min","max","required","changeNameSchema","shape","firstName","lastName","apiRefreshSession","url","process","axiosRequest","undefined","changeUserName","setUser","setLoading","userData","tokenError","handleChangeUserPassword","setData","password","random","defaultValues","methods","useForm","mode","resolver","yupResolver","handleSubmit","setValue","marginTop","onSubmit","Input","FormButton","as","useRouteMatch","path","exact","to","SubLayout","component","Profile","Memberships","Payments","PageNotFound","GridForm","FormWrapper","FormButtonWrapper","InvalidFeedBack"],"sourceRoot":""}