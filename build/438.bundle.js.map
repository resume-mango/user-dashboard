{"version":3,"file":"438.bundle.js","mappings":"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","sources":["webpack://user-dashboard/./src/components/form/Input.tsx","webpack://user-dashboard/./src/components/form/RichTextEditor.tsx","webpack://user-dashboard/./src/components/routerPrompt.tsx","webpack://user-dashboard/./src/components/svgs/downArrow.tsx","webpack://user-dashboard/./src/helpers/axiosRequest.ts","webpack://user-dashboard/./src/hooks/getQueryAdvance.ts","webpack://user-dashboard/./src/hooks/useExitPromt.ts","webpack://user-dashboard/./src/helpers/onbeforeunloadEvent.ts","webpack://user-dashboard/./src/pages/404.tsx","webpack://user-dashboard/./src/styled/form.ts"],"sourcesContent":["import React, { Fragment } from 'react'\nimport { useFormContext } from 'react-hook-form'\nimport { InvalidFeedBack } from '../../styled/form'\n\ninterface IInput {\n  name: string\n  label?: string\n  className?: string\n  style?: React.CSSProperties\n  isFieldArray?: boolean\n  hideError?: boolean\n}\n\nconst Input: React.FC<\n  IInput &\n    React.DetailedHTMLProps<\n      React.InputHTMLAttributes<HTMLInputElement>,\n      HTMLInputElement\n    >\n> = ({ name, label, isFieldArray, className, style, hideError, ...props }) => {\n  const {\n    register,\n    formState: { errors },\n  } = useFormContext()\n\n  let errMsg = null\n  if (isFieldArray && !hideError) {\n    const Errname = name.split('.')\n    const getKeyVal = (selectionArray: Array<any>, obj: any) => {\n      if (Object.keys(obj).length > 0) {\n        selectionArray.forEach((key) => {\n          if (!obj || !obj[key]) obj = null\n          else obj = obj[key]\n        })\n      }\n      const msg = obj && typeof obj === 'string' && obj.split('.')[1]\n      return msg ? msg : obj\n    }\n    errMsg =\n      Errname.length === 3 &&\n      Object.keys(errors).length > 0 &&\n      errors[Errname[0]]\n        ? getKeyVal([Errname[1], Errname[2], 'message'], errors[Errname[0]])\n        : null\n  }\n\n  return (\n    <Fragment>\n      <div className={className} style={style}>\n        {label && <label htmlFor={name}>{label}</label>}\n        <input\n          className={`form-control ${(errors[name] || errMsg) && 'is-invalid'}`}\n          {...register(name)}\n          {...props}\n        />\n        {errors[name] && !hideError && (\n          <InvalidFeedBack className=\"invalid-feild\">\n            {errors[name].message}\n          </InvalidFeedBack>\n        )}\n        {errMsg && !hideError && (\n          <InvalidFeedBack className=\"invalid-feild\">{errMsg}</InvalidFeedBack>\n        )}\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Input\n","import React, { Fragment, useEffect } from 'react'\nimport { Controller, useFormContext } from 'react-hook-form'\nimport ReactQuill from 'react-quill'\nimport styled from 'styled-components'\n\ninterface IProps {\n  name: string\n  maxHeight?: string\n  modules?: any\n  formats?: Array<string>\n}\n\nconst RichTextEditor = ({ name, maxHeight = '', formats, modules }: IProps) => {\n  const { control } = useFormContext()\n  const initialModules = {\n    toolbar: [\n      ['bold', 'italic', 'underline'],\n      [{ list: 'ordered' }, { list: 'bullet' }],\n      ['link'],\n      ['clean'],\n    ],\n  }\n\n  const initialFormats = [\n    'bold',\n    'italic',\n    'underline',\n    'list',\n    'bullet',\n    'link',\n  ]\n\n  useEffect(() => {\n    const linkInput = document && document.querySelector('.ql-tooltip input')\n    linkInput && linkInput.setAttribute('data-link', 'https://www.example.com')\n\n    return\n  }, [])\n\n  return (\n    <Fragment>\n      <Wrapper maxHeight={maxHeight} className=\"wrapper\">\n        <>\n          <Controller\n            name={name}\n            control={control}\n            render={({ field: { value, onChange, onBlur } }) => (\n              <ReactQuill\n                modules={modules ? modules : initialModules}\n                onBlur={onBlur}\n                onChange={(content) => onChange(content)}\n                value={value}\n                formats={formats ? formats : initialFormats}\n                theme=\"snow\"\n                bounds={'wrapper'}\n              />\n            )}\n          />\n        </>\n      </Wrapper>\n    </Fragment>\n  )\n}\n\nexport default RichTextEditor\n\nconst Wrapper = styled.div<{ maxHeight: string }>`\n  .quill {\n    background-color: #f4f5f7;\n    border-radius: 6px;\n    display: block;\n  }\n  .ql-toolbar,\n  .ql-container {\n    border: none;\n    display: block;\n    ${({ maxHeight }) =>\n      maxHeight && `max-height: ${maxHeight}; overflow-y: scroll;`}\n  }\n  .ql-toolbar {\n    padding-top: 1rem;\n    span.ql-formats {\n      &:not(:last-child) {\n        border-right: 2px solid #ddd;\n      }\n      button {\n        display: inline-flex;\n        justify-content: center;\n        align-items: center;\n        padding: 0;\n        svg {\n          width: 1.2rem;\n          height: 1.2rem;\n        }\n      }\n    }\n    .ql-formats {\n      margin-right: 0.5rem;\n      padding-right: 0.5rem;\n    }\n    .ql-stroke {\n      stroke: #898989;\n    }\n  }\n\n  .ql-editor {\n    min-height: 150px;\n    * {\n      font-size: 1rem;\n    }\n  }\n  .ql-editor ol,\n  .ql-editor ul {\n    padding-left: 0.5em;\n  }\n  .ql-tooltip {\n    z-index: 10;\n    border: none;\n    border-radius: 4px;\n    &[data-mode='link']:before {\n      content: 'Link';\n    }\n    &:before {\n      content: '';\n    }\n    input[type='text'] {\n      border: 1px solid #f4f5f7;\n      font-size: 1rem;\n      height: 40px;\n      width: 201px;\n    }\n\n    .ql-preview {\n      margin-right: 1rem;\n      text-decoration: underline;\n    }\n    &.ql-editing {\n      a.ql-action {\n        &:after {\n          position: relative;\n          top: 4px;\n          line-height: 1;\n          content: url('data:image/svg+xml;utf8,<svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"%2306c\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" /></svg>');\n          filter: grayscale(1);\n          opacity: 0.5;\n        }\n        &:hover {\n          &:before {\n            filter: grayscale(0);\n            opacity: 1;\n          }\n        }\n      }\n    }\n    a.ql-remove {\n      &:before {\n        position: relative;\n        top: 3px;\n        margin-left: 0.5rem !important;\n        content: url('data:image/svg+xml;utf8,<svg width=\"16\" height=\"16\" viewBox=\"0 0 19 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"%2306c\" d=\"M6.08594 2.13281H5.90625C6.00508 2.13281 6.08594 2.05195 6.08594 1.95312V2.13281H12.9141V1.95312C12.9141 2.05195 12.9949 2.13281 13.0938 2.13281H12.9141V3.75H14.5312V1.95312C14.5312 1.16025 13.8866 0.515625 13.0938 0.515625H5.90625C5.11338 0.515625 4.46875 1.16025 4.46875 1.95312V3.75H6.08594V2.13281ZM17.4062 3.75H1.59375C1.19619 3.75 0.875 4.07119 0.875 4.46875V5.1875C0.875 5.28633 0.955859 5.36719 1.05469 5.36719H2.41133L2.96611 17.1143C3.00205 17.8802 3.63545 18.4844 4.40137 18.4844H14.5986C15.3668 18.4844 15.9979 17.8824 16.0339 17.1143L16.5887 5.36719H17.9453C18.0441 5.36719 18.125 5.28633 18.125 5.1875V4.46875C18.125 4.07119 17.8038 3.75 17.4062 3.75ZM14.4257 16.8672H4.57432L4.03076 5.36719H14.9692L14.4257 16.8672Z\"/></svg>') !important;\n        filter: grayscale(1);\n        opacity: 0.5;\n      }\n      &:hover {\n        &:before {\n          filter: grayscale(0);\n          opacity: 1;\n        }\n      }\n    }\n  }\n`\n","import React, { useCallback, useEffect, useRef, useState } from 'react'\nimport { useHistory } from 'react-router'\nimport styled from 'styled-components'\nimport { Button } from '../styled/button'\nimport CrossIcon from './svgs/cross'\n\ninterface IProps {\n  show: boolean\n  setShow: (_val: boolean) => void\n  exludedPaths?: Array<string>\n}\n\nconst RouterPrompt: React.FC<IProps> = ({ show, setShow, exludedPaths }) => {\n  const history = useHistory()\n  const [showPrompt, setShowPrompt] = useState(false)\n  const [currentPath, setCurrentPath] = useState('')\n  const [confirmedNavigation, setConfirmedNavigation] = useState(false)\n\n  const unblockRef = useRef<any>()\n\n  const handleShowModal = () => {\n    setShowPrompt(true)\n  }\n\n  const onCancel = () => {\n    setShowPrompt(false)\n  }\n\n  useEffect(() => {\n    unblockRef.current = history.block((location) => {\n      if (show) {\n        if (\n          exludedPaths &&\n          exludedPaths?.length > 0 &&\n          exludedPaths.includes(location.pathname)\n        )\n          return\n        setCurrentPath(location.pathname)\n        handleShowModal()\n        return false\n      }\n    })\n\n    return () => {\n      unblockRef.current && unblockRef.current()\n    }\n  }, [show])\n\n  useEffect(() => {\n    if (confirmedNavigation && currentPath) {\n      history.push(currentPath)\n      // Clean-up state on confirmed navigation\n      setConfirmedNavigation(false)\n    }\n  }, [confirmedNavigation, currentPath])\n\n  const handleConfirm = useCallback(() => {\n    setShow(false)\n    if (unblockRef) {\n      unblockRef.current()\n    }\n    setShowPrompt(false)\n    setConfirmedNavigation(true)\n  }, [])\n\n  return showPrompt ? (\n    <Wrapper className=\"prompt-wrapper\">\n      <Box>\n        <CloseBtn onClick={onCancel}>\n          <CrossIcon />\n        </CloseBtn>\n        <h3>Are you sure?</h3>\n        <p>\n          You haven&apos;t saved your changes, if you exit your changes will be\n          lost\n        </p>\n        <ChildWrapper>\n          <Button onClick={handleConfirm} btnType=\"ghost\" size=\"lg\">\n            Ok\n          </Button>\n          <Button onClick={onCancel} btnType=\"primary\" size=\"lg\">\n            Cancel\n          </Button>\n        </ChildWrapper>\n      </Box>\n    </Wrapper>\n  ) : null\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  z-index: 1000;\n  top: 0;\n  left: 0;\n  background-color: ${({ theme }) => theme.shades.dark[3]};\n`\n\nconst Box = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-width: 450px;\n  height: auto;\n  width: 100%;\n  padding: 1.5rem;\n  border: 1px solid rgb(237 237 237 / 20%);\n  border-radius: 6px;\n  background-color: #fff;\n\n  h3 {\n    text-align: center;\n    margin: 1.5rem 0 0;\n  }\n  p {\n    text-align: center;\n    font-size: 1rem;\n    margin-bottom: 2rem;\n  }\n`\n\nconst ChildWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  width: 100%;\n  margin-left: auto;\n`\n\nconst CloseBtn = styled.div`\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: 0;\n  right: 0;\n  cursor: pointer;\n  &:hover {\n    svg {\n      path {\n        stroke: ${({ theme }) => theme.colors.primary};\n      }\n    }\n  }\n`\n\nexport default RouterPrompt\n","import React, { Fragment } from 'react'\ninterface IconProps {\n  size?: string\n  color?: string\n  className?: string\n}\nconst DownArrowIcon = ({ size, color, className }: IconProps) => {\n  return (\n    <Fragment>\n      <svg\n        width={size || '1rem'}\n        className={className || ''}\n        height={size || '1rem'}\n        viewBox='0 0 14 8'\n        fill='none'\n        xmlns='http://www.w3.org/2000/svg'\n      >\n        <path d='M1 1L7 7L13 1' stroke={color || '#898989'} />\n      </svg>\n    </Fragment>\n  )\n}\n\nexport default DownArrowIcon\n","import axios, { AxiosResponse } from 'axios'\n/**\n * Axios api request helper\n * @param options axios request options\n * @returns data | error\n */\nconst axiosRequest = async (\n  options: any\n): Promise<{ data: any; error: any }> => {\n  let data: any = ''\n  let error: any = ''\n  try {\n    const { data: res }: AxiosResponse<any> = await axios.request(options)\n    data = res || ''\n  } catch (err: any) {\n    error =\n      (err.response && err.response.data && err.response.data.error.message) ||\n      'Something went wrong!'\n  }\n\n  return { data, error }\n}\n\nexport default axiosRequest\n","import { useQuery, UseQueryOptions } from 'react-query'\nimport { useAuth } from '../contexts/authProvider'\n\n/**\n * Advance hook for useQuery()\n * @param identifier queryKey  identifier\n * @param fetcher queryFn()\n * @param enabled should query be enabled?\n * @param params useQuery() options\n * @returns useQuery()\n */\nconst getQueryAdvance = (\n  identifier: any,\n  fetcher: () => any,\n  enabled = true,\n  params?: Omit<\n    UseQueryOptions<any, unknown, any, any>,\n    'queryKey' | 'queryFn' | 'enabled'\n  >\n) => {\n  const { user, token } = useAuth()\n  const ref = user && user.ref\n\n  return useQuery(identifier, fetcher, {\n    enabled: !!token && !!ref && enabled,\n    ...params,\n  })\n}\n\nexport default getQueryAdvance\n","import { useState, useEffect } from 'react'\nimport { onbeforeunloadEvent } from '../helpers/onbeforeunloadEvent'\n\n/**\n * Hook to detect route changes and promt user\n * @param bool should promt user ?\n * @returns '{ showExitPrompt, setShowExitPrompt }'\n */\nexport default function useExitPrompt(bool: boolean) {\n  const [showExitPrompt, setShowExitPrompt] = useState(bool)\n\n  const initBeforeUnLoad = (showExitPrompt: boolean) => {\n    Object.defineProperty(window, 'onbeforeunload', (event: any) =>\n      onbeforeunloadEvent(event, showExitPrompt)\n    )\n  }\n\n  Object.defineProperty(window, 'onload', () => {\n    initBeforeUnLoad(showExitPrompt)\n  })\n\n  useEffect(() => {\n    initBeforeUnLoad(showExitPrompt)\n  }, [showExitPrompt])\n\n  return { showExitPrompt, setShowExitPrompt }\n}\n","/**\n * customizes window.onbeforeunload event\n * @param event onbeforeunloadEvent\n * @param showExitPrompt state\n * @returns void\n */\nexport const onbeforeunloadEvent = (event: any, showExitPrompt: boolean) => {\n  if (showExitPrompt) {\n    const e = event || window.event\n\n    e.preventDefault()\n    if (e) {\n      e.returnValue = ''\n    }\n    return ''\n  }\n}\n","import React from 'react'\n\nconst PageNotFound = () => {\n  return (\n    <div className='align-center'>\n      <div>\n        <h3 className='text-center'>This page could not be found</h3>\n      </div>\n    </div>\n  )\n}\n\nexport default PageNotFound\n","import styled from 'styled-components'\n\nexport const GridForm = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 1.5rem;\n  margin: 1.5rem 0;\n  width: 100%;\n\n  @media (max-width: 480px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`\nexport const FormWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  margin-bottom: 3rem;\n`\nexport const FormButtonWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n`\nexport const InvalidFeedBack = styled.div`\n  font-size: 0.8rem;\n  color: ${({ theme }) => theme.colors.danger};\n`\n"],"names":["selectionArray","obj","name","label","isFieldArray","className","style","hideError","props","useFormContext","register","errors","formState","errMsg","Errname","split","length","Object","keys","forEach","key","Fragment","htmlFor","message","maxHeight","formats","modules","control","initialModules","toolbar","list","initialFormats","useEffect","linkInput","document","querySelector","setAttribute","Wrapper","render","field","value","onChange","onBlur","content","theme","bounds","styled","shades","dark","Box","ChildWrapper","CloseBtn","colors","primary","show","setShow","exludedPaths","history","useHistory","useState","showPrompt","setShowPrompt","currentPath","setCurrentPath","confirmedNavigation","setConfirmedNavigation","unblockRef","useRef","onCancel","current","block","location","includes","pathname","push","handleConfirm","useCallback","onClick","btnType","size","color","width","height","viewBox","fill","xmlns","d","stroke","options","data","error","axios","res","response","identifier","fetcher","enabled","params","useAuth","user","token","ref","useQuery","useExitPrompt","bool","showExitPrompt","setShowExitPrompt","initBeforeUnLoad","defineProperty","window","event","e","preventDefault","returnValue","onbeforeunloadEvent","GridForm","FormWrapper","FormButtonWrapper","InvalidFeedBack","danger"],"sourceRoot":""}