{"version":3,"file":"741.bundle.js","mappings":"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","sources":["webpack://user-dashboard/./src/pages/coverletters/createNew.tsx","webpack://user-dashboard/./src/validations/coverletter.ts","webpack://user-dashboard/./src/contexts/coverLetter.tsx","webpack://user-dashboard/./src/pages/coverletters/builder/step1.tsx","webpack://user-dashboard/./src/pages/coverletters/builder/step2.tsx","webpack://user-dashboard/./src/pages/coverletters/builder/coverLetterStepper.tsx","webpack://user-dashboard/./src/pages/coverletters/preview.tsx","webpack://user-dashboard/./src/helpers/previewer.ts","webpack://user-dashboard/./src/pages/coverletters/builder/index.tsx","webpack://user-dashboard/./src/pages/coverletters/template-viewer.tsx","webpack://user-dashboard/./src/pages/coverletters/oldCoverletter.tsx","webpack://user-dashboard/./src/pages/coverletters/index.tsx"],"sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\nimport { useQueryClient } from 'react-query'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Button } from '../../styled/button'\nimport { Spinner } from '../../styled/loader'\nimport { createNewCoverletter } from '../../helpers/coverletter'\n\nconst NewCoverLetter = ({ templateName }: { templateName: string }) => {\n  const [error, setError] = useState(false)\n  const history = useHistory()\n\n  const queryClient = useQueryClient()\n\n  // const createNew = async () => {\n  //   setError(false)\n  //   const { data, error } = await newCoverLetter(templateName)\n  //   if (data) {\n  //     queryClient.setQueryData(['coverletter', data._id], data)\n  //     history.replace(`/coverletters/edit/${data._id}`)\n  //   }\n  //   if (error) setError(true)\n  // }\n\n  const createNew = async () => {\n    setError(false)\n    const result = await createNewCoverletter(\n      templateName,\n      history,\n      queryClient\n    )\n    if (!result) setError(true)\n    return\n  }\n\n  useEffect(() => {\n    createNew()\n  }, [])\n\n  return (\n    <Fragment>\n      <div className=\"flex-center h-100\">\n        {error ? (\n          <ErrWrapper>\n            <h2>Failed to create coverletter.</h2>\n            <Button btnType=\"primary\" size=\"lg\" onClick={() => createNew()}>\n              Try Again\n            </Button>\n          </ErrWrapper>\n        ) : (\n          <Spinner size=\"2.5rem\" type=\"primary\" />\n        )}\n      </div>\n    </Fragment>\n  )\n}\n\nexport default NewCoverLetter\n\nconst ErrWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`\n","import * as Yup from 'yup'\n\nconst first_name = Yup.string()\n  .required('first name is required')\n  .max(20, 'Max 20 characters allowed')\n  .min(3, 'Min 3 characters required')\nconst last_name = Yup.string()\n  .required('last name is required')\n  .max(20, 'Max 20 characters allowed')\n  .min(3, 'Min 3 characters required')\n\nconst email_address = Yup.string()\n  .email('email is invalid')\n  .required('email is required')\n\nconst phoneRegExp =\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\n\nconst phone_number = Yup.string().test(\n  'isValid',\n  'Invalid phone number',\n  (value) => {\n    if (!value) return true\n    return phoneRegExp.test(value) && value.length >= 6 && value.length <= 10\n  }\n)\n\nconst designation = Yup.string().max(50, 'Max 50 characters allowed')\nconst address = Yup.string()\n  .label('address')\n  .max(50, 'Max 50 characters allowed')\n\nconst company = Yup.string().max(50, 'Max 50 characters allowed')\nconst hiring_manager = Yup.string().max(50, 'Max 50 characters allowed')\n\nconst description = Yup.string().test(\n  'test_length_greater_than_3000',\n  'Max 3000 characters allowed',\n  (value) => {\n    if (!value) return true\n    const regex = /(<([^>]+)>)/gi\n    const noBreak = value.replaceAll('<br>', '!!!!!!!!!!!!!!!')\n    const plain = noBreak.replace(regex, '')\n    if (plain.length > 3000) return false\n    else return true\n  }\n)\n\nexport const validateCoverLetterSteps = Yup.object().shape({\n  first_name,\n  last_name,\n  email_address,\n  phone_number,\n  designation,\n  address,\n  company,\n  hiring_manager,\n  description\n})\n","import React, { useEffect, useState } from 'react'\nimport { FormProvider, useForm } from 'react-hook-form'\nimport { ICoverDefault } from '../typings/coverLetter'\nimport '../styled/template_global.css'\nimport { useNotify } from './notify'\nimport { useQueryClient } from 'react-query'\nimport { getCoverLetterTemplate } from '../queries/coverLetterQueries'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport { validateCoverLetterSteps } from '../validations/coverletter'\nimport { loadFonts } from '../helpers/loadFonts'\nimport {\n  handleCoverletterDownload,\n  submitCoveletterForm,\n} from '../helpers/coverletter'\n\ninterface Context {\n  data: ICoverDefault & { id: string | null }\n  isTemplateReady: boolean\n  setTemplate: (name: string) => void\n  templateData: any\n  template: string | null\n  step: number\n  submitSuccess: boolean\n  isSaving: boolean\n  setStep: (val: number) => void\n  submitCoverletter: (\n    type?: 'txt' | 'pdf' | 'docx' | null,\n    autoSave?: boolean\n  ) => void\n}\n\nconst defaultValues = {\n  title: '',\n  first_name: '',\n  last_name: '',\n  email_address: '',\n  phone_number: '',\n  designation: '',\n  address: '',\n  company: '',\n  hiring_manager: '',\n  description: '',\n}\n\n/* istanbul ignore next */\nconst contextValues = {\n  data: { ...defaultValues, id: null },\n  templateData: null,\n  template: null,\n  step: 1,\n  submitSuccess: false,\n  isSaving: false,\n  setStep: () => {\n    return undefined\n  },\n  setTemplate: () => {\n    return undefined\n  },\n  submitCoverletter: () => {\n    return undefined\n  },\n  isTemplateReady: false,\n}\n\nconst CoverLetterContext = React.createContext<Context>(contextValues)\n\nconst CoverLetterProvider = ({ initialData, templateName, children }: any) => {\n  const [cssReady, setCssReady] = useState(false)\n  const [fontsReady, setFontsReady] = useState(false)\n  const [template, setTemplate] = useState('template1')\n  const [queryEnabled, setQueryEnabled] = useState(false)\n  const [submitSuccess, setSubmitSuccess] = useState(false)\n  const [step, setStep] = useState(1)\n  const [isSaving, setIsSaving] = useState(false)\n\n  const { setNotify } = useNotify()\n  const queryClient = useQueryClient()\n\n  const methods = useForm<ICoverDefault>({\n    mode: 'onChange',\n    defaultValues,\n    criteriaMode: 'all',\n    resolver: yupResolver(validateCoverLetterSteps),\n  })\n\n  const {\n    data: templateData,\n    isLoading: isTemplateLoading,\n    isError: isTemplateError,\n  } = getCoverLetterTemplate(template, queryEnabled && !!templateName)\n\n  const {\n    handleSubmit,\n    watch,\n    reset,\n    trigger,\n    setValue,\n    formState: { isValid, isDirty },\n  } = methods\n\n  useEffect(() => {\n    if (!initialData) return\n    if (initialData.template) {\n      setTemplate(initialData.template)\n    }\n\n    const { fields } = initialData\n\n    if (!fields) return\n    const formData = {\n      title: initialData.title || 'Untitled',\n      first_name: fields.first_name || '',\n      last_name: fields.last_name || '',\n      email_address: fields.email_address || '',\n      phone_number: fields.phone_number || '',\n      designation: fields.designation || '',\n      address: fields.address || '',\n      company: fields.company || '',\n      hiring_manager: fields.hiring_manager || '',\n      description: fields.description || '',\n    }\n    reset(formData, {\n      keepDirty: true,\n      keepIsValid: true,\n      keepErrors: true,\n    })\n    setQueryEnabled(true)\n  }, [initialData])\n\n  useEffect(() => {\n    setCssReady(false)\n  }, [template])\n\n  const loadTemplateFonts = async () => {\n    await loadFonts(templateData.fonts)\n    return setFontsReady(true)\n  }\n\n  useEffect(() => {\n    if (\n      !queryEnabled ||\n      !templateData ||\n      !templateData.fonts ||\n      templateData.fonts === 0\n    )\n      return\n    setFontsReady(false)\n    loadTemplateFonts()\n\n    // if ('fonts' in document) {\n    //   Promise.all(\n    //     templateData.fonts.map((font: any) => {\n    //       const face = new FontFace(\n    //         font.name,\n    //         `url(${font.url}) format('${font.format}')`\n    //       )\n    //       face.style = font.style\n    //       face.weight = font.weight\n    //       return face.load()\n    //     })\n    //   ).then(function (loadedFonts) {\n    //     loadedFonts &&\n    //       loadedFonts.forEach(function (font) {\n    //         if (font) document.fonts.add(font as FontFace)\n    //         return\n    //       })\n    //     setFontsReady(true)\n    //   })\n    // }\n    return () => setFontsReady(true)\n  }, [templateData, queryEnabled])\n\n  useEffect(() => {\n    if (!document || !queryEnabled || cssReady) return\n    const old = document.getElementById('css_style')\n    if (old) {\n      old.remove()\n    }\n\n    const link = document.createElement('link')\n    link.id = 'css_style'\n    link.setAttribute('rel', 'stylesheet')\n    link.setAttribute('type', 'text/css')\n    link.setAttribute(\n      'href',\n      `${process.env.API_HOST}/css/coverletters/${template}.css`\n    )\n    /* istanbul ignore next */\n    link.onload = () => {\n      setCssReady(true)\n    }\n    /* istanbul ignore next */\n    link.onerror = () => {\n      return console.log('stylesheet could not be loaded')\n    }\n    document.head.appendChild(link)\n    return () => {\n      setCssReady(true)\n    }\n  }, [cssReady, queryEnabled])\n\n  const currData = watch()\n\n  const regex = /(<([^>]+)>)/gi\n  const hasTextinDescription = !!currData.description.replace(regex, '').length\n\n  useEffect(() => {\n    if (!hasTextinDescription && isDirty) {\n      setValue('description', '')\n    }\n  }, [currData.description])\n\n  const submitCoverletter = async (\n    type?: 'txt' | 'pdf' | 'docx' | null,\n    autoSave?: boolean\n  ) => {\n    const submitForm = async (data: any) => {\n      return await submitCoveletterForm(\n        template,\n        type,\n        initialData,\n        data,\n        watch,\n        reset,\n        setSubmitSuccess,\n        setNotify,\n        queryClient\n      )\n    }\n    // const donwnloadHandler = async (name: string, id: string, type: string) => {\n    //   const res: any = await downloadCoverLetter(id, type)\n    //   if (res) {\n    //     const docName = name\n    //       ? name.replaceAll(/\\s/g, '-')\n    //       : 'untitled-coverletter'\n\n    //     const filename = docName + '.' + type\n    //     const url = window.URL.createObjectURL(new Blob([res.data]))\n    //     const link = document.createElement('a')\n    //     link.href = url\n    //     link.setAttribute('download', filename)\n    //     document.body.appendChild(link)\n    //     link.click()\n    //     document.body.removeChild(link)\n    //     window.URL.revokeObjectURL(url)\n    //   } else {\n    //     setNotify({\n    //       type: 'danger',\n    //       heading: 'Err!',\n    //       message: 'Failed to donwload design',\n    //     })\n    //   }\n    // }\n    // const submitForm = async (data: any) => {\n    //   try {\n    //     setSubmitSuccess(false)\n    //     if (!data) return\n    //     const { data: resData, error } = await updateCoverLetter({\n    //       title: data.title,\n    //       template,\n    //       id: initialData._id,\n    //       ...data,\n    //     })\n    //     if (error) {\n    //       !axios.isCancel(error) &&\n    //         setNotify({\n    //           type: 'danger',\n    //           heading: 'Err!',\n    //           message: 'Failed to update design',\n    //         })\n    //     }\n    //     if (resData) {\n    //       if (type) {\n    //         const name = resData.fields ? resData.fields.first_name : ''\n    //         await donwnloadHandler(name, resData._id, type)\n    //       }\n\n    //       const coverletters: Array<any> | undefined =\n    //         queryClient.getQueryData('coverletters')\n    //       if (coverletters) {\n    //         const find = coverletters.findIndex(\n    //           (item) => item._id === resData._id\n    //         )\n    //         if (find >= 0) {\n    //           coverletters.splice(find, 1, resData)\n    //         } else {\n    //           coverletters.unshift(resData)\n    //         }\n    //         queryClient.setQueryData('coverletters', coverletters)\n    //       }\n    //       resData.fields = watch()\n\n    //       queryClient.setQueryData(['coverletter', resData._id], resData)\n    //       setSubmitSuccess(true)\n    //       reset(\n    //         {},\n    //         {\n    //           keepDirty: false,\n    //           keepValues: true,\n    //           keepIsValid: true,\n    //           keepErrors: true,\n    //         }\n    //       )\n    //     }\n    //   } catch (err) {\n    //     setNotify({\n    //       type: 'danger',\n    //       heading: 'Err!',\n    //       message: 'Something went wrong!',\n    //     })\n    //   }\n    // }\n\n    if (!autoSave) {\n      trigger()\n      if (!isValid) {\n        return setNotify({\n          type: 'warning',\n          heading: 'Invalid fields!',\n          message: 'Valid fields are required to proceed',\n        })\n      }\n    }\n\n    if (isDirty || initialData.template !== template) {\n      setIsSaving(true)\n      await handleSubmit(submitForm)()\n      setIsSaving(false)\n    } else {\n      setIsSaving(true)\n      const name = currData.first_name\n      await handleCoverletterDownload(\n        name,\n        initialData._id,\n        type as any,\n        setNotify\n      )\n      setIsSaving(false)\n    }\n  }\n\n  return (\n    <CoverLetterContext.Provider\n      value={{\n        data: { ...currData, id: initialData ? initialData._id : null },\n        isTemplateReady:\n          cssReady &&\n          !isTemplateLoading &&\n          templateData &&\n          fontsReady &&\n          queryEnabled,\n        templateData,\n        submitSuccess,\n        setTemplate,\n        template,\n        submitCoverletter,\n        step,\n        setStep,\n        isSaving,\n      }}\n    >\n      <FormProvider {...methods}>{children}</FormProvider>\n    </CoverLetterContext.Provider>\n  )\n}\n\nexport default CoverLetterProvider\n\nconst useCoverLetter = () => {\n  const {\n    data,\n    isTemplateReady,\n    templateData,\n    setTemplate,\n    template,\n    submitCoverletter,\n    submitSuccess,\n    step,\n    setStep,\n    isSaving,\n  } = React.useContext(CoverLetterContext)\n\n  return {\n    data,\n    isTemplateReady,\n    templateData,\n    setTemplate,\n    template,\n    submitCoverletter,\n    submitSuccess,\n    step,\n    setStep,\n    isSaving,\n  }\n}\n\nexport { CoverLetterProvider, useCoverLetter }\n","import React, { Fragment, useEffect, useState } from 'react'\nimport { useFormContext } from 'react-hook-form'\nimport styled from 'styled-components'\nimport Input from '../../../components/form/Input'\nimport { useCoverLetter } from '../../../contexts/coverLetter'\n\nconst Step1 = () => {\n  const { data } = useCoverLetter()\n\n  const [titleVal, setTitleVal] = useState('')\n\n  const { setValue } = useFormContext()\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.value.length > 30) {\n      setTitleVal(e.target.value.substring(0, 30))\n    } else {\n      setTitleVal(e.target.value)\n    }\n  }\n\n  useEffect(() => {\n    setTitleVal(data.title)\n  }, [data.title])\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setValue('title', titleVal, { shouldDirty: true })\n    }, 300)\n    return () => clearTimeout(timer)\n  }, [titleVal])\n\n  return (\n    <Fragment>\n      <TitleWrapper>\n        <input\n          name=\"title\"\n          placeholder=\"Untitled\"\n          value={titleVal}\n          onChange={(e) => handleChange(e)}\n          spellCheck={false}\n          autoComplete=\"off\"\n        />\n        <p id=\"mask\">{titleVal}</p>\n      </TitleWrapper>\n      <h2>Primary Details</h2>\n      <Grid className=\"mb-3\">\n        <div>\n          <Input name=\"first_name\" label=\"First Name\" />\n        </div>\n        <div>\n          <Input name=\"last_name\" label=\"Last Name\" />\n        </div>\n        <div>\n          <Input name=\"email_address\" label=\"Email address\" />\n        </div>\n        <div>\n          <Input name=\"phone_number\" label=\"Phone number\" />\n        </div>\n        <div>\n          <Input name=\"designation\" label=\"Designation\" />\n        </div>\n        <div>\n          <Input name=\"address\" label=\"Address\" />\n        </div>\n      </Grid>\n      <h2>Company Details</h2>\n      <Grid className=\"mb-3\">\n        <div>\n          <Input name=\"company\" label=\"Company Name\" />\n        </div>\n        <div>\n          <Input name=\"hiring_manager\" label=\"Hiring manager name\" />\n        </div>\n      </Grid>\n    </Fragment>\n  )\n}\n\nexport default Step1\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 1.5rem;\n`\nconst TitleWrapper = styled.div`\n  overflow: hidden;\n  max-width: 100%;\n  position: relative;\n  top: -20px;\n  margin: 1rem 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  input {\n    background-color: transparent;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    left: 0px;\n    top: 0px;\n    padding: 0px;\n    margin: 0px;\n    border: none;\n    font-size: 2rem;\n    text-align: center;\n    z-index: 1;\n    color: #555;\n  }\n  input:focus {\n    color: #343434;\n  }\n  input:hover ~ p:after,\n  input:focus ~ p:after {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  p {\n    height: 100%;\n    position: relative;\n    width: fit-content;\n    font-size: 2rem;\n    text-align: center;\n    margin: 0;\n    color: transparent;\n    &:after {\n      content: '';\n      display: flex;\n      height: 2px;\n      z-index: 100;\n      bottom: -10px;\n      width: 100%;\n      background-color: transparent;\n    }\n  }\n`\n","import React, { Fragment } from 'react'\nimport { useFormContext } from 'react-hook-form'\nimport RichTextEditor from '../../../components/form/RichTextEditor'\nimport { InvalidFeedBack } from '../../../styled/form'\n\nconst Step2 = () => {\n  const {\n    formState: { errors }\n  } = useFormContext()\n  return (\n    <Fragment>\n      <div className='mb-3'>\n        <h2>Letter Details</h2>\n        <p className='mb-3'>\n          3–4 paragraphs explaining why you&apos;re the perfect candidate for a\n          specific job\n        </p>\n\n        <RichTextEditor name='description' />\n        {errors.description && (\n          <InvalidFeedBack style={{ marginTop: '0.5rem' }}>\n            {errors.description.message}\n          </InvalidFeedBack>\n        )}\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Step2\n","import React, { Fragment, useEffect, useState } from 'react'\nimport { useFormContext } from 'react-hook-form'\nimport { CSSTransition } from 'react-transition-group'\nimport styled, { keyframes } from 'styled-components'\nimport CheckIcon1 from '../../../components/svgs/check1'\nimport { useCoverLetter } from '../../../contexts/coverLetter'\nimport { useViewport } from '../../../contexts/viewPort'\nimport { Button } from '../../../styled/button'\nimport { Spinner } from '../../../styled/loader'\nimport { FormButtonWrapper } from '../../../styled/form'\nimport Step1 from './step1'\nimport Step2 from './step2'\nimport WarningIcon from '../../../components/svgs/warning'\n\ninterface IProps {\n  step: number\n  setStep: (val: any) => void\n  max: number\n}\n\nconst CoverLetterStepper: React.FC<IProps> = ({ step, setStep, max }) => {\n  const [submit, setSubmit] = useState(false)\n\n  const { submitCoverletter, submitSuccess } = useCoverLetter()\n  const { width } = useViewport()\n  const btnSize = width > 1300 ? 'lg' : 'sm'\n  const {\n    formState: { isSubmitting, isDirty, isValid },\n  } = useFormContext()\n\n  const handleNext = () => {\n    step < max && setStep((prev: number) => prev + 1)\n    return setSubmit(true)\n  }\n\n  const handlePrev = () => {\n    return step > 1 && setStep((prev: number) => prev - 1)\n  }\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (submit) {\n        if (isDirty) {\n          submitCoverletter(null, step === 2)\n        }\n        setSubmit(false)\n      }\n    }, 1000)\n\n    return () => clearTimeout(timer)\n  }, [submit])\n\n  return (\n    <Fragment>\n      <Wrapper>\n        {step === 1 ? <Step1 /> : step === 2 ? <Step2 /> : null}\n\n        <FormButtonWrapper>\n          <Button\n            type=\"button\"\n            btnType=\"ghost\"\n            size={btnSize}\n            color=\"#343434\"\n            onClick={() => handlePrev()}\n            style={{ marginRight: '1rem' }}\n          >\n            {step === 1 ? 'Cancel' : 'Previous'}\n          </Button>\n          <Button\n            type=\"button\"\n            btnType=\"primary\"\n            size={btnSize}\n            onClick={() => handleNext()}\n            disabled={\n              (isSubmitting || !isValid || !isDirty || submit) && step === 2\n            }\n          >\n            {step === 2 ? 'Save Changes' : 'Next'}\n          </Button>\n        </FormButtonWrapper>\n        <CSSTransition\n          in={isSubmitting && isValid}\n          timeout={{\n            enter: 200,\n            exit: 5000,\n          }}\n        >\n          <Loader data-test-id=\"save-loader\">\n            {isSubmitting ? (\n              <Fragment>\n                <Spinner type=\"primary\" size=\"1.5rem\" />\n                <LoadingDots color=\"#f08438\">Saving</LoadingDots>\n              </Fragment>\n            ) : submitSuccess ? (\n              <Fragment>\n                <CheckIcon1 size=\"1.5rem\" color=\"#f08438\" />\n                <p style={{ color: '#f08438', margin: '0 0.7rem' }}>Saved</p>\n              </Fragment>\n            ) : (\n              <Fragment>\n                <WarningIcon size=\"1.5rem\" color=\"#f08438\" />\n                <p style={{ color: '#f08438', margin: '0 0.7rem' }}>Failed</p>\n              </Fragment>\n            )}\n          </Loader>\n        </CSSTransition>\n      </Wrapper>\n    </Fragment>\n  )\n}\n\nexport default CoverLetterStepper\n\nconst Wrapper = styled.div`\n  padding: 2.75rem;\n  max-width: 900px;\n  margin: auto;\n`\n\nconst Loader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: fit-content;\n  padding: 0 0.5rem;\n  height: 50px;\n  min-width: 50px;\n  transition: ease 300ms;\n  background-color: #fff;\n  border-radius: 1rem;\n  box-shadow: 4px 0px 20px 0px #ddd;\n  border: 1px solid #eee;\n  position: absolute;\n  left: 40px;\n  bottom: 40px;\n  opacity: 0;\n  visibility: hidden;\n\n  &.enter-done,\n  &.enter-active,\n  &.exit-active {\n    opacity: 1;\n    visibility: visible;\n  }\n  &.exit-done {\n    opacity: 0;\n    visibility: hidden;\n  }\n`\n\nconst dots = (color: string) => keyframes`\n   0%, 20% {\n    color: rgba(0,0,0,0);\n    text-shadow:\n      .25em 0 0 rgba(0,0,0,0),\n      .5em 0 0 rgba(0,0,0,0);}\n  40% {\n    color: ${color};\n    text-shadow:\n      .25em 0 0 rgba(0,0,0,0),\n      .5em 0 0 rgba(0,0,0,0);}\n  60% {\n    text-shadow:\n      .25em 0 0 ${color},\n      .5em 0 0 rgba(0,0,0,0);}\n  80%, 100% {\n    text-shadow:\n      .25em 0 0 ${color},\n      .5em 0 0 ${color};\n    }\n    \n`\n\nconst LoadingDots = styled.p<{ color: string }>`\n  display: inline-flex;\n  margin: 0 0.7rem;\n  color: ${({ theme, color }) => (color ? color : theme.colors.dark)};\n  &:after {\n    content: '.';\n    margin-left: 0.1rem;\n    animation: ${({ theme, color }) => dots(color ? color : theme.colors.dark)}\n      1s steps(5, end) infinite;\n  }\n`\n","import React, { Fragment, useEffect, useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button } from '../../styled/button'\nimport BlocksIcon from '../../components/svgs/blocks'\nimport DownArrowIcon from '../../components/svgs/downArrow'\nimport { useFormContext } from 'react-hook-form'\nimport DropButton from '../../components/ui/DropButton'\nimport VerticalLineIcon from '../../components/svgs/verticalLine'\nimport { useHistory } from 'react-router-dom'\nimport templateMapper from '../../helpers/templateMapper'\nimport { useCoverLetter } from '../../contexts/coverLetter'\nimport { useViewport } from '../../contexts/viewPort'\nimport PreviewSkeleton from '../../components/ui/previewSkeleton'\nimport { getPreviewTemplateBufferHeight } from '../../helpers/previewer'\nimport { Spinner } from '../../styled/loader'\n\nconst Previewer = ({ isDataLoading }: { isDataLoading: boolean }) => {\n  const ref = useRef<HTMLDivElement>(null)\n  const [pages, setPages] = useState(1)\n  const [curr, setCurr] = useState(1)\n  const [buffer, setBuffer] = useState(0)\n  const [showDownload, setShowDownload] = useState(false)\n  const [firstLoad, setFirstLoad] = useState(false)\n\n  const { width, height } = useViewport()\n  const histroy = useHistory()\n\n  const { data, templateData, isTemplateReady, submitCoverletter, isSaving } =\n    useCoverLetter()\n\n  const {\n    formState: { isSubmitting, isValid },\n  } = useFormContext()\n\n  useEffect(() => {\n    if (isSaving) setShowDownload(false)\n    return\n  }, [isSaving])\n\n  const scale = width >= 1500 ? 0.6 : width / 1920\n\n  const top = scale >= 0.7 ? scale * 50 : scale * -60\n\n  useEffect(() => {\n    // if (!ref || !ref.current) return\n    // const page = ref.current.children[0] as HTMLElement\n    // page.style.transform = `scale(${scale})`\n    // ref.current.style.width = page.getBoundingClientRect().width + 'px'\n    // ref.current.style.height = page.getBoundingClientRect().height + 'px'\n    // const calcX = (page.clientWidth * (scale - 1)) / 2\n    // const calcY = (page.clientHeight * (scale - 1)) / 2\n    // page.style.transform = `translate3d(${calcX}px, ${calcY}px, 0px) scale(${scale})`\n    // const dummyBufferEl = document.createElement('div')\n    // dummyBufferEl.style.height = '50px'\n    // dummyBufferEl.style.transform = `scale(${scale})`\n    // dummyBufferEl.style.visibility = 'hidden'\n    // dummyBufferEl.style.position = 'absolute'\n    // dummyBufferEl.style.opacity = '0'\n    // document.body.appendChild(dummyBufferEl)\n    // const bufferHeight = dummyBufferEl.getBoundingClientRect().height\n    // setBuffer(bufferHeight)\n    // document.body.removeChild(dummyBufferEl)\n    const result = getPreviewTemplateBufferHeight(ref, scale)\n    if (!result) return\n    result.bufferHeight && setBuffer(result.bufferHeight)\n    result.dummyBufferEl && document.body.removeChild(result.dummyBufferEl)\n  }, [ref.current, width, height])\n\n  useEffect(() => {\n    if (!data || isSubmitting || !isTemplateReady || buffer === 0) return\n\n    const timer = setTimeout(() => {\n      if (!ref || !ref.current) return\n      const page = ref.current.querySelector('.page')\n      if (!page) return\n      const wrapper = page.children[0] as HTMLElement\n\n      if (!wrapper) return\n      const template = JSON.parse(JSON.stringify(templateData))\n      wrapper.innerHTML = ''\n      const pages = templateMapper(template, data, wrapper, buffer)\n      if (!pages) return\n      updatePages(Object.keys(pages).length)\n\n      if (!firstLoad) setFirstLoad(true)\n    }, 500)\n    return () => clearTimeout(timer)\n  }, [data, ref, isTemplateReady, buffer])\n\n  useEffect(() => {\n    if (!ref || !ref.current) return\n    const page = ref.current.querySelector('.page') as HTMLElement\n    if (!page) return\n    const wrapper = page.children[0] as HTMLElement\n    if (!wrapper) return\n    wrapper.style.transform = `translateY(-${page.clientHeight * (curr - 1)}px)`\n    wrapper.style.height = page.clientHeight * curr + 'px'\n  }, [curr, ref.current])\n\n  const updatePages = (total: number) => {\n    curr > total && setCurr(total)\n    setPages(total)\n  }\n\n  const handleClick = (type: 'prev' | 'next') => {\n    if (type === 'prev') curr > 1 && curr <= pages && setCurr(curr - 1)\n    if (type === 'next') curr >= 1 && curr < pages && setCurr(curr + 1)\n    return\n  }\n  return (\n    <Fragment>\n      <SkeletonWrapper\n        data-test-id=\"preview-skeleton\"\n        style={\n          isDataLoading || !data || !isTemplateReady || !firstLoad\n            ? { visibility: 'visible' }\n            : { visibility: 'hidden' }\n        }\n      >\n        {width ? (\n          <PreviewSkeleton\n            style={{\n              position: 'absolute',\n              marginTop: 0,\n              top: `${top}px`,\n            }}\n            scale={scale}\n          />\n        ) : null}\n      </SkeletonWrapper>\n      <PreviewWrapper>\n        <TemplateWrapper ref={ref}>\n          <div className=\"page\">\n            <div style={{ width: '100%' }} />\n          </div>\n        </TemplateWrapper>\n        <PreviewFooter\n          className={`template_footer ${\n            isDataLoading || !data || !isTemplateReady || !firstLoad\n              ? 'invisible'\n              : ''\n          }`}\n        >\n          <div>\n            <TemplateBtn\n              type=\"button\"\n              btnType=\"ghost\"\n              color=\"#F08438\"\n              size=\"lg\"\n              style={{ justifyContent: 'space-around' }}\n              disabled={isSubmitting}\n              onClick={() => histroy.push(`/coverletters/preview/${data.id}`)}\n            >\n              <BlocksIcon size={width < 1300 ? '0.8rem' : '1rem'} />\n              Change template\n            </TemplateBtn>\n          </div>\n\n          <PageToggler>\n            <button\n              type=\"button\"\n              style={{ transform: 'rotateZ(90deg)' }}\n              onClick={() => handleClick('prev')}\n            >\n              <DownArrowIcon size=\"0.75rem\" />\n            </button>\n\n            <p>\n              {curr}&nbsp;/&nbsp;{pages}\n            </p>\n            <button\n              type=\"button\"\n              style={{ transform: 'rotateZ(270deg)' }}\n              onClick={() => handleClick('next')}\n            >\n              <DownArrowIcon size=\"0.75rem\" />\n            </button>\n          </PageToggler>\n\n          <div>\n            <DownloadBtn\n              vertical=\"top\"\n              horizontal=\"left\"\n              show={showDownload}\n              setShow={setShowDownload}\n              disabled={isSaving || !isValid || isSubmitting}\n            >\n              <DropButton.Button>\n                <Fragment>\n                  {!isSaving ? (\n                    <Fragment>\n                      Download <VerticalLineIcon /> <DownArrowIcon />\n                    </Fragment>\n                  ) : (\n                    <Fragment>\n                      Downloading <Spinner size=\"1rem\" />\n                    </Fragment>\n                  )}\n                </Fragment>\n              </DropButton.Button>\n              <DropButton.Item>\n                <a onClick={() => submitCoverletter('pdf')}>Download PDF</a>\n              </DropButton.Item>\n\n              <DropButton.Item>\n                <a onClick={() => submitCoverletter('docx')}>Export to DOCX</a>\n              </DropButton.Item>\n\n              <DropButton.Item>\n                <a onClick={() => submitCoverletter('txt')}>Export to TXT</a>\n              </DropButton.Item>\n            </DownloadBtn>\n          </div>\n        </PreviewFooter>\n      </PreviewWrapper>\n    </Fragment>\n  )\n}\n\nexport default Previewer\n\nconst PreviewWrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  margin: auto;\n`\nconst PreviewFooter = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 1.5rem;\n`\nconst PageToggler = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  p {\n    font-weight: 600;\n  }\n  button {\n    padding-left: 0.5rem;\n    padding-right: 0.5rem;\n    svg {\n      path {\n        stroke-width: 1.5;\n      }\n    }\n  }\n`\nconst TemplateWrapper = styled.div`\n  display: block;\n  position: relative;\n`\nconst DownloadBtn = styled(DropButton)`\n  button {\n    background: rgba(240, 132, 56, 1);\n    color: #fff;\n    height: 40px;\n    width: 150px;\n    display: flex;\n    justify-content: space-around;\n    padding: 0 1rem;\n    border-radius: 6px;\n    @media (max-width: 1300px) {\n      height: 32px;\n      font-size: 0.75rem;\n      width: 120px;\n    }\n    svg {\n      path {\n        stroke: #fff;\n      }\n    }\n    &:disabled {\n      background-color: ${({ theme }) => theme.colors.grey};\n    }\n  }\n`\n\nconst TemplateBtn = styled(Button)`\n  @media (max-width: 1300px) {\n    height: 32px;\n    font-size: 0.75rem;\n    width: 120px;\n  }\n`\nconst SkeletonWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: auto;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  z-index: 1;\n  background: #f7f9fc;\n`\n","export const getPreviewTemplateBufferHeight = (\n  ref: React.RefObject<HTMLDivElement>,\n  scale: number\n) => {\n  if (!ref || !ref.current) return\n  const page = ref.current.children[0] as HTMLElement\n  page.style.transform = `scale(${scale})`\n  ref.current.style.width = page.getBoundingClientRect().width + 'px'\n  ref.current.style.height = page.getBoundingClientRect().height + 'px'\n  const calcX = (page.clientWidth * (scale - 1)) / 2\n  const calcY = (page.clientHeight * (scale - 1)) / 2\n  page.style.transform = `translate3d(${calcX}px, ${calcY}px, 0px) scale(${scale})`\n  const dummyBufferEl = document.createElement('div')\n  dummyBufferEl.className = 'dummybuff'\n  dummyBufferEl.style.height = '50px'\n  dummyBufferEl.style.transform = `scale(${scale})`\n  dummyBufferEl.style.visibility = 'hidden'\n  dummyBufferEl.style.position = 'absolute'\n  dummyBufferEl.style.opacity = '0'\n  document.body.appendChild(dummyBufferEl)\n\n  const bufferHeight = dummyBufferEl.getBoundingClientRect().height\n  return { dummyBufferEl, bufferHeight }\n}\n","import React, { Fragment, useEffect } from 'react'\nimport styled from 'styled-components'\nimport HeaderStepper from '../../../components/ui/headerStepper'\nimport { useCoverLetter } from '../../../contexts/coverLetter'\nimport CoverLetterStepper from './coverLetterStepper'\nimport Previewer from '../preview'\nimport TemplateFormSekleton from '../../../components/ui/tempFormSekleton'\nimport { useFormContext } from 'react-hook-form'\nimport RouterPrompt from '../../../components/routerPrompt'\nimport useExitPrompt from '../../../hooks/useExitPromt'\n\nconst CoverLetterBuilder = ({ isLoading }: { isLoading: boolean }) => {\n  const { data, step, setStep } = useCoverLetter()\n  const { showExitPrompt, setShowExitPrompt } = useExitPrompt(false)\n  const {\n    formState: { errors, isDirty, isValid, isSubmitting },\n  } = useFormContext()\n\n  const isErrorStep1 =\n    errors.first_name ||\n    errors.last_name ||\n    errors.phone_number ||\n    errors.email_address ||\n    errors.address ||\n    errors.designation ||\n    errors.company ||\n    errors.hiring_manager\n      ? true\n      : false\n\n  const isErrorStep2 = errors.description ? true : false\n\n  const isValidStep1 =\n    data.first_name && data.last_name && data.email_address && !isErrorStep1\n      ? true\n      : false\n\n  const isValidStep2 = !isErrorStep2 ? true : false\n\n  useEffect(() => {\n    return () => {\n      setShowExitPrompt(false)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (isDirty || !isValid || isSubmitting) {\n      setShowExitPrompt(true)\n    } else {\n      setShowExitPrompt(false)\n    }\n  }, [isDirty, isSubmitting, isValid])\n\n  const paths = data && data.id ? [`/coverletters/preview/${data.id}`] : []\n\n  return (\n    <Fragment>\n      <RouterPrompt\n        show={showExitPrompt}\n        setShow={setShowExitPrompt}\n        exludedPaths={paths}\n      />\n\n      <Wrapper>\n        <HeaderStepper max={2} current={step} backRoute=\"/coverletters\">\n          <HeaderStepper.Step\n            name=\"Personal Info\"\n            isValid={isValidStep1}\n            isError={isErrorStep1}\n            onClick={() => setStep(1)}\n          />\n          <HeaderStepper.Step\n            name=\"Letter Body\"\n            isValid={isValidStep2}\n            isError={isErrorStep2}\n            onClick={() => setStep(2)}\n          />\n        </HeaderStepper>\n\n        <form id=\"coverLetterForm\" style={{ overflow: 'hidden' }}>\n          <LHS>\n            {isLoading || !data ? (\n              <TemplateFormSekleton />\n            ) : (\n              <CoverLetterStepper step={step} setStep={setStep} max={2} />\n            )}\n          </LHS>\n          <RHS>\n            <Previewer isDataLoading={isLoading} />\n          </RHS>\n        </form>\n      </Wrapper>\n    </Fragment>\n  )\n}\n\nexport default CoverLetterBuilder\n\nconst Wrapper = styled.div`\n  background-color: #fff;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  padding-top: 7rem;\n`\n\nconst LHS = styled.div`\n  height: 100%;\n  width: 50%;\n  margin-right: 50%;\n  overflow-y: scroll;\n  &::-webkit-scrollbar {\n    width: 0;\n  }\n`\nconst RHS = styled.div`\n  background-color: #f7f9fc;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  user-select: none;\n  height: 100%;\n  position: fixed;\n  width: 50%;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  overflow-y: scroll;\n  padding-top: 7rem;\n  @media (max-width: 1500px) {\n    padding-bottom: 2rem;\n    padding-top: 9rem;\n  }\n`\n","import React, { Fragment, useEffect, useRef, useState } from 'react'\nimport { useFormContext } from 'react-hook-form'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport DownArrowIcon from '../../components/svgs/downArrow'\nimport DownloadIcon from '../../components/svgs/download'\nimport DropButton from '../../components/ui/DropButton'\nimport { Button } from '../../styled/button'\nimport '../../styled/template_global.css'\nimport templateMapper from '../../helpers/templateMapper'\nimport PreviewSkeleton from '../../components/ui/previewSkeleton'\nimport { useCoverLetter } from '../../contexts/coverLetter'\nimport { useViewport } from '../../contexts/viewPort'\nimport { getAllCoverLetterTemplates } from '../../queries/coverLetterQueries'\nimport { Spinner } from '../../styled/loader'\n\nconst TemplateViewer = ({ isLoading }: { isLoading: boolean }) => {\n  const [showDownload, setShowDownload] = useState(false)\n  const [isTemplateMapping, setIsTemplateMapping] = useState(false)\n  const [pages, setPages] = useState(1)\n  const [curr, setCurr] = useState(1)\n  const [buffer, setBuffer] = useState(0)\n  const { width, height } = useViewport()\n  const histroy = useHistory()\n\n  const {\n    data,\n    isTemplateReady,\n    template,\n    templateData,\n    setTemplate,\n    submitCoverletter,\n    isSaving,\n  } = useCoverLetter()\n\n  const {\n    data: templates,\n    isLoading: isTemplateLoading,\n    isError,\n  } = getAllCoverLetterTemplates()\n\n  const ref = useRef<HTMLDivElement>(null)\n\n  const {\n    formState: { isValid },\n  } = useFormContext()\n\n  const scale =\n    width >= 1920\n      ? 1.15\n      : width <= 1080\n      ? (width * 1.4) / 1920\n      : (width * 1.15) / 1920\n\n  useEffect(() => {\n    if (!ref || !ref.current || !templateData) return\n    const page = ref.current.children[0] as HTMLElement\n    page.style.transform = `scale(${scale})`\n    ref.current.style.width = page.getBoundingClientRect().width + 'px'\n    ref.current.style.height = page.getBoundingClientRect().height + 'px'\n    const calcX = (page.clientWidth * (scale - 1)) / 2\n    const calcY = (page.clientHeight * (scale - 1)) / 2\n    page.style.transform = `translate3d(${calcX}px, ${calcY}px, 0px) scale(${scale})`\n    const dummyBufferEl = document.createElement('div')\n    dummyBufferEl.style.height = '50px'\n    dummyBufferEl.style.transform = `scale(${scale})`\n    dummyBufferEl.style.visibility = 'hidden'\n    dummyBufferEl.style.position = 'absolute'\n    dummyBufferEl.style.opacity = '0'\n    document.body.appendChild(dummyBufferEl)\n    const bufferHeight = dummyBufferEl.getBoundingClientRect().height\n    setBuffer(bufferHeight)\n    document.body.removeChild(dummyBufferEl)\n  }, [data, ref, templateData, templates, width, height])\n\n  useEffect(() => {\n    if (\n      !data ||\n      !templates ||\n      isSaving ||\n      isTemplateLoading ||\n      !isTemplateReady ||\n      buffer === 0\n    )\n      return\n    setIsTemplateMapping(true)\n    const timer = setTimeout(() => {\n      if (!ref || !ref.current) return\n      const container = document.querySelector('.rhs_wrapper')\n      container && container.scrollTo(0, 0)\n      const page = ref.current.querySelector('.page')\n      if (!page) return\n      const wrapper = page.children[0] as HTMLElement\n\n      if (!wrapper) return\n      const template = JSON.parse(JSON.stringify(templateData))\n      wrapper.innerHTML = ''\n      const pages = templateMapper(template, data, wrapper, buffer)\n      if (!pages) return\n      updatePages(Object.keys(pages).length)\n      setCurr(1)\n      setIsTemplateMapping(false)\n    }, 500)\n    return () => clearTimeout(timer)\n  }, [\n    data,\n    ref,\n    isTemplateLoading,\n    templates,\n    isTemplateReady,\n    isSaving,\n    buffer,\n  ])\n\n  useEffect(() => {\n    if (!ref || !ref.current) return\n    const page = ref.current.querySelector('.page') as HTMLElement\n    if (!page) return\n    const wrapper = page.children[0] as HTMLElement\n    if (!wrapper) return\n    wrapper.style.transform = `translateY(-${page.clientHeight * (curr - 1)}px)`\n    wrapper.style.height = page.clientHeight * curr + 'px'\n  }, [curr, ref.current])\n\n  useEffect(() => {\n    if (isSaving) setShowDownload(false)\n    return\n  }, [isSaving])\n\n  const updatePages = (total: number) => {\n    curr > total && setCurr(total)\n    setPages(total)\n  }\n\n  const handleClick = (type: 'prev' | 'next') => {\n    if (type === 'prev') curr > 1 && curr <= pages && setCurr(curr - 1)\n    if (type === 'next') curr >= 1 && curr < pages && setCurr(curr + 1)\n    return\n  }\n\n  const handleChange = (name: string) => {\n    if (isSaving) return\n    setTemplate(name)\n  }\n\n  return (\n    <Fragment>\n      <HeadWrapper>\n        <Button\n          btnType=\"ghost\"\n          size=\"lg\"\n          onClick={() => histroy.push(`/coverletters/edit/${data.id}`)}\n        >\n          Back to Editor\n        </Button>\n        <div>\n          {!isError && !isTemplateLoading && (\n            <DownloadBtn\n              vertical=\"bottom\"\n              horizontal=\"left\"\n              show={showDownload}\n              setShow={setShowDownload}\n              disabled={isSaving || !isValid}\n            >\n              <DropButton.Button>\n                <Fragment>\n                  {!isSaving ? (\n                    <Fragment>\n                      Download <DownloadIcon />\n                    </Fragment>\n                  ) : (\n                    <Fragment>\n                      Downloading <Spinner size=\"1rem\" />\n                    </Fragment>\n                  )}\n                </Fragment>\n              </DropButton.Button>\n              <DropButton.Item>\n                <a onClick={() => submitCoverletter('pdf')}>Download PDF</a>\n              </DropButton.Item>\n\n              <DropButton.Item>\n                <a onClick={() => submitCoverletter('docx')}>Export to DOCX</a>\n              </DropButton.Item>\n\n              <DropButton.Item>\n                <a onClick={() => submitCoverletter('txt')}>Export to TXT</a>\n              </DropButton.Item>\n            </DownloadBtn>\n          )}\n        </div>\n      </HeadWrapper>\n      {isError ? (\n        <div className=\"align-center\" style={{ height: '40vh' }}>\n          <h3>Failed to load design!</h3>\n        </div>\n      ) : (\n        <Wrapper>\n          <LHS>\n            <TemplateGrid data-test-id=\"coverletter-templates\">\n              {templates &&\n                (templates as any).map((item: any, i: number) => (\n                  <Template\n                    key={i}\n                    active={template === item.name}\n                    data-test-id={\n                      template === item.name\n                        ? 'active-template'\n                        : 'inactive-template'\n                    }\n                  >\n                    <div onClick={() => handleChange(item.name)}>\n                      <img src={item.thumbnail} alt=\"\" />\n                    </div>\n                    <p>{item.name}</p>\n                  </Template>\n                ))}\n            </TemplateGrid>\n          </LHS>\n          <RHS>\n            <RHSWrapper className=\"rhs_wrapper\">\n              <PageToggler>\n                <button\n                  type=\"button\"\n                  style={{ transform: 'rotateZ(90deg)' }}\n                  onClick={() => handleClick('prev')}\n                >\n                  <DownArrowIcon size=\"0.75rem\" color=\"#fff\" />\n                </button>\n                <p>\n                  {curr}&nbsp;/&nbsp;{pages}\n                </p>\n                <button\n                  type=\"button\"\n                  style={{ transform: 'rotateZ(270deg)' }}\n                  onClick={() => handleClick('next')}\n                >\n                  <DownArrowIcon size=\"0.75rem\" color=\"#fff\" />\n                </button>\n              </PageToggler>\n              <PreviewWrapper>\n                {(!isTemplateReady ||\n                  isLoading ||\n                  !data ||\n                  isTemplateMapping ||\n                  isTemplateLoading) && (\n                  <SkeletonWrapper data-test-id=\"coverletter-skeleton\">\n                    <PreviewSkeleton scale={scale} />\n                  </SkeletonWrapper>\n                )}\n                <TemplateWrapper\n                  ref={ref}\n                  style={\n                    !isTemplateReady ||\n                    isLoading ||\n                    !data ||\n                    isTemplateMapping ||\n                    isTemplateLoading\n                      ? { visibility: 'hidden' }\n                      : { visibility: 'visible' }\n                  }\n                >\n                  <div className=\"page\">\n                    <div style={{ width: '100%' }} />\n                  </div>\n                </TemplateWrapper>\n              </PreviewWrapper>\n            </RHSWrapper>\n          </RHS>\n        </Wrapper>\n      )}\n    </Fragment>\n  )\n}\n\nexport default TemplateViewer\n\nconst Wrapper = styled.div`\n  background-color: #fff;\n  display: grid;\n  grid-template-columns: minmax(400px, 500px) auto;\n  height: 100%;\n  @media (max-width: 1080px) {\n    grid-template-columns: 30% 70%;\n  }\n`\n\nconst SkeletonWrapper = styled.div`\n  position: absolute;\n  z-index: 1;\n`\n\nconst LHS = styled.div`\n  height: 100%;\n  max-height: 100vh;\n  padding: 7rem 2rem 3rem;\n  overflow-y: auto;\n  @media (max-width: 1080px) {\n    padding: 7rem 0 3rem;\n  }\n`\n\nconst RHS = styled.div`\n  background-color: #f7f9fc;\n  user-select: none;\n  max-height: 100vh;\n  overflow: hidden;\n  position: relative;\n`\nconst RHSWrapper = styled.div`\n  display: flex;\n  padding: 7rem 2rem 3rem;\n  height: 100%;\n  width: 100%;\n  margin: 0 auto;\n  overflow: scroll;\n`\nconst PageToggler = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  left: 0;\n  right: 0;\n  margin: auto;\n  max-width: 100px;\n  bottom: 10%;\n  z-index: 10;\n  height: 35px;\n  border-radius: 6px;\n  background-color: ${({ theme }) => theme.colors.primary};\n  p {\n    font-weight: 600;\n  }\n  button {\n    padding-left: 0.7rem;\n    padding-right: 0.7rem;\n    svg {\n      path {\n        stroke-width: 1.5;\n      }\n    }\n  }\n`\n\nconst HeadWrapper = styled.div`\n  display: flex;\n  padding: 1rem 3rem;\n  justify-content: space-between;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  border-bottom: 2px solid #eee;\n  background-color: #fff;\n  z-index: 100;\n`\nconst TemplateGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 1rem;\n  padding: 0 2rem;\n  max-width: 450px;\n  margin: auto;\n  @media (max-width: 1080px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`\nconst Template = styled.div<{ active: boolean }>`\n  div {\n    display: flex;\n    width: 100%;\n    min-height: 250px;\n    background-color: #f7f7f7;\n    outline-style: solid;\n    outline-color: #eee;\n    border-radius: 8px;\n    cursor: pointer;\n    transition: all ease-in-out 150ms;\n    overflow: hidden;\n    /* box-shadow: 5px 5px 10px 0px #00000012; */\n    outline-width: ${({ active }) => (active ? '2px' : '1px')};\n    outline-color: ${({ theme, active }) => active && theme.shades.primary[2]};\n    img {\n      width: 100%;\n    }\n  }\n  p {\n    font-size: 1rem;\n    color: ${({ theme, active }) => active && theme.colors.primary};\n    font-weight: 600;\n    text-align: center;\n    text-transform: capitalize;\n    transition: all ease-in-out 150ms;\n  }\n  &:hover {\n    div {\n      outline-width: 5px;\n      outline-color: ${({ theme }) => theme.shades.primary[2]};\n    }\n    p {\n      color: ${({ theme }) => theme.colors.primary};\n    }\n  }\n`\n\nconst DownloadBtn = styled(DropButton)`\n  button {\n    background: rgba(240, 132, 56, 1);\n    color: #fff;\n    height: 40px;\n    width: 150px;\n    display: flex;\n    justify-content: space-around;\n    padding: 0 1rem;\n    border-radius: 6px;\n    svg {\n      path {\n        stroke: #fff;\n      }\n    }\n    &:disabled {\n      background-color: ${({ theme }) => theme.colors.grey};\n    }\n  }\n`\nconst PreviewWrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  margin: auto;\n`\n\nconst TemplateWrapper = styled.div`\n  display: block;\n  position: relative;\n  box-shadow: 0px 0px 15px 0px #0000000f;\n  border: 1px solid #eee;\n  border-radius: 10px;\n  overflow: hidden;\n`\n","import { Fragment } from 'react'\nimport CoverLetterProvider from '../../contexts/coverLetter'\nimport { getCoverLetter } from '../../queries/coverLetterQueries'\nimport CoverLetterBuilder from './builder'\nimport TemplateViewer from './template-viewer'\n\nconst OldCoverLetter = ({\n  type,\n  id,\n  width,\n}: {\n  type: string\n  id: string\n  width: number\n}) => {\n  const {\n    data: initialData,\n    isError,\n    isLoading,\n  }: any = getCoverLetter(id, width > 768)\n\n  return (\n    <Fragment>\n      {isError ? (\n        <div className=\"align-center\" style={{ height: '30vh' }}>\n          <h3>Failed to load design!</h3>\n        </div>\n      ) : (\n        <CoverLetterProvider\n          initialData={initialData}\n          templateName={'template1'}\n        >\n          {type === 'preview' ? (\n            <TemplateViewer isLoading={isLoading} />\n          ) : type === 'edit' ? (\n            <CoverLetterBuilder isLoading={isLoading} />\n          ) : null}\n        </CoverLetterProvider>\n      )}\n    </Fragment>\n  )\n}\nexport default OldCoverLetter\n","import React, { Fragment } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { useViewport } from '../../contexts/viewPort'\nimport { Button } from '../../styled/button'\nimport PageNotFound from '../404'\nimport NewCoverLetter from './createNew'\nimport OldCoverLetter from './oldCoverletter'\n\nconst SingleCoverLetter = () => {\n  const { id, type } = useParams<{ id: string; type: string }>()\n  const { width } = useViewport()\n  const history = useHistory()\n  return (\n    <Fragment>\n      {width < 768 && width !== 0 ? (\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            flexDirection: 'column',\n            height: '90%',\n          }}\n        >\n          <h3 style={{ textAlign: 'center' }}>\n            Builder not available, Please visit desktop site...\n          </h3>\n          <Button\n            btnType=\"primary\"\n            size=\"lg\"\n            style={{\n              width: 'fit-content',\n              padding: '0 1rem',\n              marginTop: '1rem',\n            }}\n            onClick={() => history.push('/')}\n          >\n            Back to Dashboard\n          </Button>\n        </div>\n      ) : width >= 768 ? (\n        <Fragment>\n          {type === 'new' ? (\n            <NewCoverLetter templateName={id} />\n          ) : ['edit', 'preview'].indexOf(type) !== -1 ? (\n            <OldCoverLetter type={type} id={id} width={width} />\n          ) : (\n            <PageNotFound />\n          )}\n        </Fragment>\n      ) : null}\n    </Fragment>\n  )\n}\n\nexport default SingleCoverLetter\n"],"names":["templateName","useState","error","setError","history","useHistory","queryClient","useQueryClient","createNew","createNewCoverletter","useEffect","Fragment","className","ErrWrapper","btnType","size","onClick","type","styled","first_name","Yup","required","max","min","last_name","email_address","email","phoneRegExp","phone_number","test","value","length","designation","address","label","company","hiring_manager","description","replaceAll","replace","validateCoverLetterSteps","shape","defaultValues","title","contextValues","data","id","templateData","template","step","submitSuccess","isSaving","setStep","setTemplate","submitCoverletter","isTemplateReady","CoverLetterContext","React","initialData","children","cssReady","setCssReady","fontsReady","setFontsReady","queryEnabled","setQueryEnabled","setSubmitSuccess","setIsSaving","setNotify","useNotify","methods","useForm","mode","criteriaMode","resolver","yupResolver","getCoverLetterTemplate","isTemplateLoading","isLoading","handleSubmit","isError","watch","reset","trigger","setValue","formState","isValid","isDirty","fields","formData","keepDirty","keepIsValid","keepErrors","loadTemplateFonts","loadFonts","fonts","document","old","getElementById","remove","link","createElement","setAttribute","process","onload","onerror","console","log","head","appendChild","currData","hasTextinDescription","autoSave","submitForm","submitCoveletterForm","heading","message","name","handleCoverletterDownload","_id","Provider","useCoverLetter","titleVal","setTitleVal","useFormContext","timer","setTimeout","shouldDirty","clearTimeout","TitleWrapper","placeholder","onChange","e","target","substring","handleChange","spellCheck","autoComplete","Grid","Input","theme","colors","primary","errors","RichTextEditor","style","marginTop","submit","setSubmit","btnSize","useViewport","width","isSubmitting","Wrapper","color","prev","marginRight","disabled","CSSTransition","in","timeout","enter","exit","Loader","LoadingDots","margin","dark","keyframes","dots","isDataLoading","ref","useRef","pages","setPages","curr","setCurr","buffer","setBuffer","showDownload","setShowDownload","firstLoad","setFirstLoad","height","histroy","scale","top","result","current","page","transform","getBoundingClientRect","calcX","clientWidth","calcY","clientHeight","dummyBufferEl","visibility","position","opacity","body","bufferHeight","getPreviewTemplateBufferHeight","removeChild","querySelector","wrapper","JSON","parse","stringify","innerHTML","templateMapper","updatePages","Object","keys","total","handleClick","SkeletonWrapper","PreviewWrapper","TemplateWrapper","PreviewFooter","TemplateBtn","justifyContent","push","PageToggler","DownloadBtn","vertical","horizontal","show","setShow","DropButton","grey","Button","useExitPrompt","showExitPrompt","setShowExitPrompt","isErrorStep1","isErrorStep2","isValidStep1","isValidStep2","paths","exludedPaths","backRoute","overflow","LHS","RHS","isTemplateMapping","setIsTemplateMapping","getAllCoverLetterTemplates","templates","container","scrollTo","HeadWrapper","TemplateGrid","map","item","i","Template","active","src","thumbnail","alt","RHSWrapper","shades","getCoverLetter","useParams","display","alignItems","flexDirection","textAlign","padding","indexOf"],"sourceRoot":""}