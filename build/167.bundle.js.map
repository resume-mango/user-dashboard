{"version":3,"file":"167.bundle.js","mappings":"uJA0BA,QApBoB,SAAC,GAA0C,IAAxCA,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,UAClC,OACE,SAAC,EAAAC,SAAD,WACE,gBACEC,MAAOJ,GAAQ,OACfK,OAAQL,GAAQ,OAChBE,UAAWA,GAAa,GACxBI,QAAQ,YACRC,KAAK,OACLC,MAAM,6BANR,UAQE,iBACEC,EAAE,6tBACFF,KAAMN,GAAS,eAKxB,C,0DCDD,QAjBgB,SAAC,GAA0C,IAAxCD,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,UAC9B,OACE,SAAC,EAAAC,SAAD,WACE,gBACEC,MAAOJ,GAAQ,OACfK,OAAQL,GAAQ,OAChBE,UAAWA,GAAa,GACxBI,QAAQ,YACRC,KAAMN,GAAS,UACfO,MAAM,6BANR,UAQE,iBAAMC,EAAE,8JAIf,C,0DCWD,QA1BiB,SAAC,GAA0C,IAAxCT,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,UAC/B,OACE,SAAC,EAAAC,SAAD,WACE,iBACEC,MAAOJ,GAAQ,OACfK,OAAQL,GAAQ,OAChBE,UAAWA,GAAa,GACxBI,QAAQ,YACRC,KAAK,OACLC,MAAM,6BANR,WAQE,iBACEC,EAAE,6BACFC,OAAQT,GAAS,UACjBU,YAAY,SAEd,iBACEF,EAAE,uCACFC,OAAQT,GAAS,UACjBU,YAAY,YAKrB,C,0DCJD,QApBmB,SAAC,GAA0C,IAAxCX,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,UACjC,OACE,SAAC,EAAAC,SAAD,WACE,gBACEC,MAAOJ,GAAQ,OACfE,UAAWA,GAAa,GACxBG,OAAQL,GAAQ,OAChBM,QAAQ,YACRC,KAAK,OACLC,MAAM,6BANR,UAQE,iBACEC,EAAE,ygBACFF,KAAMN,GAAS,eAKxB,C,8ECjBD,QAJc,SAAC,GAAgC,IAA9BW,EAA8B,EAA9BA,KAAeC,GAAe,EAAxBC,QAAwB,EAAfD,UAC9B,OAAO,SAAC,EAAAV,SAAD,UAAWS,IAAQ,SAACG,EAAD,UAAUF,KACrC,EAID,IAAME,EAAUC,EAAAA,GAAAA,IAAH,sNAUS,qBAAGC,MAAkBC,OAAOC,KAAK,EAAjC,G,8LCjBhBC,EAAS,CACb,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGIC,EAAaC,EAAAA,KAChBC,SAAS,0BACTC,IAAI,GAAI,6BACRC,IAAI,EAAG,6BACJC,EAAYJ,EAAAA,KACfC,SAAS,yBACTC,IAAI,GAAI,6BACRC,IAAI,EAAG,6BAEJE,EAAgBL,EAAAA,KACnBM,MAAM,oBACNL,SAAS,qBAENM,EACJ,0GAEIC,EAAeR,EAAAA,KAAaS,KAChC,UACA,wBACA,SAACC,GACC,OAAKA,GACEH,EAAYE,KAAKC,IAAUA,EAAMC,QAAU,GAAKD,EAAMC,QAAU,EACxE,IAGGC,EAAcZ,EAAAA,KAAaE,IAAI,GAAI,6BACnCW,EAAUb,EAAAA,KACbc,MAAM,WACNZ,IAAI,GAAI,6BAELa,EAAaf,EAAAA,KAAaS,KAC9B,gCACA,+BACA,SAACC,GACC,OAAKA,KAEWA,EAAMM,WAAW,OAAQ,mBACnBC,QAFR,gBAEuB,IAC3BN,OAAS,IAEpB,IAGGO,EAAOlB,EAAAA,KAAaE,IAAI,GAAI,6BAC5BiB,EAAcnB,EAAAA,KAAaS,KAC/B,+BACA,8BACA,SAACC,GACC,OAAKA,KAEWA,EAAMM,WAAW,OAAQ,mBACnBC,QAFR,gBAEuB,IAE3BN,OAAS,IAEpB,IAGGS,EAAY,SAACC,GACjB,MAAkB,iBAAPA,IACHC,MAAMD,KAAgBC,MAAMC,WAAWF,GAChD,EAEKG,EAAWxB,EAAAA,KACdS,KAAK,mBAAoB,sBAAsB,SAACC,GAC/C,IAAMe,EAAaf,EAAMe,MACzB,IAAKA,EAAO,OAAO,EACnB,GAAIA,EAAMd,OAAS,EAAG,OAAO,EAC7B,IAAMe,EAAWD,EAAME,MAAM,KAC7B,QACsB,IAApBD,EAASf,SACRb,EAAO8B,SAASF,EAAS,MACzBN,EAAUM,EAAS,KACpBA,EAAS,GAAK,MACdA,EAAS,GAAK,KAIjB,IACAjB,KAAK,iBAAkB,oBAAoB,SAACC,GAC3C,IAAMmB,EAAWnB,EAAMmB,IACvB,IAAKA,EAAK,OAAO,EACjB,GAAIA,EAAIlB,OAAS,EAAG,OAAO,EAC3B,IAAMe,EAAWG,EAAIF,MAAM,KAC3B,QACsB,IAApBD,EAASf,SACRb,EAAO8B,SAASF,EAAS,MACzBN,EAAUM,EAAS,KACpBA,EAAS,GAAK,MACdA,EAAS,GAAK,KAIjB,IACAjB,KAAK,gBAAiB,uBAAuB,SAACC,GAC7C,IAAMmB,EAAWnB,EAAMmB,IACjBJ,EAAaf,EAAMe,MAEzB,OAAKI,IAAQJ,KACTI,IAAQJ,EAEb,IAEGK,EAAa9B,EAAAA,KAAY+B,GAC7B/B,EAAAA,KAAagC,MAAM,CACjBC,QAASjC,EAAAA,KAAaC,WAAWC,IAAI,GAAI,6BACzCU,YAAaZ,EAAAA,KAAaC,WAAWC,IAAI,GAAI,6BAC7CgB,KAAAA,EACAC,YAAAA,EACAK,SAAAA,KAIEU,EAAYlC,EAAAA,KAAY+B,GAC5B/B,EAAAA,KAAagC,MAAM,CACjBG,YAAanC,EAAAA,KAAaC,WAAWC,IAAI,GAAI,6BAC7CkC,OAAQpC,EAAAA,KAAaC,WAAWC,IAAI,GAAI,6BACxCgB,KAAAA,EACAC,YAAAA,EACAK,SAAAA,KAIEa,EAASrC,EAAAA,KAAY+B,GACzB/B,EAAAA,KAAagC,MAAM,CACjBM,MAAOtC,EAAAA,KAAaC,WAAWC,IAAI,GAAI,6BACvCqC,OAAQvC,EAAAA,KAAaC,WAAWE,IAAI,GAAGD,IAAI,EAAG,2BAI5CsC,EAAUxC,EAAAA,KAAY+B,GAC1B/B,EAAAA,KAAagC,MAAM,CACjBG,YAAanC,EAAAA,KAAaC,WAAWC,IAAI,GAAI,6BAC7CuC,OAAQzC,EAAAA,KAAaC,WAAWC,IAAI,GAAI,6BACxCsB,SAAAA,KAIEkB,EAAc1C,EAAAA,KAAY+B,GAC9B/B,EAAAA,KAAagC,MAAM,CACjBW,UAAW3C,EAAAA,KACRC,SAAS,yBACTC,IAAI,GAAI,6BACX0C,SAAU5C,EAAAA,KAAaC,WAAWC,IAAI,GAAI,6BAC1CgB,KAAAA,EACAC,YAAAA,EACAK,SAAAA,KAGEqB,EAAY7C,EAAAA,KAAY+B,GAC5B/B,EAAAA,KAAagC,MAAM,CACjBc,SAAU9C,EAAAA,KAAaC,WAAWC,IAAI,GAAI,6BAC1C6C,MAAO/C,EAAAA,KAAaE,IAAI,GAAI,gCAI1B8C,EAAahD,EAAAA,KAAY+B,GAC7B/B,EAAAA,KAAagC,MAAM,CACjBiB,KAAMjD,EAAAA,KAAaC,WAAWC,IAAI,GAAI,6BACtC+B,QAASjC,EAAAA,KAAaC,WAAWC,IAAI,GAAI,6BACzCM,aAAAA,EACAH,cAAAA,KAIS6C,EAAqBlD,EAAAA,KAAagC,MAAM,CACnDjC,WAAYA,EACZK,UAAWA,EACXC,cAAAA,EACAG,aAAAA,EACAI,YAAAA,EACAC,QAAAA,EACAE,WAAAA,EACAe,WAAAA,EACAI,UAAAA,EACAG,OAAAA,EACAG,QAAAA,EACAE,YAAAA,EACAG,UAAAA,EACAG,WAAAA,I,mmBCxKF,IAAMG,EAAgB,CACpBC,OAAO,EACPC,QAAS,GACTC,UAAW,GACXC,MAAO,CACLzE,MAAO,EACPC,OAAQ,EACRyE,OAAQ,EACRC,MAAO,EACPC,IAAK,CACHC,EAAG,GACHC,EAAG,MAKHC,EAAgB,CACpBvB,MAAO,WACPvC,WAAY,GACZK,UAAW,GACXC,cAAe,GACfG,aAAc,GACdsD,OAAQX,EACRvC,YAAa,GACbC,QAAS,GACTE,WAAY,GACZe,WAAY,GACZI,UAAW,GACXG,OAAQ,GACRG,QAAS,GACTE,YAAa,GACbM,WAAY,GACZH,UAAW,IAIPkB,EAAgB,CACpBC,KAAM,EAAF,KAAOH,GAAP,IAAsBI,GAAI,OAC9BC,iBAAiB,EACjBC,aAAc,KACdC,SAAU,KACVC,KAAM,EACNC,eAAe,EACfC,UAAU,EACVC,QAAS,WAER,EACDC,YAAa,WAEZ,EACDC,aAAc,WAEb,GAGGC,EAAgBC,EAAAA,cAA6Bb,GAqQnD,QAnQuB,SAAC,GAAiD,IAA/Cc,EAA+C,EAA/CA,YAAaC,EAAkC,EAAlCA,aAAcvF,EAAoB,EAApBA,SACnD,GAAgCwF,EAAAA,EAAAA,WAAS,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAoCF,EAAAA,EAAAA,WAAS,GAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAAwCJ,EAAAA,EAAAA,WAAS,GAAjD,eAAOK,EAAP,KAAqBC,EAArB,KACA,GAAwBN,EAAAA,EAAAA,UAAS,GAAjC,eAAOV,EAAP,KAAaG,EAAb,KACA,GAA0CO,EAAAA,EAAAA,WAAS,GAAnD,eAAOT,EAAP,KAAsBgB,EAAtB,KACA,GAAgCP,EAAAA,EAAAA,WAAS,GAAzC,eAAOR,EAAP,KAAiBgB,EAAjB,KACA,GAAgCR,EAAAA,EAAAA,UAASD,GAAzC,eAAOV,EAAP,KAAiBK,EAAjB,KAEQe,GAAcC,EAAAA,EAAAA,KAAdD,UACFE,GAAcC,EAAAA,EAAAA,kBAEdC,GAAUC,EAAAA,EAAAA,IAAwB,CACtCC,KAAM,WACNjC,cAAAA,EACAkC,aAAc,MACdC,UAAUC,EAAAA,EAAAA,GAAY/C,KAExB,GAIIgD,EAAAA,EAAAA,IAAkB9B,EAAUgB,KAAkBN,GAH1CX,EADR,EACEH,KACWmC,GAFb,EAEEC,UAKAC,IAPF,EAGEC,QAUEV,EANFS,cACAE,GAKEX,EALFW,MACAC,GAIEZ,EAJFY,MACAC,GAGEb,EAHFa,QACAC,GAEEd,EAFFc,SALF,GAOId,EADFe,UAAaC,GANf,GAMeA,QAASC,GANxB,GAMwBA,SAGxBC,EAAAA,EAAAA,YAAU,WACR,GAAKjC,EAAL,CACIA,EAAYT,UACdK,EAAYI,EAAYT,UAG1B,IAAQ2C,EAAWlC,EAAXkC,OACFC,EAAa,CACjB1E,MAAOuC,EAAYvC,OAAS,WAC5BvC,WAAYgH,EAAOhH,YAAc,GACjCK,UAAW2G,EAAO3G,WAAa,GAC/B0D,OAAQiD,EAAOjD,QAAUX,EACzB9C,cAAe0G,EAAO1G,eAAiB,GACvCG,aAAcuG,EAAOvG,cAAgB,GACrCI,YAAamG,EAAOnG,aAAe,GACnCC,QAASkG,EAAOlG,SAAW,GAC3BE,WAAYgG,EAAOhG,YAAc,GACjCe,WAAYiF,EAAOjF,YAAc,GACjCI,UAAW6E,EAAO7E,WAAa,GAC/BG,OAAQ0E,EAAO1E,QAAU,GACzBG,QAASuE,EAAOvE,SAAW,GAC3BE,YAAaqE,EAAOrE,aAAe,GACnCG,UAAWkE,EAAOlE,WAAa,GAC/BG,WAAY+D,EAAO/D,YAAc,IAGnCwD,GAAMQ,EAAY,CAChBC,WAAW,EACXC,aAAa,EACbC,YAAY,IAEd9B,GAAgB,EA9BQ,CA+BzB,GAAE,CAACR,KAEJiC,EAAAA,EAAAA,YAAU,WACR7B,GAAY,EACb,GAAE,CAACb,IAIJ,IAAMgD,GAAiB,mCAAG,+FAClBC,EAAAA,EAAAA,GAAUlD,EAAamD,OADL,gCAEjBnC,GAAc,IAFG,2CAAH,sDAKvB2B,EAAAA,EAAAA,YAAU,WACR,GACG1B,GACAjB,GACAA,EAAamD,OACS,IAAvBnD,EAAamD,MAMf,OAHAnC,GAAc,GACdiC,KAEO,kBAAMjC,GAAc,EAApB,CACR,GAAE,CAAChB,EAAciB,KAElB0B,EAAAA,EAAAA,YAAU,WACR,GAAKS,UAAanC,IAAgBJ,EAAlC,CACA,IAAMwC,EAAMD,SAASE,eAAe,aAChCD,GACFA,EAAIE,SAEN,IAAMC,EAAOJ,SAASK,cAAc,QACpCD,EAAK1D,GAAK,YACV0D,EAAKE,aAAa,MAAO,cACzBF,EAAKE,aAAa,OAAQ,YAC1BF,EAAKE,aACH,OADF,UAEKC,8BAFL,wBAEyC1D,EAFzC,SAKAmD,SAASQ,KAAKC,YAAYL,GAG1BA,EAAKM,OAAS,WACZhD,GAAY,EACb,EAED0C,EAAKO,QAAU,WACb,OAAOC,QAAQC,IAAI,iCACpB,CAvBiD,CAwBnD,GAAE,CAACpD,EAAUI,IAEd,IAAMiD,GAAW9B,KAGX+B,GAAuBD,GAAStH,WAAWE,QADnC,gBACkD,IAAIN,QAEpEmG,EAAAA,EAAAA,YAAU,YACHwB,IAAwBzB,IAC3BH,GAAS,aAAc,GAE1B,GAAE,CAAC2B,GAAStH,aAEb,IAAM2D,GAAY,mCAAG,WACnB6D,EACAC,GAFmB,4EAIbC,EAJa,mCAIA,WAAOzE,GAAP,kFACJ0E,EAAAA,EAAAA,IACXtE,EACAmE,EACA1D,EACAb,EACAuC,GACAC,GACAlB,EACAE,EACAE,GAVe,mFAJA,sDAiFd8C,EAjFc,mBAkFjB/B,KACKG,GAnFY,yCAoFRpB,EAAU,CACf+C,KAAM,UACNI,QAAS,kBACTC,QAAS,0CAvFI,WA4Ff/B,IAAWhC,EAAYT,WAAaA,EA5FrB,wBA6FjBmB,GAAY,GA7FK,SA8FXc,GAAaoC,EAAbpC,GA9FW,OA+FjBd,GAAY,GA/FK,+BAiGjBA,GAAY,GACNtC,EAAOoF,GAAS/F,MAlGL,WAmGXuG,EAAAA,EAAAA,IAAqB5F,EAAM4B,EAAYiE,IAAKP,EAAa/C,GAnG9C,QAoGjBD,GAAY,GApGK,4CAAH,wDAwGlB,OACE,SAACZ,EAAcoE,SAAf,CACErI,MAAO,CACLsD,KAAM,EAAF,KAAOqE,IAAP,IAAiBpE,GAAIY,EAAcA,EAAYiE,IAAM,OACzD5E,gBACEc,IACCmB,IACDhC,GACAe,GACAE,EACFjB,aAAAA,EACAG,cAAAA,EACAG,YAAAA,EACAL,SAAAA,EACAM,aAAAA,GACAL,KAAAA,EACAG,QAAAA,EACAD,SAAAA,GAhBJ,UAmBE,SAAC,KAAD,OAAkBqB,GAAlB,aAA4BrG,MAGjC,EAID,I,cAAMyJ,GAAY,WAChB,MAWIpE,EAAAA,WAAiBD,GAErB,MAAO,CACLX,KAdF,EACEA,KAcAE,gBAfF,EAEEA,gBAcAC,aAhBF,EAGEA,aAcAM,YAjBF,EAIEA,YAcAL,SAlBF,EAKEA,SAcAM,aAnBF,EAMEA,aAcAJ,cApBF,EAOEA,cAcAC,SArBF,EAQEA,SAcAF,KAtBF,EASEA,KAcAG,QAvBF,EAUEA,QAeH,E,8IC/JD,SAtMkB,SAAC,GAAkD,IAAhDyE,EAAgD,EAAhDA,cACbC,GAAMC,EAAAA,EAAAA,QAAuB,MACnC,GAA0BpE,EAAAA,EAAAA,UAAS,GAAnC,eAAOqE,EAAP,KAAcC,EAAd,KACA,GAAwBtE,EAAAA,EAAAA,UAAS,GAAjC,eAAOuE,EAAP,KAAaC,EAAb,KACA,GAA4BxE,EAAAA,EAAAA,UAAS,GAArC,eAAOyE,EAAP,KAAeC,EAAf,KACA,GAAwC1E,EAAAA,EAAAA,WAAS,GAAjD,eAAO2E,EAAP,KAAqBC,EAArB,KACA,GAAkC5E,EAAAA,EAAAA,WAAS,GAA3C,eAAO6E,EAAP,KAAkBC,EAAlB,KAEA,GAA0BC,EAAAA,GAAAA,KAAlBhL,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OACTgL,GAAUC,EAAAA,EAAAA,MAEhB,EACEhB,KADMhF,EAAR,EAAQA,KAAMG,EAAd,EAAcA,aAAcD,EAA5B,EAA4BA,gBAAiBQ,EAA7C,EAA6CA,aAAcH,EAA3D,EAA2DA,SAG3D,GAEI0F,EAAAA,EAAAA,MADFtD,UAAauD,EADf,EACeA,aAActD,EAD7B,EAC6BA,SAG7BE,EAAAA,EAAAA,YAAU,WACJvC,GAAUoF,GAAgB,EAE/B,GAAE,CAACpF,IAEJ,IAAMd,EAAQ3E,GAAS,KAAO,GAAMA,EAAQ,KAEtCqL,EAAMC,KAAKC,MAAM5G,GAAS,GAAc,GAARA,GAAsB,GAATA,IAEnDqD,EAAAA,EAAAA,YAAU,WACR,GAAKoC,GAAQA,EAAIoB,QAAjB,CACA,IAAMC,EAAUrB,EAAIoB,QAAQE,cAAc,SAC1C,GAAKD,EAAL,CACAA,EAAQhH,MAAMkH,UAAd,gBAAmChH,EAAnC,KACAyF,EAAIoB,QAAQ/G,MAAMzE,MAAQyL,EAAQG,wBAAwB5L,MAAQ,KAClEoK,EAAIoB,QAAQ/G,MAAMxE,OAASwL,EAAQG,wBAAwB3L,OAAS,KACpE,IAAM4L,EAASJ,EAAQK,aAAenH,EAAQ,GAAM,EAC9CoH,EAASN,EAAQO,cAAgBrH,EAAQ,GAAM,EACrD8G,EAAQhH,MAAMkH,UAAd,sBAAyCE,EAAzC,eAAqDE,EAArD,0BAA4EpH,EAA5E,KACA,IAAMsH,EAAgBxD,SAASK,cAAc,OAC7CmD,EAAcxH,MAAMxE,OAAS,OAC7BgM,EAAcxH,MAAMkH,UAApB,gBAAyChH,EAAzC,KACAsH,EAAcxH,MAAMyH,WAAa,SACjCD,EAAcxH,MAAM0H,SAAW,WAC/BF,EAAcxH,MAAM2H,QAAU,IAC9B3D,SAAS4D,KAAKnD,YAAY+C,GAC1B,IAAMK,EAAeL,EAAcL,wBAAwB3L,OAC3D0K,EAAU2B,GACV7D,SAAS4D,KAAKE,YAAYN,EAhBN,CAFY,CAmBjC,GAAE,CAAC7B,EAAIoB,QAASxL,EAAOC,KAExB+H,EAAAA,EAAAA,YAAU,WACR,GAAK9C,GAASG,GAA2B,IAAXqF,EAA9B,CACA,IAAM8B,EAAQC,YAAW,WACvB,GAAKrC,GAAQA,EAAIoB,QAAjB,CACA,IAAMkB,EAAOtC,EAAIoB,QAAQE,cAAc,SACvC,GAAKgB,EAAL,CACA,IAAMC,EAAUD,EAAKjM,SAAS,GAE9B,GAAKkM,EAAL,CACA,IAAMrH,EAAWsH,KAAKC,MAAMD,KAAKE,UAAUzH,IAC3CsH,EAAQI,UAAY,GACpB,IAAMzC,GAAQ0C,EAAAA,GAAAA,GAAe1H,EAAUJ,EAAMyH,EAASjC,GACjDJ,IACL2C,EAAYC,OAAOC,KAAK7C,GAAOzI,QAE1BiJ,GAAWC,GAAa,GAPT,CAHH,CAFe,CAajC,GAAE,KACH,OAAO,kBAAMqC,aAAaZ,EAAnB,CAhB2C,CAiBnD,GAAE,CAACtH,EAAMkF,EAAK/E,EAAcqF,KAE7B1C,EAAAA,EAAAA,YAAU,WACR,GAAKoC,GAAQA,EAAIoB,QAAjB,CACA,IAAMkB,EAAOtC,EAAIoB,QAAQE,cAAc,SACvC,GAAKgB,EAAL,CACA,IAAMC,EAAUD,EAAKjM,SAAS,GACzBkM,IACLA,EAAQlI,MAAMkH,UAAd,sBAAyCe,EAAKV,cAAgBxB,EAAO,GAArE,OACAmC,EAAQlI,MAAMxE,OAASyM,EAAKV,aAAexB,EAAO,KAJjC,CAFe,CAOjC,GAAE,CAACA,EAAMJ,EAAIoB,UAEd,IAAMyB,EAAc,SAACI,GACnB7C,EAAO6C,GAAS5C,EAAQ4C,GACxB9C,EAAS8C,EACV,EAEKC,EAAc,SAAC7D,GACN,SAATA,GAAiBe,EAAO,GAAKA,GAAQF,GAASG,EAAQD,EAAO,GACpD,SAATf,GAAiBe,GAAQ,GAAKA,EAAOF,GAASG,EAAQD,EAAO,EAElE,EAED,OACE,UAAC,EAAAzK,SAAD,YACE,SAACwN,GAAD,CACE,eAAa,mBACb9I,OACE0F,GAAkBjF,GAASE,GAAoB0F,EAE3C,CAAEoB,WAAY,UADd,CAAEA,WAAY,WAJtB,SAQGlM,GACC,SAAC,KAAD,CACEyE,MAAO,CAAE0H,SAAU,WAAYqB,UAAW,EAAGnC,IAAK,GAAF,OAAKA,EAAL,OAChD1G,MAAOA,IAEP,QAEN,UAAC8I,GAAD,YACE,SAACC,GAAD,CAAiBtD,IAAKA,EAAtB,UACE,gBAAKtK,UAAU,OAAf,UACE,gBAAK2E,MAAO,CAAEzE,MAAO,eAGzB,UAAC2N,GAAD,CACE7N,UAAS,2BACPqK,GAAkBjF,GAASE,GAAoB0F,EAE3C,GADA,aAHR,WAOE,0BACE,UAAC8C,GAAD,CACEnE,KAAK,SACLoE,QAAQ,QACRhO,MAAM,UACND,KAAK,KACL6E,MAAO,CAAEqJ,eAAgB,gBACzBC,QAAS,kBAAM9C,EAAQ+C,KAAR,2BAAiC9I,EAAKC,IAA5C,EACT8I,SAAU7C,EAPZ,WASE,SAAC,KAAD,CAAYxL,KAAMI,EAAQ,KAAO,SAAW,SAT9C,wBAcF,UAACkO,GAAD,YACE,mBACE,eAAa,oBACbzE,KAAK,SACLhF,MAAO,CAAEkH,UAAW,kBACpBoC,QAAS,kBAAMT,EAAY,OAAlB,EAJX,UAME,SAAC,KAAD,CAAe1N,KAAK,eAGtB,eAAG,eAAa,eAAhB,UACG4K,EADH,MACsBF,MAEtB,mBACE,eAAa,oBACbb,KAAK,SACLhF,MAAO,CAAEkH,UAAW,mBACpBoC,QAAS,kBAAMT,EAAY,OAAlB,EAJX,UAME,SAAC,KAAD,CAAe1N,KAAK,kBAIxB,0BACE,UAACuO,GAAD,CACEC,SAAS,MACTC,WAAW,OACX7N,KAAMoK,EACNlK,QAASmK,EACToD,SAAUxI,IAAaqC,GAAWsD,EALpC,WAOE,SAACkD,GAAA,SAAD,WACE,SAAC,EAAAvO,SAAD,UACI0F,GAKA,UAAC,EAAA1F,SAAD,2BACc,SAAC,MAAD,CAASH,KAAK,aAL5B,UAAC,EAAAG,SAAD,wBACW,SAAC,KAAD,IADX,KACgC,SAAC,KAAD,YAStC,SAACuO,GAAA,OAAD,WACE,cAAGP,QAAS,kBAAMnI,EAAa,MAAnB,EAAZ,6BAGF,SAAC0I,GAAA,OAAD,WACE,cAAGP,QAAS,kBAAMnI,EAAa,OAAnB,EAAZ,+BAGF,SAAC0I,GAAA,OAAD,WACE,cAAGP,QAAS,kBAAMnI,EAAa,MAAnB,EAAZ,0CAQf,EAID,IAAM6H,GAAiB7M,GAAAA,GAAAA,IAAH,kJAOd+M,GAAgB/M,GAAAA,GAAAA,IAAH,6IAObsN,GAActN,GAAAA,GAAAA,IAAH,+QAiBX8M,GAAkB9M,GAAAA,GAAAA,IAAH,mEAIfuN,IAAcvN,EAAAA,GAAAA,IAAO0N,GAAAA,EAAP1N,CAAH,sdAqBS,qBAAGC,MAAkB0N,OAAOC,IAA5B,IAKpBZ,IAAchN,EAAAA,GAAAA,IAAO6N,GAAAA,EAAP7N,CAAH,6HAOX2M,GAAkB3M,GAAAA,GAAAA,IAAH,sO,iECjQrB,SApBmB,SAAC,GAA0C,IAAxChB,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,UACjC,OACE,SAAC,EAAAC,SAAD,WACE,gBACEC,MAAOJ,GAAQ,OACfE,UAAWA,GAAa,GACxBG,OAAQL,GAAQ,OAChBM,QAAQ,YACRC,KAAK,OACLC,MAAM,6BANR,UAQE,iBACEC,EAAE,ojBACFF,KAAMN,GAAS,eAKxB,E,iqBC2ED,SApEmC,SAAC,GAA0B,IAAxB6O,EAAwB,EAAxBA,SAAUhO,EAAc,EAAdA,QACtCgG,GAAcC,EAAAA,EAAAA,KAAdD,UAEFiI,GAASC,EAAAA,EAAAA,aAAW,mCAAC,WAAOC,GAAP,0FAEjBC,QAAQC,IACZF,EAAcG,KAAI,SAACC,GACjB,OAzBUC,EAyBQD,EAxB1B,IAAIH,SAAQ,SAACK,GACXC,KAAAA,iBACEF,EACA,KACA,KACA,OACA,GACA,GACA,SAACG,GACCF,EAAQE,EACT,GACD,OACA,IACA,IAEH,IAhBgB,IAACH,CA0BX,KACDI,MAAK,SAACC,GACFA,EAAmB1N,OAAS,GAC9B6M,EAASa,EAAmB,GAG/B,IAXsB,sDAavBlG,QAAQC,IAAR,MAbuB,wDAAD,sDAevB,IACGkG,GAAiBZ,EAAAA,EAAAA,aAAW,mCAAC,WAAOa,GAAP,6EAE/BpG,QAAQC,IAAImG,GACPA,GAA0C,IAAzBA,EAAc5N,OAHL,iDAI/B4N,EAAcC,SAAQ,SAACC,GAAD,OACpBjJ,EAAU,CACR+C,KAAM,UACNK,QAAS6F,EAAKT,KAAK/K,KACnB0F,QAAS8F,EAAKC,OAAO,GAAG9F,SAJN,IAJS,gDAY/BT,QAAQC,IAAR,MAZ+B,yDAAD,sDAc/B,IAEH,GAAsDuG,EAAAA,GAAAA,IAAY,CAChEC,OAAQ,CAAC,YAAa,YAAa,aAAc,cACjDC,SAAU,EACVpB,OAAAA,EACAa,eAAAA,IAJMQ,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,cAAeC,EAArC,EAAqCA,aAOrC,OACE,SAAC,EAAAnQ,SAAD,WACE,UAACY,GAAD,YACE,SAACwP,GAAD,CAAUpC,QAAS,kBAAMrN,GAAQ,EAAd,EAAnB,UACE,SAAC,KAAD,CAAWd,KAAK,cAElB,UAACwQ,GAAD,SAAiBJ,KAAjB,eACE,uBAAWC,MACVC,GACC,oDAEA,UAAC,EAAAnQ,SAAD,YACE,cAAGD,UAAU,OAAb,2DAGA,SAAC,KAAD,CAAQ2J,KAAK,SAASoE,QAAQ,UAAUjO,KAAK,KAA7C,qCASb,EAID,IAAMe,GAAUC,GAAAA,GAAAA,IAAH,sPAaPwP,GAAcxP,GAAAA,GAAAA,IAAH,kmBAmBXuP,GAAWvP,GAAAA,GAAAA,KAAH,+OAYI,qBAAGC,MAAkB0N,OAAO8B,OAA5B,IC1HlB,SAjBsB,SAAC,GAA0C,IAAxCzQ,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,UACpC,OACE,SAAC,EAAAC,SAAD,WACE,iBACEK,MAAM,6BACNF,QAAQ,YACRF,MAAOJ,GAAQ,OACfE,UAAWA,GAAa,GACxBG,OAAQL,GAAQ,OALlB,WAOE,iBAAMS,EAAE,aAAaC,OAAQT,GAAS,UAAWU,YAAY,OAC7D,iBAAMF,EAAE,kBAAkBC,OAAQT,GAAS,UAAWU,YAAY,UAIzE,ECID,GAnBmB,SAAC,GAA0C,IAAxCX,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,UACjC,OACE,SAAC,EAAAC,SAAD,WACE,gBACEK,MAAM,6BACNF,QAAQ,YACRF,MAAOJ,GAAQ,OACfE,UAAWA,GAAa,GACxBG,OAAQL,GAAQ,OALlB,UAOE,iBACES,EAAE,oiEACFF,KAAMN,GAAS,eAKxB,E,2CCiSD,SA3RwC,SAAC,GAMnC,IALJW,EAKI,EALJA,KACAE,EAII,EAJJA,QACA4P,EAGI,EAHJA,cACAC,EAEI,EAFJA,IACA9L,EACI,EADJA,MAEA,GAA0BwB,EAAAA,EAAAA,UAASxB,EAAME,MAAQF,EAAME,MAAQ,GAA/D,eAAOA,EAAP,KAAc6L,EAAd,KACA,GAA4BvK,EAAAA,EAAAA,UAASxB,EAAMC,OAASD,EAAMC,OAAS,GAAnE,eAAOA,EAAP,KAAe+L,EAAf,KACA,GAA4BxK,EAAAA,EAAAA,UAAS,GAArC,eAAOyK,EAAP,KAAeC,EAAf,KACA,GAAsB1K,EAAAA,EAAAA,UAAS,CAC7BpB,EAAGJ,EAAMG,IAAIC,GAAK,GAClBC,EAAGL,EAAMG,IAAIE,GAAK,KAFpB,eAAOF,EAAP,KAAYgM,EAAZ,KAIA,GAA8B3K,EAAAA,EAAAA,WAAS,GAAvC,eAAO4K,EAAP,KAAgBC,EAAhB,KACA,GAA8B7K,EAAAA,EAAAA,UAA+B,MAA7D,eAAO8K,EAAP,KAAgBC,EAAhB,KACMC,GAAa5G,EAAAA,EAAAA,QAAuB,MACpC6G,GAAY7G,EAAAA,EAAAA,QAAqB,MAEjC8G,EAGG,IAHHA,EAII,KAIVnJ,EAAAA,EAAAA,YAAU,YACRvD,EAAME,OAAQ6L,EAAS/L,EAAME,OAC7BF,EAAMC,QAAS+L,EAAUhM,EAAMC,OAEhC,GAAE,CAACD,EAAME,MAAOF,EAAMC,UAEvBsD,EAAAA,EAAAA,YAAU,WACR8I,GAAW,GAETE,EADET,GAGS,KAEd,GAAE,CAACA,EAAK/P,KAETwH,EAAAA,EAAAA,YAAU,WACR,GAAKiJ,GAAeA,EAAWzF,QAA/B,CACA,IAAM4F,EAASH,EAAWzF,QAAQE,cAChC,YAEI2F,EAAMD,EAAOE,WAAW,MAC9B,GAAID,EAAK,CACPD,EAAOpR,MAAQmR,EACfC,EAAOnR,OAASkR,EAChBE,EAAIE,UAAU,GAAK,IACnBF,EAAIG,YACJH,EAAII,UAAY,GAChBJ,EAAIK,YA9BC,OAiCL,IAFA,IAAMC,EAAUrG,KAAKC,MAAM4F,EAnCvB,GAoCES,EAAUtG,KAAKC,MAAM4F,EAnCvB,GAoCKtM,EAAI8M,EAAS9M,EAAIsM,EAAgBQ,EAAS9M,GAAK8M,EACtDN,EAAIQ,YAAY,CAAC,GAAI,IACrBR,EAAIS,OAAOjN,EAAG,GACdwM,EAAIU,OAAOlN,EAAGsM,GAGhB,IAAK,IAAIrM,EAAI8M,EAAS9M,EAAIqM,EAAiBS,EAAS9M,GAAK8M,EACvDP,EAAIQ,YAAY,CAAC,GAAI,IACrBR,EAAIS,OAAO,EAAGhN,GACduM,EAAIU,OAAOZ,EAAerM,GAG5BuM,EAAI/Q,QACL,CA3B6C,CA4B/C,GAAE,CAAC2Q,EAAWzF,QAASuF,EAASvQ,KAEjCwH,EAAAA,EAAAA,YAAU,WACRwI,EAAS/L,EAAME,OAAS,GACxB8L,EAAUhM,EAAMC,QAAU,GAC1BiM,EAAU,GACVG,GAAW,EACZ,GAAE,CAACC,KAEJ/I,EAAAA,EAAAA,YAAU,WACR,GAAKiJ,GAAeA,EAAWzF,QAA/B,CACA,IAAI5J,EAIA,CACFoQ,cAAUC,EACVC,iBAAaD,EACb7Q,SAAK6Q,GAEP,OAAQvB,GACN,KAAK,EACH9O,EAAQ,CACNoQ,SAAU,cACVE,YAAavN,EACbvD,IAAK,GAEP,MACF,KAAK,EACHQ,EAAQ,CACNoQ,SAAU,eACVE,YAAaxN,EACbtD,IAAK,KAOX,GAAKQ,EAAMoQ,UAAapQ,EAAMsQ,aAAgBtQ,EAAMR,IAApD,CAEA,IAAMqK,EAAUwF,EAAWzF,QAAQE,cACjC9J,EAAMoQ,UAGHvG,GAEL0G,EAAW1G,EAAS7J,EAAMsQ,YAAatQ,EAAMR,IARkB,CA7BjB,CAsC/C,GAAE,CAAC6P,EAAWzF,QAASuF,EAASL,EAAQlQ,IAEzC,IAAM2R,EAAa,SACjB1G,EACAyG,EACA9Q,GAEA,IACMQ,GAAUsQ,EAAc,IAAM9Q,EAAM,GAAM,IADjCqK,EAERhH,MAAM2N,WAAb,8EAAiGxQ,EAAjG,sBAAoHA,EAApH,mBACD,EAEKyQ,EAAe,SAACC,EAAQlR,EAAaqI,GACzC,GAAa,UAATA,EACF+G,EAAS/N,WAAW6P,EAAEC,OAAO3Q,YACxB,IAAa,WAAT6H,EAEJ,OAAO,EADZgH,EAAUhO,WAAW6P,EAAEC,OAAO3Q,OACzB,CACPuQ,EAAWG,EAAEC,OAAOC,cAAeF,EAAEC,OAAO3Q,MAAOR,EACpD,EA2BD,OACE,SAAC,EAAArB,SAAD,WACE,SAAC,KAAD,CAAOS,KAAMA,EAAME,QAASA,EAA5B,SACGqQ,GACC,SAAC,GAAD,CAAS3G,IAAK6G,EAAY,eAAa,aAAvC,UACE,UAAC,EAAAlR,SAAD,YACE,UAAC0S,GAAD,YACE,iBACE1E,QAAS,kBAAMrN,GAAQ,EAAd,EACT,eAAa,eAFf,UAIE,SAAC,KAAD,CAAWZ,UAAU,cAAcF,KAAK,eAE1C,kBAAMmO,QAjBF,WAChBiD,EAAW,KACZ,EAeuC,eAAa,aAAvC,WACE,SAAC,GAAD,CAAYlR,UAAU,YAAYF,KAAK,WADzC,kBAIA,iBAAMmO,QA1CD,WACjB,GAAImD,EAAU1F,SAAWuF,IAAYF,EAAS,CAC5C,IAAM6B,EAAkBxB,EAAU1F,QAAQmH,yBAE/B1D,EACPiC,EAAU1F,QADZoH,MAAS3D,MAELxK,EAAQ,CACZxE,OAAQgP,EAAMhP,OACdD,MAAOiP,EAAMjP,MACb2E,MAAAA,EACAD,OAAAA,EACAE,IAAK,CACHC,EAAGoK,EAAMpK,EACTC,EAAGmK,EAAMnK,IAGbwL,EAAcS,EAAS2B,EAAiBjO,GACxC/D,GAAQ,EACT,CACF,EAuBwC,eAAa,cAAxC,UACE,SAAC,GAAD,CAAeZ,UAAU,cAAcF,KAAK,iBAGhD,UAAC,EAAAG,SAAD,YACE,UAAC8S,GAAD,YACE,UAACC,GAAD,CAAc,eAAa,aAA3B,WACE,SAACC,GAAD,CAAQ1H,IAAI,IAAI2H,KAAK,OACrB,SAACD,GAAD,CAAQ1H,IAAI,IAAI4H,MAAM,OACtB,SAACF,GAAD,CAAQG,OAAO,IAAIF,KAAK,OACxB,SAACD,GAAD,CAAQG,OAAO,IAAID,MAAM,SAE1BpC,IACC,SAACsC,GAAD,WACE,SAAC,MAAD,CAAS1J,KAAK,UAAU7J,KAAK,YAGjC,SAACwT,GAAD,CAAYjO,GAAG,aACf,SAAC,KAAD,CACE,eAAa,aACbiF,IAAK8G,EACLjC,MAAO8B,EACP/Q,MAAO,IACPC,OAAQ,IACRoT,OAAQ,CAAC,IAAK,IACdC,aAAc,EACdzT,MAAO,CAAC,IAAK,IAAK,IAAK,IACvB8E,MAAOA,EACPD,OAAQA,EACR6O,YAAY,YACZpH,SAAUvH,EACV4O,aAAc,kBAAM1C,GAAW,EAAjB,EACd2C,iBAAkB,gBAAG5O,EAAH,EAAGA,EAAGC,EAAN,EAAMA,EAAN,OAAc8L,EAAO,CAAE/L,EAAAA,EAAGC,EAAAA,GAA1B,QAItB,UAAC4O,GAAD,YACE,SAACC,GAAD,CAAQ5F,QAAS,kBAAM4C,EAAU,EAAhB,EAAoBiD,OAAmB,IAAXlD,EAA7C,UACE,sCAEF,SAACiD,GAAD,CAAQ5F,QAAS,kBAAM4C,EAAU,EAAhB,EAAoBiD,OAAmB,IAAXlD,EAA7C,UACE,2CAGJ,UAACmD,GAAD,CAAU1O,GAAG,QAAb,WACE,UAAC2O,GAAD,CAAOtT,KAAiB,IAAXkQ,EAAb,WACE,SAACqD,GAAD,CAAY5O,GAAG,aAAf,UACE,kBACE,eAAa,cACbsE,KAAK,QACLlE,KAAM,IACNlE,IAAK,EACLO,MAAO+C,EACPvD,IAAK,EACL4S,SAAU,SAAC1B,GAAD,OACRD,EAAaC,EAAG,EAAG,QADX,OAKd,UAAC2B,GAAD,CAAaC,MAAO,EAApB,WACE,eAAIpU,UAAU,kBAAd,oBACA,mCACA,mCACA,mCACA,yCAGJ,UAACgU,GAAD,CAAOtT,KAAiB,IAAXkQ,EAAb,WACE,SAACqD,GAAD,CAAY5O,GAAG,cAAf,UACE,kBACE,eAAa,eACbsE,KAAK,QACLlE,KAAM,EACNlE,IAAK,EACLO,MAAO8C,EACPtD,IAAK,IACL4S,SAAU,SAAC1B,GAAD,OACRD,EAAaC,EAAG,IAAK,SADb,OAKd,UAAC2B,GAAD,CAAaC,MAAO,EAApB,WACE,eAAIpU,UAAU,kBAAd,iBACA,iCACA,kCACA,kCACA,mDAQZ,SAAC,GAAD,CAAU4O,SAAUsC,EAAYtQ,QAASA,OAKlD,EAID,I,eAAMC,GAAUC,GAAAA,GAAAA,IAAH,iOAYP6R,GAAgB7R,GAAAA,GAAAA,IAAH,ukBAmBJ,qBAAGC,MAAkB0N,OAAO8B,OAA5B,IAGK,qBAAGxP,MAAkB0N,OAAO8B,OAA5B,IAKF,qBAAGxP,MAAkB0N,OAAO8B,OAA5B,IAOZ+C,GAAaxS,GAAAA,GAAAA,OAAH,6JAUVuS,GAASvS,GAAAA,GAAAA,IAAH,2QAgBNkS,GAAelS,GAAAA,GAAAA,IAAH,gMAYZmS,GAASnS,GAAAA,GAAAA,IAAH,iRASH,qBAAGyK,KAAiB,MAApB,IACG,qBAAG6H,QAAuB,MAA1B,IACF,qBAAGF,MAAmB,MAAtB,IACC,qBAAGC,OAAqB,MAAxB,IACK,qBAAG5H,IAAiB,MAAQ,CAA5B,IACG,qBAAG6H,OAAuB,MAAQ,CAAlC,IACF,qBAAGF,KAAmB,MAAQ,CAA9B,IACC,qBAAGC,MAAqB,MAAQ,CAAhC,IACA,qBAAGpS,MAAkB0N,OAAO8B,OAA5B,IAGZwC,GAAgBjS,GAAAA,GAAAA,IAAH,2FAKbiT,GAAWjT,GAAAA,GAAAA,IAAH,+DAIRuT,GAAa,0KAUbJ,GAAanT,GAAAA,GAAAA,IAAH,wHAQVkT,GAAQlT,GAAAA,GAAAA,IAAH,ioBACE,qBAAGJ,KAAmB,QAAU,MAAhC,GAaL2T,GAIAA,GAIAA,IAkBFF,GAAcrT,GAAAA,GAAAA,GAAH,mQAIN,gBAAGsT,EAAH,EAAGA,MAAH,qBAAwB,IAAMA,GAAUA,EAAQ,GAAK,IAArD,eAME,mBAAe,IAAf,EAAGA,MAA0B,GAA7B,IAMPR,GAAgB9S,GAAAA,GAAAA,IAAH,0LASb+S,GAAS/S,GAAAA,GAAAA,IAAH,yOAKO,gBAAGgT,EAAH,EAAGA,OAAQ/S,EAAX,EAAWA,MAAX,OACf+S,GAAU,cAAqB/S,EAAM0N,OAAO8B,OAD7B,IAKJ,qBAAGxP,MAAkB0N,OAAO8B,OAA5B,IAEF,gBAAGuD,EAAH,EAAGA,OAAQ/S,EAAX,EAAWA,MAAX,OAAuB+S,GAAU/S,EAAM0N,OAAO8B,OAA9C,IC7Wb,SA3Ic,WACZ,OAAwBpK,EAAAA,EAAAA,WAAS,GAAjC,eAAOzF,EAAP,KAAaE,EAAb,KACA,GAA8BuF,EAAAA,EAAAA,WAAS,GAAvC,eAAO4K,EAAP,KAAgBC,EAAhB,KAEQ5L,EAASgF,KAAThF,KACR,GAAgCe,EAAAA,EAAAA,UAAS,IAAzC,eAAOmO,EAAP,KAAiBC,EAAjB,KACQ3N,GAAcC,EAAAA,EAAAA,KAAdD,UACAkB,GAAauD,EAAAA,EAAAA,MAAbvD,UAURI,EAAAA,EAAAA,YAAU,WACRqM,EAAYnP,EAAK1B,MAClB,GAAE,CAAC0B,EAAK1B,SAETwE,EAAAA,EAAAA,YAAU,WACR,IAAMwE,EAAQC,YAAW,WACvB7E,EAAS,QAASwM,EAAU,CAAEE,aAAa,GAC5C,GAAE,KACH,OAAO,kBAAMlH,aAAaZ,EAAnB,CACR,GAAE,CAAC4H,IAEJ,IAAM9D,EAAa,mCAAG,WACpBiE,EACA7B,EACAjO,GAHoB,2FAKb+P,EAAAA,EAAAA,IACLD,EACA7B,EACAjO,EACAS,EACA2L,EACAC,EACAlJ,EACAlB,IAbkB,2CAAH,0DAgBnB,OACE,UAAC,EAAA3G,SAAD,YACE,UAAC0U,GAAD,YACE,kBACEtQ,KAAK,QACLuQ,YAAY,WACZ9S,MAAOwS,EACPJ,SAAU,SAAC1B,GAAD,OA1CG,SAACA,GAChBA,EAAEC,OAAO3Q,MAAMC,OAAS,GAC1BwS,EAAY/B,EAAEC,OAAO3Q,MAAM+S,UAAU,EAAG,KAExCN,EAAY/B,EAAEC,OAAO3Q,MAExB,CAoCwByQ,CAAaC,EAApB,EACVsC,YAAY,EACZC,aAAa,SAEf,cAAG1P,GAAG,OAAN,SAAciP,QAEhB,6CACA,UAACU,GAAD,CAAMhV,UAAU,OAAhB,WACE,0BACE,6HAKF,UAACiV,GAAD,YACE,SAACC,GAAD,CAAYjH,QAAS,kBAAMrN,GAAQ,EAAd,EAArB,SACGmQ,GACC,SAAC,MAAD,CAASpH,KAAK,UAAU7J,KAAK,WAC3BsF,EAAKF,OAAOR,WACd,gBAAKyQ,IAAK/P,EAAKF,OAAOR,UAAW,eAAa,YAE9C,SAAC,GAAD,CAAY5E,KAAK,WAGpBsF,EAAKF,OAAOR,WACX,UAAC0Q,GAAD,YACE,iBAAMnH,QAAS,kBAAMrN,GAAQ,EAAd,EAAqB,eAAa,cAAjD,UACE,SAAC,KAAD,CAASd,KAAK,cAEhB,iBACEmO,QAAS,kBACPoH,EAAAA,EAAAA,IACEjQ,EACA2L,EACAC,EACAlJ,EACAlB,EANK,EAST,eAAa,gBAVf,UAYE,SAAC,KAAD,CAAa9G,KAAK,eAItB,SAAC,KAAD,CACEiO,QAAQ,QACRpE,KAAK,SACLwE,SAAU4C,EACVjR,KAAK,KACLmO,QAAS,kBAAMrN,GAAQ,EAAd,EACTb,MAAM,wBANR,2BAYF,SAAC,GAAD,CACEW,KAAMA,EACNE,QAASA,EACT4P,cAAeA,EACfC,IAAKrL,EAAKF,OAAOT,SAAW,KAC5BE,MAAOS,EAAKF,OAAOP,YAGvB,0BACE,SAAC2Q,GAAA,EAAD,CAAOjR,KAAK,aAAanC,MAAM,kBAEjC,0BACE,SAACoT,GAAA,EAAD,CAAOjR,KAAK,YAAYnC,MAAM,iBAEhC,0BACE,SAACoT,GAAA,EAAD,CAAOjR,KAAK,gBAAgBnC,MAAM,qBAEpC,0BACE,SAACoT,GAAA,EAAD,CAAOjR,KAAK,eAAenC,MAAM,oBAEnC,0BACE,SAACoT,GAAA,EAAD,CAAOjR,KAAK,cAAcnC,MAAM,mBAElC,0BACE,SAACoT,GAAA,EAAD,CAAOjR,KAAK,UAAUnC,MAAM,mBAKrC,EAID,I,eAAM8S,GAAOlU,GAAAA,GAAAA,IAAH,4GAKJoU,GAAapU,GAAAA,GAAAA,IAAH,gUAgBVmU,GAAcnU,GAAAA,GAAAA,IAAH,8JAGb6N,GAAAA,GAMEyG,GAAuBtU,GAAAA,GAAAA,IAAH,ihBAiBA,qBAAGC,MAAkBC,OAAOuP,QAAQ,EAApC,IACX,qBAAGxP,MAAkB0N,OAAO8B,OAA5B,IAIG,qBAAGxP,MAAkB0N,OAAO8B,OAA5B,IAMZoE,GAAe7T,GAAAA,GAAAA,IAAH,m8BA6BM,qBAAGC,MAAkB0N,OAAO8B,OAA5B,I,iCCzKxB,SAnEyC,SAAC,GAA0B,IAAxBnL,EAAwB,EAAxBA,KAAMoI,EAAkB,EAAlBA,YAChD,GAAwBrH,EAAAA,EAAAA,WAAS,GAAjC,eAAOzF,EAAP,KAAaE,EAAb,KACA,GAA0BuF,EAAAA,EAAAA,UAAS,IAAnC,eAAOrE,EAAP,KAAcgG,EAAd,KACA,GAA0B3B,EAAAA,EAAAA,UAAmB,IAA7C,eAAOoP,EAAP,KAAcC,EAAd,KACA,GAA2BC,EAAAA,GAAAA,KAAnBC,EAAR,EAAQA,UAAWpL,EAAnB,EAAmBA,IAkCnB,OAhCApC,EAAAA,EAAAA,YAAU,WACHwN,GACL9U,GAAQ,EACT,GAAE,CAAC8U,KAEJxN,EAAAA,EAAAA,YAAU,WACR,IAAMwE,EAAQC,YAAW,WACvB,GAAIvH,IAAUmQ,EAAMxT,OAAS,GAAKqD,EAAKrD,OAAS,GAAMD,EAAMC,OAAS,GAAI,CACvE,IAAM4T,EAAevQ,EAAKwQ,QAAO,SAAC/F,EAAMgG,GAAP,OAAaA,EAAI,EAAjB,IACjCL,EAASG,EACV,CACF,GAAE,KACH,OAAO,kBAAMrI,aAAaZ,EAAnB,CACR,GAAE,CAACtH,EAAMtD,KAEVoG,EAAAA,EAAAA,YAAU,WACR,GAAKpG,KAASA,EAAMC,OAAS,GAA7B,CACA,IAAM2K,EAAQC,YAAW,WACvB,IAAMmJ,EAAO1Q,EAAKwQ,QAAO,SAAC/F,GAAD,OACvBA,EAAKkG,KAAKC,cAAchT,SAASlB,EAAMkU,cADhB,IAGrBF,EAAK/T,OAAS,GAChByT,EAASM,EAEZ,GAAE,KACH,OAAO,kBAAMxI,aAAaZ,EAAnB,CAT+B,CAUvC,GAAE,CAAC5K,KAOF,SAAC,EAAA7B,SAAD,WACE,UAAC,GAAD,CAASqK,IAAKA,EAAd,WACE,UAACqE,GAAD,CAAQhF,KAAK,SAASsE,QAAS,kBAAMrN,GAASF,EAAf,EAA/B,iCACqB,0BAAO0E,EAAKrD,aAEjC,UAACkU,GAAD,CAAiBvV,KAAMA,EAAvB,WACE,UAACwV,GAAD,YACE,SAAC,KAAD,KACA,kBACEvM,KAAK,OACLiL,YAAY,kBACZ9S,MAAOA,EACPoS,SAAU,SAAC1B,GAAD,OAAO1K,EAAS0K,EAAEC,OAAO3Q,MAAzB,QAGd,SAACqU,GAAD,UACGZ,EAAMrG,KAAI,SAACW,EAAWgG,GAAZ,OACT,eAAY5H,QAAS,kBAtBjB8H,EAsB8BlG,EAAKkG,UArBjDvI,EAAYuI,GADC,IAACA,CAsBiB,EAArB,SACGlG,EAAKkG,MADCF,EADA,aAUtB,EAID,I,GAAMhV,GAAUC,GAAAA,GAAAA,IAAH,qEAIP6N,GAAS7N,GAAAA,GAAAA,OAAH,8iBA2BNoV,GAAgBpV,GAAAA,GAAAA,IAAH,qPAYbmV,GAAkBnV,GAAAA,GAAAA,IAAH,saAYL,qBAAGJ,KAAmB,UAAY,QAAlC,IACH,qBAAGA,KAAmB,EAAI,CAA1B,IACE,qBAAGA,KAAmB,WAAa,UAAnC,IAGTyV,GAAcrV,GAAAA,GAAAA,GAAH,s5BCpIXsV,GAAa,CACjB,CACE/Q,GAAI,IACJ0Q,KAAM,2IAER,CACE1Q,GAAI,IACJ0Q,KAAM,sIAER,CACE1Q,GAAI,IACJ0Q,KAAM,yGAER,CACE1Q,GAAI,IACJ0Q,KAAM,mGAER,CACE1Q,GAAI,IACJ0Q,KAAM,0EAER,CACE1Q,GAAI,IACJ0Q,KAAM,mFAER,CACE1Q,GAAI,IACJ0Q,KAAM,wHAER,CACE1Q,GAAI,IACJ0Q,KAAM,oFAER,CACE1Q,GAAI,IACJ0Q,KAAM,+IA2CV,SAvCc,WACZ,OAII1K,EAAAA,EAAAA,MAHFvD,EADF,EACEA,SACAH,EAFF,EAEEA,MACamI,EAHf,EAGE/H,UAAa+H,OAETuG,EAAO1O,EAAM,cAUnB,OACE,SAAC,EAAA1H,SAAD,WACE,iBAAKD,UAAU,OAAf,WACE,oDACA,cAAGA,UAAU,OAAO2E,MAAO,CAAE2R,SAAU,SAAvC,sJAIA,UAAC,GAAD,YACE,kDACA,SAAC,GAAD,CAAgBlR,KAAMgR,GAAY5I,YAlBtB,SAACuI,GACnB,IACMrM,IAAyB2M,EAAKhU,QADtB,gBACqC,IAAIN,OAEjDwU,EAAM,GAAH,OAAM7M,EAAuB2M,EAAO,OAAS,GAA7C,cAAqDN,EAArD,QACTjO,EAAS,aAAcyO,EACxB,QAcK,SAACC,GAAA,EAAD,CAAgBnS,KAAK,eACpByL,EAAO3N,aACN,SAAC,MAAD,CAAiBwC,MAAO,CAAE+I,UAAW,UAArC,SACGoC,EAAO3N,WAAW6H,cAM9B,EAID,I,iCAAMiL,GAAcnU,GAAAA,GAAAA,IAAH,2K,iCChDX2V,GAAgB,SAAC,GASP,IARd9V,EAQc,EARdA,SACA+V,EAOc,EAPdA,KACAhT,EAMc,EANdA,MACAhD,EAKc,EALdA,KACAuN,EAIc,EAJdA,QACA0I,EAGc,EAHdA,QACAjP,EAEc,EAFdA,QACA3F,EACc,EADdA,OAEMuI,GAAMC,EAAAA,EAAAA,QAAuB,MA+BnC,OA7BArC,EAAAA,EAAAA,YAAU,WACR,GAAKoC,GAAQA,EAAIoB,QAAjB,CACA,IAAMkL,EAAQtM,EAAIoB,QAAQmL,iBAAiB,SAE3C,GAAKD,EAAL,CAEA,IAAIE,EAAiC,KAErCF,EAAMhH,SAAQ,SAACC,GACb,IAAMkH,EAAWlH,EAAKlP,SAAS,GAC1BoW,IACLA,EAASpS,MAAMxE,OAAS,MACpB0P,EAAKmH,UAAUC,SAAS,WAC1BH,EAAaC,EACbA,EAASpS,MAAMxE,OAAS4W,EAASG,aAAe,OAEhDH,EAASpS,MAAMxE,OAAS,MACxB4W,EAASpS,MAAMwS,SAAW,UAE7B,IAED,IAAMzK,EAAQC,YAAW,WAClBmK,IACLA,EAAWnS,MAAMwS,SAAW,UAC7B,GAAE,KAEH,OAAO,kBAAM7J,aAAaZ,EAAnB,CAtBW,CAHc,CA0BjC,GAAE,CAACpC,EAAIoB,QAASiL,EAAS5U,KAGxB,SAAC,EAAA9B,SAAD,WACE,UAAC,GAAD,CAASqK,IAAKA,EAAK,6BAAqB5G,EAAMsS,eAA9C,WACE,UAACoB,GAAD,CAAepX,UAAU,SAAzB,WACE,UAACqX,GAAD,WACGX,GACD,uBAAIhT,QAEN,UAAC,GAAD,WACGgE,IACC,SAAC4P,GAAD,CAAa3S,MAAO,CAAE4S,YAAa,QAAnC,UACE,SAAC,KAAD,CAAazX,KAAK,SAASC,MAAM,8BAGrC,SAAC,GAAD,CAAQ+T,OAAQpT,EAAMuN,QAASA,EAAS,eAAa,aAArD,UACE,SAAC,KAAD,CAAUnO,KAAK,mBAIpBY,GAAQC,MAIhB,EA0DD8V,GAAce,KAxDoB,SAAC,GAQ7B,IAPJC,EAOI,EAPJA,KACA/T,EAMI,EANJA,MACAnB,EAKI,EALJA,YACAmV,EAII,EAJJA,WACAC,EAGI,EAHJA,aACAhX,EAEI,EAFJA,SACA+G,EACI,EADJA,QAEA,OACE,UAACkQ,GAAD,CACE5X,UAAS,eAAUyX,EAAO,SAAW,WAA5B,YACP/P,EAAU,QAAU,IAEtB,eAAa,WAJf,WAME,UAACmQ,GAAD,YACE,gBACElT,MAAO,CAAEmT,OAAQ,UAAWC,WAAY,QACxC9J,QAASyJ,EAFX,UAIID,IACA,UAAC,EAAAxX,SAAD,YACE,cAAG0E,MAAO,CAAEqT,SAAU,OAAQC,aAAc,UAA5C,SACGvU,KAEH,cAAGiB,MAAO,CAAE5E,MAAO,WAAnB,SAAiCwC,UAIvC,SAAC2V,GAAD,CAAcjK,QAAS0J,EAAc,eAAa,kBAAlD,UACE,SAAC,KAAD,CAAa7X,KAAK,iBAGtB,UAACqY,GAAD,eAAgBxX,OAGrB,EAoBD8V,GAAc2B,OAlBwB,SAAC,GAAuB,IAArB1U,EAAqB,EAArBA,MAAOuK,EAAc,EAAdA,QAC9C,OACE,SAAC,EAAAhO,SAAD,WACE,SAACoY,GAAD,CAAWrY,UAAU,OAArB,UACE,UAAC,KAAD,CACE2J,KAAK,SACLoE,QAAQ,OACR,eAAa,UACbE,QAASA,EAJX,WAME,SAAC,KAAD,IANF,IAMgBvK,QAKvB,EAKD,YAEA,I,wBAAM7C,GAAUC,GAAAA,GAAAA,IAAH,0SAaP8S,GAAgB9S,GAAAA,GAAAA,IAAH,mGAMbsW,GAAgBtW,GAAAA,GAAAA,IAAH,8LAUb+S,GAAS/S,GAAAA,GAAAA,IAAH,+QAQK,qBAAGgT,OAAuB,iBAAH,eAAvB,IAMC,qBAAG/S,MAAkB0N,OAAO8B,OAA5B,IAKZ8G,GAAUvW,GAAAA,GAAAA,IAAH,gMAYP8W,GAAc9W,GAAAA,GAAAA,IAAH,mSAaX+W,GAAa/W,GAAAA,GAAAA,IAAH,iLAWVoX,GAAepX,GAAAA,GAAAA,IAAH,wKAOF,qBAAGC,MAAkB0N,OAAO8B,OAA5B,IAKV8H,GAAYvX,GAAAA,GAAAA,IAAH,+QAMX6N,GAAAA,GAKc,qBAAG5N,MAAkB0N,OAAO8B,OAA5B,IAKZ4H,GAAerX,GAAAA,GAAAA,IAAH,kMAYZwW,GAAcxW,GAAAA,GAAAA,IAAH,+HChSJkU,GAAOlU,GAAAA,GAAAA,IAAH,sIAMJwX,GAAUxX,GAAAA,GAAAA,IAAH,4G,IAMGA,GAAAA,GAAAA,IAAH,gM,onBCPpB,IAAMI,GAAS,CACb,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAuNF,SA1MI,SAAC,GAAuB,IAArBmD,EAAqB,EAArBA,KAASkU,GAAY,cACpBC,EAAWC,OAAQC,OAAO,QAChC,GAAwBvS,EAAAA,EAAAA,WAAkB,GAA1C,eAAOzF,EAAP,KAAaE,EAAb,KACA,GAAwBuF,EAAAA,EAAAA,UAAiBsS,OAAQC,OAAO,SAAxD,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BzS,EAAAA,EAAAA,UAAwB,MAAlD,eAAO0S,EAAP,KAAcC,EAAd,KACA,GAAgC3S,EAAAA,EAAAA,UAAS,IAAzC,eAAO4S,EAAP,KAAiBC,EAAjB,KACA,GAA2BvD,EAAAA,GAAAA,KAAnBC,EAAR,EAAQA,UAAWpL,EAAnB,EAAmBA,IACnB,GAA6Be,EAAAA,EAAAA,MAArB4N,EAAR,EAAQA,QAASpR,EAAjB,EAAiBA,QAEjB,GAEIqR,EAAAA,EAAAA,IAAc,CAChB7U,KAAAA,EACA4U,QAAAA,IAHAE,MAASjF,EADX,EACWA,SAAUkF,EADrB,EACqBA,OAAQtX,EAD7B,EAC6BA,OAM7BoG,EAAAA,EAAAA,YAAU,WACR,OAAOtH,GAAQ,EAChB,GAAE,CAAC8U,KAEJxN,EAAAA,EAAAA,YAAU,WACR,OAAO8Q,EAAYlX,EACpB,GAAE,KAEHoG,EAAAA,EAAAA,YAAU,WACR,IAAMmR,EAAchV,EAAKtB,MAAM,IAAK,GACpC8E,EAAQwR,EAAYC,KAAK,KAE1B,GAAE,CAACxX,IAEJ,IAAMU,EAAY,SAAC+W,GAAD,OACA,iBAARA,GACU,iBAARA,GAAmC,KAAfA,EAAIC,UACjC9W,MAAM6W,EAHS,EAKZE,EAAS,SAACjH,GACd,IAMckH,EANRC,EAAQ,IAAIC,OAAO,uBAAwB,KAoD3CrE,GA9CQmE,EAJAlH,EAAEC,OAAO3Q,MAAMO,QAAQ,gBAAiB,IAEpCwX,MAAMF,KAKpBD,EAAII,QACF,SAACC,EAAUrP,GACT,IAAI6L,EAAM7L,EACV,IAAKqP,EAAIC,GACP,GAAIxX,EAAU+T,GAAM,CAClB,IAAIyD,EAAKC,SAAS1D,EAAI1B,UAAU,EAAG,IACnCmF,EAAK,GAAMA,EAAK,GAAMA,EAAK,IAAKA,EAAK,GACrCD,EAAIC,GAAK9Y,GAAO8Y,EAAK,GACrBzD,EAAMA,EAAI1B,UAAUmF,EAAGE,WAAWnY,OACnC,KAAM,CACL,IAAIiY,EAAKzD,EAAI1B,UAAU,EAAG,GACtBiB,EAAO5U,GAAO0U,QAAO,SAACuE,GAAD,OACvBA,EAAEnE,cAAchT,SAASgX,EAAGhE,cADL,IAGrBF,GAAQA,EAAK/T,OAAS,IAGxBiY,EAAKzD,EAAI1B,UAAU,EAAG,GACtBiB,EAAO5U,GAAO0U,QAAO,SAACuE,GAAD,OACnBA,EAAEnE,cAAchT,SAASgX,EAAGhE,cADT,KAHrB+D,EAAIC,GAAKlE,EAAK,EAQjB,CAEH,IAAKiE,EAAIK,MACH5X,EAAUkI,IAAS6L,EAAIxU,QAAU,EAAG,CACtC,IAAIqY,EAAO7D,EAAI1B,UAAU,EAAG,IAC5BoF,SAASG,GAAQ,MAEbH,SAASG,GAAQ,QADhBA,EAAO5B,GAIZuB,EAAIK,KAAOA,CACZ,CAGH,OAAOL,CACR,GACD,CAAEC,GAAI,GAAII,KAAM,KAKlB7E,IACFA,EAAM6E,KAAOxB,EAAQrD,EAAM6E,MAAQxB,EAAQD,GAC3CpD,EAAMyE,GAAKlB,EAASvD,EAAMyE,IAAMlB,EAAS,OAE5C,EAwDD,OACE,SAAC,EAAA7Y,SAAD,WACE,UAAC,GAAD,CAASqK,IAAKA,EAAd,WACE,qBACE2D,QAAS,kBAAMrN,GAAQ,EAAd,EACTwY,OA/BW,SAAC5G,GACY,IAA1BA,EAAEC,OAAO3Q,MAAMC,OACjBmS,EAAS,KAETuF,EAAOjH,GACHqG,IACF3E,EAAS,GAAD,OAAI2E,EAAJ,YAAaF,IACrBK,EAAY,GAAD,OAAIH,EAAJ,YAAaF,MAI5BS,GACD,EAoBOlF,SArCa,SAAC1B,GACpBiH,EAAOjH,GACPwG,EAAYxG,EAAEC,OAAO3Q,MACtB,EAmCOuY,WAnBe,SAAC7H,GAEV,MADAA,EAAE8H,SAAW9H,EAAE+H,SAEzBd,EAAOjH,GACHqG,IACF3E,EAAS,GAAD,OAAI2E,EAAJ,YAAaF,IACrBK,EAAY,GAAD,OAAIH,EAAJ,YAAaF,KAE1B/X,GAAQ,GAEX,EAUOkB,MAAOiX,EACP1U,KAAMA,EACN0Q,aAAa,MACbH,YAAY,eACR2D,IAEL7X,IACC,UAAC8Z,GAAD,YACE,UAACC,GAAD,YACE,0BACE,iBACE9V,MAAO,CAAEkH,UAAW,kBACpBoC,QA1EG,WACjB,IAAMyM,EAAOjC,KAAME,GAAMgC,SAAS,EAAG,QAAQjC,OAAO,QAChDuB,SAASS,GAAQ,OACrB9B,EAAQ8B,GACR1B,EAAY,GAAD,OAAIH,EAAJ,YAAa6B,IACxBxG,EAAS,GAAD,OAAI2E,EAAJ,YAAa6B,IACtB,EAkEa,UAIE,SAAC,KAAD,SAGJ,yBAAM/B,KACN,0BACE,iBACEhU,MAAO,CAAEkH,UAAW,mBACpBoC,QA3EG,WACjB,IAAM2M,EAAMnC,KAAME,GAAMiC,IAAI,EAAG,QAAQlC,OAAO,QAC1CuB,SAASW,GAAO,OACpBhC,EAAQgC,GACR5B,EAAY,GAAD,OAAIH,EAAJ,YAAa+B,IACxB1G,EAAS,GAAD,OAAI2E,EAAJ,YAAa+B,IACtB,EAmEa,UAIE,SAAC,KAAD,YAIN,SAACC,GAAD,UACG3Z,GAAOgO,KAAI,SAACW,EAAMgG,GAAP,OACV,SAACiF,GAAD,CAEE7M,QAAS,kBA7EL,SAAC4K,GACnBC,EAASD,GACTG,EAAY,GAAD,OAAIH,EAAJ,YAAaF,IACxBzE,EAAS,GAAD,OAAI2E,EAAJ,YAAaF,IACrB/X,GAAQ,EACT,CAwE8Bma,CAAYlL,EAAlB,EACTiE,OAAQ+E,IAAUhJ,EAHpB,SAKGA,GAJIgG,EAFG,aAezB,EAID,IAAMgF,GAAgB/Z,GAAAA,GAAAA,IAAH,uFAIbga,GAASha,GAAAA,GAAAA,IAAH,uUASD,gBAAGC,EAAH,EAAGA,MAAH,SAAU+S,QAAuB/S,EAAM0N,OAAO8B,OAA9C,IACK,gBAAGxP,EAAH,EAAGA,MAAH,SAAU+S,QAAuB/S,EAAMC,OAAOuP,QAAQ,EAAtD,IAGH,qBAAGxP,MAAkB0N,OAAO8B,OAA5B,IACK,qBAAGxP,MAAkBC,OAAOuP,QAAQ,EAApC,IAIZ1P,GAAUC,GAAAA,GAAAA,IAAH,kDAGP2Z,GAAc3Z,GAAAA,GAAAA,IAAH,oeAmBG,qBAAGC,MAAkB0N,OAAO8B,OAA5B,IAMdiK,GAAgB1Z,GAAAA,GAAAA,IAAH,qPChInB,SA3H2C,SAAC,GAMtC,IALJsE,EAKI,EALJA,KACA1E,EAII,EAJJA,KACAE,EAGI,EAHJA,QACA6W,EAEI,EAFJA,KACAuD,EACI,EADJA,QAEQpX,EAAYwB,EAAZxB,QACFqB,EAAgB,CACpB1B,YAAa,GACbM,OAAQ,GACRjB,SAAU,CACRC,MAAO,GACPI,IAAK,KAIT,GAIIoI,EAAAA,EAAAA,MAHF4N,EADF,EACEA,QACApR,EAFF,EAEEA,QACaiI,EAHf,EAGE/H,UAAa+H,OAGf,GAAmCmL,EAAAA,EAAAA,IAAc,CAC/ChC,QAAAA,EACA5U,KAAM,YAFA8D,EAAR,EAAQA,OAAQ+S,EAAhB,EAAgBA,OAAQpS,EAAxB,EAAwBA,OAKxB,OACE,SAAC,EAAA7I,SAAD,WACE,UAAC,GAAD,CACE0W,QAASc,EACT/W,KAAMA,EACNuN,QAAS,kBACPkN,EAAAA,EAAAA,IACE,UACAvX,EACAqB,EACAiW,EACAxa,EACAE,EACAoa,EARK,EAWTtX,MAAM,UACNgT,MAAM,SAAC,KAAD,CAAe5W,KAAK,SAASC,MAAM,YACzC2H,UAAWoI,EAAM,QACjB/N,OAAQ6B,EAAQ7B,OAjBlB,UAmBGoG,EAAO+G,KAAI,SAACW,EAAMgG,GAAP,aACV,SAAC,EAAA5V,SAAD,WACE,SAAC,QAAD,CACEyD,MACEE,EAAQiS,GAAGhS,OAASD,EAAQiS,GAAGhS,OAAS,wBAE1CtB,YACEqB,EAAQiS,GAAGhS,QACXD,EAAQiS,GAAGjT,SAASC,MAAQ,IAAMe,EAAQiS,GAAGjT,SAASK,IAExDwU,KAAMA,IAAS,WAAa5B,EAC5B8B,aAAc,kBAAMyD,EAAAA,EAAAA,IAA0BtS,EAAQ+M,EAAxC,EACd6B,WAAY,kBACV2D,EAAAA,EAAAA,IAAyB,UAAWxF,EAAGhO,EAAS4P,EAAMuD,EAD5C,EAGZtT,WAASoI,EAAM,UAAeA,EAAM,QAAY+F,IAblD,UAeE,UAAC,GAAD,YACE,0BACE,SAACP,GAAA,EAAD,CACEjR,KAAI,kBAAawR,EAAb,WACJ3T,MAAM,SACNlC,UAAU,MACVsb,cAAc,OAGlB,0BACE,SAAChG,GAAA,EAAD,CACEjR,KAAI,kBAAawR,EAAb,gBACJ3T,MAAM,sBACNlC,UAAU,MACVsb,cAAc,OAIlB,iBAAKtb,UAAU,MAAf,WACE,2CAEA,SAAC,GAAD,CAAYqE,KAAI,kBAAawR,EAAb,qBACf/F,EAAOlM,SACPkM,EAAelM,QAAQiS,IACvB/F,EAAelM,QAAQiS,GAAGjT,UAC1BkN,EAAelM,QAAQiS,GAAGjT,SAASoH,SAClC,SAAC,MAAD,CAAiBhK,UAAU,gBAA3B,mBACI8P,EAAelM,QAAQiS,GAAGjT,gBAD9B,aACG,EAAqCoH,UAEtC,SAEN,4BACE,yCAEA,SAAC,GAAD,CAAY3F,KAAI,kBAAawR,EAAb,4BAlDThG,EAAKxK,GADV,KAyDZ,SAAC,UAAD,CACE3B,MAAO,qBACPuK,QAAS,kBACPsN,EAAAA,EAAAA,IACE,UACApT,EAAOpG,OACPkD,EACAiW,EACAF,EANK,QAalB,EC2CD,GAjK6C,SAAC,GAMxC,IALJ5V,EAKI,EALJA,KACA1E,EAII,EAJJA,KACAE,EAGI,EAHJA,QACA6W,EAEI,EAFJA,KACAuD,EACI,EADJA,QAEQ1X,EAAc8B,EAAd9B,UACF2B,EAAgB,CACpB1B,YAAa,GACbC,OAAQ,GACRZ,SAAU,CACRC,MAAO,GACPI,IAAK,IAEPX,KAAM,GACNC,YAAa,IAGf,GAII8I,EAAAA,EAAAA,MAHF4N,EADF,EACEA,QACApR,EAFF,EAEEA,QACaiI,EAHf,EAGE/H,UAAa+H,OAGf,GAAmCmL,EAAAA,EAAAA,IAAc,CAC/ChC,QAAAA,EACA5U,KAAM,cAFA8D,EAAR,EAAQA,OAAQ+S,EAAhB,EAAgBA,OAAQpS,EAAxB,EAAwBA,OAKxB,OACE,SAAC,EAAA7I,SAAD,WACE,UAAC,GAAD,CACE0W,QAASc,EACT/W,KAAMA,EACNuN,QAAS,kBACPkN,EAAAA,EAAAA,IACE,YACA7X,EACA2B,EACAiW,EACAxa,EACAE,EACAoa,EARK,EAWTtX,MAAM,YACNgT,MAAM,SAAC,KAAD,CAAe5W,KAAK,SAASC,MAAM,YACzC2H,UAAWoI,EAAM,UACjB/N,OAAQuB,EAAUvB,OAjBpB,UAmBGoG,EAAO+G,KAAI,SAACW,EAAMgG,GAAP,eACV,SAAC,EAAA5V,SAAD,WACE,UAAC,QAAD,CACEyD,MACEJ,EAAUuS,GAAGtS,YACTD,EAAUuS,GAAGtS,YACb,wBAENhB,YACEe,EAAUuS,GAAGtS,aACbD,EAAUuS,GAAGjT,SAASC,MAAQ,IAAMS,EAAUuS,GAAGjT,SAASK,IAE5DwU,KAAMA,IAAS,aAAe5B,EAC9B8B,aAAc,kBAAMyD,EAAAA,EAAAA,IAA0BtS,EAAQ+M,EAAxC,EACd6B,WAAY,kBACV2D,EAAAA,EAAAA,IAAyB,YAAaxF,EAAGhO,EAAS4P,EAAMuD,EAD9C,EAGZtT,WACEoI,EAAM,YAAiBA,EAAM,UAAc+F,IAhB/C,WAmBE,UAAC,GAAD,YACE,0BACE,SAACP,GAAA,EAAD,CACEjR,KAAI,oBAAewR,EAAf,gBACJ3T,MAAM,sBACN0S,YAAY,4BACZ5U,UAAU,MACVsb,cAAc,OAGlB,0BACE,SAAChG,GAAA,EAAD,CACEjR,KAAI,oBAAewR,EAAf,WACJ3T,MAAM,SACN0S,YAAY,kBACZ5U,UAAU,MACVsb,cAAc,OAGlB,iBAAKtb,UAAU,MAAf,WACE,mDACA,UAACsY,GAAD,YACE,0BACE,SAAC,GAAD,CAAYjU,KAAI,oBAAewR,EAAf,wBAElB,0BACE,SAAC,GAAD,CAAYxR,KAAI,oBAAewR,EAAf,wBAGnB/F,EAAOxM,WACPwM,EAAexM,UAAUuS,IACzB/F,EAAexM,UAAUuS,GAAGjT,UAC5BkN,EAAexM,UAAUuS,GAAGjT,SAASoH,SACpC,SAAC,MAAD,CAAiBhK,UAAU,gBAA3B,mBACI8P,EAAexM,UAAUuS,GAAGjT,gBADhC,aACG,EAAuCoH,UAExC,SAEN,0BACE,SAACsL,GAAA,EAAD,CACEjR,KAAI,oBAAewR,EAAf,SACJ3T,MAAM,OACN0S,YAAY,kBACZ5U,UAAU,MACVsb,cAAc,UAIpB,iBAAKtb,UAAU,OAAf,WACE,SAACwW,GAAA,EAAD,CACEnS,KAAI,oBAAewR,EAAf,gBACJ2F,UAAU,QACVC,QAAS,CAAC,OAAQ,SAAU,YAAa,OAAQ,UACjDC,QAAS,CACPC,QAAS,CACP,CAAC,OAAQ,SAAU,aACnB,CAAC,CAAEC,KAAM,WAAa,CAAEA,KAAM,eAInC9L,EAAOxM,WACPwM,EAAexM,UAAUuS,IACzB/F,EAAexM,UAAUuS,GAAGtT,aAC5BuN,EAAexM,UAAUuS,GAAGtT,YAAYyH,SACvC,SAAC,MAAD,CAAiBhK,UAAU,gBAA3B,mBACI8P,EAAexM,UAAUuS,GAAGtT,mBADhC,aACG,EAA0CyH,UAE3C,YAvFK6F,EAAKxK,GADV,KA6FZ,SAAC,UAAD,CACE3B,MAAO,gBACPuK,QAAS,kBACPsN,EAAAA,EAAAA,IACE,YACApT,EAAOpG,OACPkD,EACAiW,EACAF,EANK,QAalB,E,eCQD,SAvKqC,SAAC,GAMhC,IALJ5V,EAKI,EALJA,KACA1E,EAII,EAJJA,KACAE,EAGI,EAHJA,QACA6W,EAEI,EAFJA,KACAuD,EACI,EADJA,QAEQ9X,EAAekC,EAAflC,WACF+B,EAAgB,CACpB5B,QAAS,GACTrB,YAAa,GACbY,SAAU,CACRC,MAAO,GACPI,IAAK,IAEPX,KAAM,GACNC,YAAa,IAGf,GAII8I,EAAAA,EAAAA,MAHF4N,EADF,EACEA,QACApR,EAFF,EAEEA,QACaiI,EAHf,EAGE/H,UAAa+H,OAGf,GAAmCmL,EAAAA,EAAAA,IAAc,CAC/ChC,QAAAA,EACA5U,KAAM,eAFA8D,EAAR,EAAQA,OAAQ+S,EAAhB,EAAgBA,OAAQpS,EAAxB,EAAwBA,OAKxB,OACE,SAAC,EAAA7I,SAAD,WACE,UAAC,GAAD,CACE0W,QAASc,EACT/W,KAAMA,EACNuN,QAAS,kBACPkN,EAAAA,EAAAA,IACE,aACAjY,EACA+B,EACAiW,EACAxa,EACAE,EACAoa,EARK,EAWTtX,MAAM,aACNgT,MAAM,SAAC,KAAD,CAAe5W,KAAK,SAASC,MAAM,YACzC2H,UAAWoI,EAAM,WACjB/N,OAAQmB,EAAWnB,OAjBrB,UAmBGoG,EAAO+G,KAAI,SAACW,EAAMgG,GAAP,eACV,SAAC,EAAA5V,SAAD,WACE,UAAC,QAAD,CACEyD,MACER,EAAW2S,GAAGxS,QACVH,EAAW2S,GAAGxS,QACd,oBAENd,YACEW,EAAW2S,GAAGxS,SACdH,EAAW2S,GAAGjT,SAASC,MAAQ,IAAMK,EAAW2S,GAAGjT,SAASK,IAE9DwU,KAAMA,IAAS,cAAgB5B,EAC/B8B,aAAc,kBAAMyD,EAAAA,EAAAA,IAA0BtS,EAAQ+M,EAAxC,EACd6B,WAAY,kBACV2D,EAAAA,EAAAA,IACE,aACAxF,EACAhO,EACA4P,EACAuD,EANQ,EASZtT,WACEoI,EAAM,aAAkBA,EAAM,WAAe+F,IAtBjD,WAyBE,UAAC,GAAD,YACE,0BACE,SAACP,GAAA,EAAD,CACEjR,KAAI,qBAAgBwR,EAAhB,YACJ3T,MAAM,eACN0S,YAAY,cACZ5U,UAAU,MACVsb,cAAc,OAGlB,0BACE,SAAChG,GAAA,EAAD,CACEjR,KAAI,qBAAgBwR,EAAhB,gBACJ3T,MAAM,cACN0S,YAAY,sBACZ5U,UAAU,MACVsb,cAAc,OAGlB,iBAAKtb,UAAU,MAAf,WACE,mDACA,UAACsY,GAAD,YACE,0BACE,SAAC,GAAD,CAAYjU,KAAI,qBAAgBwR,EAAhB,wBAElB,0BACE,SAAC,GAAD,CAAYxR,KAAI,qBAAgBwR,EAAhB,wBAGnB/F,EAAO5M,YACP4M,EAAe5M,WAAW2S,IAC1B/F,EAAe5M,WAAW2S,GAAGjT,UAC7BkN,EAAe5M,WAAW2S,GAAGjT,SAASoH,SACrC,SAAC,MAAD,CAAiBhK,UAAU,gBAA3B,mBACI8P,EAAe5M,WAAW2S,GAAGjT,gBADjC,aACG,EAAwCoH,UAEzC,SAEN,0BACE,SAACsL,GAAA,EAAD,CACEjR,KAAI,qBAAgBwR,EAAhB,SACJ3T,MAAM,OACN0S,YAAY,kBACZ5U,UAAU,MACVsb,cAAc,UAIpB,iBAAKtb,UAAU,OAAf,WACE,SAACwW,GAAA,EAAD,CACEnS,KAAI,qBAAgBwR,EAAhB,gBACJ2F,UAAU,QACVC,QAAS,CAAC,OAAQ,SAAU,YAAa,OAAQ,UACjDC,QAAS,CACPC,QAAS,CACP,CAAC,OAAQ,SAAU,aACnB,CAAC,CAAEC,KAAM,WAAa,CAAEA,KAAM,eAInC9L,EAAO5M,YACP4M,EAAe5M,WAAW2S,IAC1B/F,EAAe5M,WAAW2S,GAAGtT,aAC7BuN,EAAe5M,WAAW2S,GAAGtT,YAAYyH,SACxC,SAAC,MAAD,CAAiBhK,UAAU,gBAA3B,mBACI8P,EAAe5M,WAAW2S,GAAGtT,mBADjC,aACG,EAA2CyH,UAE5C,YA7FK6F,EAAKxK,GADV,KAmGZ,SAAC,UAAD,CACE3B,MAAO,yBACPuK,QAAS,kBACPsN,EAAAA,EAAAA,IACE,aACApT,EAAOpG,OACPkD,EACAiW,EACAF,EANK,QAalB,ECjLD,GApBuB,SAAC,GAA0C,IAAxClb,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,UACrC,OACE,SAAC,EAAAC,SAAD,WACE,gBACEC,MAAOJ,GAAQ,OACfE,UAAWA,GAAa,GACxBG,OAAQL,GAAQ,OAChBM,QAAQ,YACRC,KAAK,OACLC,MAAM,6BANR,UAQE,iBACEC,EAAE,ooMACFF,KAAMN,GAAS,eAKxB,ECqLD,GAtK8C,SAAC,GAMzC,IALJqF,EAKI,EALJA,KACA1E,EAII,EAJJA,KACAE,EAGI,EAHJA,QACA6W,EAEI,EAFJA,KACAuD,EACI,EADJA,QAEQlX,EAAgBsB,EAAhBtB,YACFmB,EAAgB,CACpBlB,UAAW,GACXC,SAAU,GACVpB,SAAU,CACRC,MAAO,GACPI,IAAK,IAEPX,KAAM,GACNC,YAAa,IAGf,GAII8I,EAAAA,EAAAA,MAHF4N,EADF,EACEA,QACApR,EAFF,EAEEA,QACaiI,EAHf,EAGE/H,UAAa+H,OAGf,GAAmCmL,EAAAA,EAAAA,IAAc,CAC/ChC,QAAAA,EACA5U,KAAM,gBAFA8D,EAAR,EAAQA,OAAQ+S,EAAhB,EAAgBA,OAAQpS,EAAxB,EAAwBA,OAKxB,OACE,SAAC,EAAA7I,SAAD,WACE,UAAC,GAAD,CACE0W,QAASc,EACT/W,KAAMA,EACNuN,QAAS,kBACPkN,EAAAA,EAAAA,IACE,cACArX,EACAmB,EACAiW,EACAxa,EACAE,EACAoa,EARK,EAWTtX,MAAM,cACNgT,MAAM,SAAC,GAAD,CAAgB5W,KAAK,SAASC,MAAM,YAC1C2H,UAAWoI,EAAM,YACjB/N,OAAQ+B,EAAY/B,OAjBtB,UAmBGoG,EAAO+G,KAAI,SAACW,EAAMgG,GAAP,eACV,SAAC,EAAA5V,SAAD,WACE,UAAC,QAAD,CACEyD,MACEI,EAAY+R,GAAG9R,UACXD,EAAY+R,GAAG9R,UACf,gBAENxB,YACEuB,EAAY+R,GAAG9R,WACfD,EAAY+R,GAAGjT,SAASC,MACtB,IACAiB,EAAY+R,GAAGjT,SAASK,IAE5BwU,KAAMA,IAAS,eAAiB5B,EAChC8B,aAAc,kBAAMyD,EAAAA,EAAAA,IAA0BtS,EAAQ+M,EAAxC,EACd6B,WAAY,kBACV2D,EAAAA,EAAAA,IACE,cACAxF,EACAhO,EACA4P,EACAuD,EANQ,EASZtT,WACEoI,EAAM,cAAmBA,EAAM,YAAgB+F,IAxBnD,WA2BE,UAAC,GAAD,YACE,0BACE,SAACP,GAAA,EAAD,CACEjR,KAAI,sBAAiBwR,EAAjB,cACJ3T,MAAM,YACNlC,UAAU,MACVsb,cAAc,OAGlB,0BACE,SAAChG,GAAA,EAAD,CACEjR,KAAI,sBAAiBwR,EAAjB,aACJ3T,MAAM,WACNlC,UAAU,MACVsb,cAAc,OAGlB,iBAAKtb,UAAU,MAAf,WACE,mDACA,UAACsY,GAAD,YACE,0BACE,SAAC,GAAD,CAAYjU,KAAI,sBAAiBwR,EAAjB,wBAElB,0BACE,SAAC,GAAD,CAAYxR,KAAI,sBAAiBwR,EAAjB,wBAGnB/F,EAAOhM,aACPgM,EAAehM,YAAY+R,IAC3B/F,EAAehM,YAAY+R,GAAGjT,UAC9BkN,EAAehM,YAAY+R,GAAGjT,SAASoH,SACtC,SAAC,MAAD,CAAiBhK,UAAU,gBAA3B,mBACI8P,EAAehM,YAAY+R,GAAGjT,gBADlC,aACG,EAAyCoH,UAE1C,SAEN,0BACE,SAACsL,GAAA,EAAD,CACEjR,KAAI,sBAAiBwR,EAAjB,SACJ3T,MAAM,OACNlC,UAAU,MACVsb,cAAc,UAIpB,iBAAKtb,UAAU,OAAf,WACE,SAACwW,GAAA,EAAD,CACEnS,KAAI,sBAAiBwR,EAAjB,gBACJ2F,UAAU,QACVC,QAAS,CAAC,OAAQ,SAAU,YAAa,OAAQ,UACjDC,QAAS,CACPC,QAAS,CACP,CAAC,OAAQ,SAAU,aACnB,CAAC,CAAEC,KAAM,WAAa,CAAEA,KAAM,eAInC9L,EAAOhM,aACPgM,EAAehM,YAAY+R,IAC3B/F,EAAehM,YAAY+R,GAAGtT,aAC9BuN,EAAehM,YAAY+R,GAAGtT,YAAYyH,SACzC,SAAC,MAAD,CAAiBhK,UAAU,gBAA3B,mBACI8P,EAAehM,YAAY+R,GAAGtT,mBADlC,aACG,EAA4CyH,UAE7C,YA5FK6F,EAAKxK,GADV,KAkGZ,SAAC,UAAD,CACE3B,MAAO,yBACPuK,QAAS,kBACPsN,EAAAA,EAAAA,IACE,cACApT,EAAOpG,OACPkD,EACAiW,EACAF,EANK,QAalB,EC7KD,GAxBsB,SAAC,GAA0C,IAAxClb,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,UACpC,OACE,SAAC,EAAAC,SAAD,WACE,iBACEC,MAAOJ,GAAQ,OACfE,UAAWA,GAAa,GACxBG,OAAQL,GAAQ,OAChBM,QAAQ,YACRC,KAAK,OACLC,MAAM,6BANR,WAQE,iBACEC,EAAE,qsDACFF,KAAMN,GAAS,aAEjB,iBACEQ,EAAE,ipCACFF,KAAMN,GAAS,gBAKxB,ECqGD,GAnG6C,SAAC,GAMxC,IALJqF,EAKI,EALJA,KACA1E,EAII,EAJJA,KACAE,EAGI,EAHJA,QACA6W,EAEI,EAFJA,KACAuD,EACI,EADJA,QAEQ/W,EAAcmB,EAAdnB,UACFgB,EAAgB,CACpBf,SAAU,GACVC,MAAO,IAGT,GAIIkH,EAAAA,EAAAA,MAHF4N,EADF,EACEA,QACApR,EAFF,EAEEA,QACaiI,EAHf,EAGE/H,UAAa+H,OAGf,GAAmCmL,EAAAA,EAAAA,IAAc,CAC/ChC,QAAAA,EACA5U,KAAM,cAFA8D,EAAR,EAAQA,OAAQ+S,EAAhB,EAAgBA,OAAQpS,EAAxB,EAAwBA,OAKxB,OACE,SAAC,EAAA7I,SAAD,WACE,UAAC,GAAD,CACE0W,QAASc,EACT/W,KAAMA,EACNuN,QAAS,kBACPkN,EAAAA,EAAAA,IACE,YACAlX,EACAgB,EACAiW,EACAxa,EACAE,EACAoa,EARK,EAWTtX,MAAM,YACNgT,MAAM,SAAC,GAAD,CAAe5W,KAAK,SAASC,MAAM,YACzC2H,UAAWoI,EAAM,UACjB/N,OAAQkC,EAAUlC,OAjBpB,UAmBGoG,EAAO+G,KAAI,SAACW,EAAMgG,GAAP,OACV,SAAC,EAAA5V,SAAD,WACE,SAAC,QAAD,CACEyD,MACEO,EAAU4R,GAAG3R,SAAWD,EAAU4R,GAAGgG,SAAW,gBAElDtZ,YAAa0B,EAAU4R,GAAG3R,UAAYD,EAAU4R,GAAG1R,MACnDsT,KAAMA,IAAS,aAAe5B,EAC9B8B,aAAc,kBAAMyD,EAAAA,EAAAA,IAA0BtS,EAAQ+M,EAAxC,EACd6B,WAAY,kBACV2D,EAAAA,EAAAA,IAAyB,YAAaxF,EAAGhO,EAAS4P,EAAMuD,EAD9C,EAGZtT,WACEoI,EAAM,YAAiBA,EAAM,UAAc+F,IAX/C,UAcE,UAAC,GAAD,YACE,0BACE,SAACP,GAAA,EAAD,CACEjR,KAAI,oBAAewR,EAAf,aACJ3T,MAAM,WACNlC,UAAU,MACVsb,cAAc,OAGlB,0BACE,SAAChG,GAAA,EAAD,CACEjR,KAAI,oBAAewR,EAAf,UACJ3T,MAAM,QACNlC,UAAU,MACVsb,cAAc,YA7BTzL,EAAKxK,GADV,KAqCZ,SAAC,UAAD,CACE3B,MAAO,uBACPuK,QAAS,kBACPsN,EAAAA,EAAAA,IACE,YACApT,EAAOpG,OACPkD,EACAiW,EACAF,EANK,QAalB,E,eCrFD,SApCwB,SAAC,GAA0C,IAAxClb,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,UACtC,OACE,SAAC,EAAAC,SAAD,WACE,iBACEC,MAAOJ,GAAQ,OACfK,OAAQL,GAAQ,OAChBE,UAAWA,GAAa,GACxBI,QAAQ,YACRC,KAAK,OACLC,MAAM,6BANR,WAQE,iBACEC,EAAE,owBACFF,KAAMN,GAAS,UACf+b,YAAY,UAEd,iBACEvb,EAAE,ykDACFF,KAAMN,GAAS,UACf+b,YAAY,UAEd,iBACEvb,EAAE,oaACFF,KAAMN,GAAS,UACf+b,YAAY,UAEd,iBACEvb,EAAE,yZACFF,KAAMN,GAAS,UACf+b,YAAY,aAKrB,ECHD,GA/BsB,SAAC,GAA0C,IAAxChc,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,UACpC,OACE,SAAC,EAAAC,SAAD,WACE,iBACEC,MAAOJ,GAAQ,OACfE,UAAWA,GAAa,GACxBG,OAAQL,GAAQ,OAChBM,QAAQ,YACRC,KAAK,OACLC,MAAM,6BANR,WAQE,eAAGyb,SAAS,oBAAZ,WACE,iBACExb,EAAE,kpCACFF,KAAMN,GAAS,aAEjB,iBACEQ,EAAE,u8BACFF,KAAMN,GAAS,gBAGnB,2BACE,qBAAUsF,GAAG,cAAb,UACE,iBAAMnF,MAAM,UAAUC,OAAO,KAAKE,KAAMN,GAAS,oBAM5D,E,aCyCD,SApEqB,SAAC,GAMhB,IALJic,EAKI,EALJA,YACAC,EAII,EAJJA,eAKA,OACE,SAAC,EAAAhc,SAAD,WACE,UAAC,GAAD,YACE,UAAC,GAAD,YACE,SAAC,KAAD,CAAUH,KAAK,YACf,kDAEF,UAAC,GAAD,YACIkc,EAAYhZ,SAAS,aACrB,iBACEiL,QAAS,kBAAMgO,EAAe,GAAD,gBAAKD,GAAL,CAAkB,YAAtC,EACT,eAAa,cAFf,WAIE,2BACE,SAAC,GAAD,CAAiBlc,KAAK,cAExB,uCAIFkc,EAAYhZ,SAAS,iBACrB,iBACEiL,QAAS,kBAAMgO,EAAe,GAAD,gBAAKD,GAAL,CAAkB,gBAAtC,EACT,eAAa,kBAFf,WAIE,2BACE,SAAC,GAAD,CAAgBlc,KAAK,cAEvB,2CAIFkc,EAAYhZ,SAAS,eACrB,iBACEiL,QAAS,kBAAMgO,EAAe,GAAD,gBAAKD,GAAL,CAAkB,cAAtC,EACT,eAAa,gBAFf,WAIE,2BACE,SAAC,GAAD,CAAelc,KAAK,cAEtB,yCAIFkc,EAAYhZ,SAAS,gBACrB,iBACEiL,QAAS,kBAAMgO,EAAe,GAAD,gBAAKD,GAAL,CAAkB,eAAtC,EACT,eAAa,iBAFf,WAIE,2BACE,SAAC,GAAD,CAAelc,KAAK,cAEtB,gDAOb,EAID,IAAMe,GAAUC,GAAAA,GAAAA,IAAH,wSAaPuW,GAAUvW,GAAAA,GAAAA,IAAH,+MAcPkU,GAAOlU,GAAAA,GAAAA,IAAH,osBA6BO,qBAAGC,MAAkB0N,OAAO8B,OAA5B,IAIC,qBAAGxP,MAAkB0N,OAAO8B,OAA5B,ICelB,SAzH6C,SAAC,GAMxC,IALJnL,EAKI,EALJA,KACA1E,EAII,EAJJA,KACAE,EAGI,EAHJA,QACA6W,EAEI,EAFJA,KACAuD,EACI,EADJA,QAEQ5W,EAAegB,EAAfhB,WACFa,EAAgB,CACpBZ,KAAM,GACNhB,QAAS,GACTzB,aAAc,GACdH,cAAe,IAGjB,GAII4J,EAAAA,EAAAA,MAHF4N,EADF,EACEA,QACApR,EAFF,EAEEA,QACaiI,EAHf,EAGE/H,UAAa+H,OAGf,GAAmCmL,EAAAA,EAAAA,IAAc,CAC/ChC,QAAAA,EACA5U,KAAM,eAFA8D,EAAR,EAAQA,OAAQ+S,EAAhB,EAAgBA,OAAQpS,EAAxB,EAAwBA,OAKxB,OACE,SAAC,EAAA7I,SAAD,WACE,UAAC,GAAD,CACE0W,QAASc,EACT/W,KAAMA,EACNuN,QAAS,kBACPkN,EAAAA,EAAAA,IACE,aACA/W,EACAa,EACAiW,EACAxa,EACAE,EACAoa,EARK,EAWTtX,MAAM,aACNgT,MAAM,SAAC,GAAD,CAAe5W,KAAK,SAASC,MAAM,YACzC2H,UAAWoI,EAAM,WACjB/N,OAAQqC,EAAWrC,OAjBrB,UAmBGoG,EAAO+G,KAAI,SAACW,EAAMgG,GAAP,OACV,SAAC,EAAA5V,SAAD,WACE,SAAC,QAAD,CACEyD,MAAOU,EAAWyR,GAAGxR,KAAOD,EAAWyR,GAAGxR,KAAO,gBACjD9B,YAAa6B,EAAWyR,GAAGxR,MAAQD,EAAWyR,GAAGxS,QACjDoU,KAAMA,IAAS,cAAgB5B,EAC/B8B,aAAc,kBAAMyD,EAAAA,EAAAA,IAA0BtS,EAAQ+M,EAAxC,EACd6B,WAAY,kBACV2D,EAAAA,EAAAA,IACE,aACAxF,EACAhO,EACA4P,EACAuD,EANQ,EASZtT,WACEoI,EAAM,aAAkBA,EAAM,WAAe+F,IAfjD,UAkBE,UAAC,GAAD,YACE,0BACE,SAACP,GAAA,EAAD,CACEjR,KAAI,qBAAgBwR,EAAhB,SACJ3T,MAAM,uBACNlC,UAAU,MACVsb,cAAc,OAGlB,0BACE,SAAChG,GAAA,EAAD,CACEjR,KAAI,qBAAgBwR,EAAhB,YACJ3T,MAAM,UACNlC,UAAU,MACVsb,cAAc,OAGlB,0BACE,SAAChG,GAAA,EAAD,CACEjR,KAAI,qBAAgBwR,EAAhB,iBACJ3T,MAAM,QACNlC,UAAU,MACVsb,cAAc,OAGlB,0BACE,SAAChG,GAAA,EAAD,CACEjR,KAAI,qBAAgBwR,EAAhB,kBACJ3T,MAAM,QACNlC,UAAU,MACVsb,cAAc,YAjDTzL,EAAKxK,GADV,KAyDZ,SAAC,UAAD,CACE3B,MAAO,wBACPuK,QAAS,kBACPsN,EAAAA,EAAAA,IACE,aACApT,EAAOpG,OACPkD,EACAiW,EACAF,EANK,QAalB,EC5HD,GApBa,SAAC,GAA0C,IAAxClb,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,UAC3B,OACE,SAAC,EAAAC,SAAD,WACE,gBACEC,MAAOJ,GAAQ,OACfK,OAAQL,GAAQ,OAChBM,QAAQ,YACRC,KAAK,OACLC,MAAM,6BACNN,UAAWA,GAAa,GAN1B,UAQE,iBACEO,EAAE,qzBACFF,KAAMN,GAAS,eAKxB,E,+lBCoCD,SA9CI,SAAC,GAAuB,IAArBsE,EAAqB,EAArBA,KAASkU,GAAY,cAC1B,GAA0BpS,EAAAA,EAAAA,UAAS,GAAnC,eAAO+V,EAAP,KAAcC,EAAd,KAEQlD,GAAY5N,EAAAA,EAAAA,MAAZ4N,QAER,GAEIC,EAAAA,EAAAA,IAAc,CAChB7U,KAAAA,EACA4U,QAAAA,IAHAE,MAASC,EADX,EACWA,OAAQlF,EADnB,EACmBA,SAAUpS,EAD7B,EAC6BA,MAM7B,OACE,SAAC,EAAA7B,SAAD,WACE,UAACmc,GAAD,YACG,QAAIC,MAAM,IAAInN,KAAI,SAACoN,EAAMzG,GAExB,OADAA,GAAK,GAEH,SAAC0G,GAAD,CACE5S,KAAK,SAEL6S,QAAS3G,IAAMqG,GAASpa,GACxBmM,QAAS,kBAAMiG,EAAS2B,EAAf,EACT4G,aAAc,kBAAMN,EAAStG,EAAf,EACd6G,aAAc,kBAAMP,EAASra,EAAf,EANhB,UAQE,SAAC,GAAD,CAAMhC,KAAK,YANN+V,EASV,KACD,qBACExR,KAAMA,EACNvC,MAAOA,EACPoS,SAAUA,EACVkF,OAAQA,EACRuD,QAAM,EACNhT,KAAK,SACLpI,IAAK,EACLD,IAAK,GACDiX,QAKb,EAID,IAAM6D,GAAgBtb,GAAAA,GAAAA,IAAH,kHAObyb,GAAazb,GAAAA,GAAAA,OAAH,+KAQR,gBAAG0b,EAAH,EAAGA,QAASzb,EAAZ,EAAYA,MAAZ,OAAwByb,GAAW,SAAJ,OAAazb,EAAM0N,OAAO8B,QAAzD,IC5CR,SA5BiB,SAAC,GAA0C,IAAxCzQ,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,UAC/B,OACE,SAAC,EAAAC,SAAD,WACE,iBACEC,MAAOJ,GAAQ,OACfE,UAAWA,GAAa,GACxBG,OAAQL,GAAQ,OAChBM,QAAQ,YACRC,KAAK,OACLC,MAAM,6BANR,WAQE,iBACEC,EAAE,gDACFF,KAAMN,GAAS,aAEjB,iBACEQ,EAAE,kDACFF,KAAMN,GAAS,aAEjB,iBACEQ,EAAE,+iCACFF,KAAMN,GAAS,gBAKxB,E,OCAK6c,GAAa,SAAC,GAA+B,IAA7BC,EAA6B,EAA7BA,KACpB,OACE,SAAC,EAAA5c,SAAD,WACG,QAAIoc,MAAM,IAAInN,KAAI,SAACoN,EAAMzG,GAAP,OACjB,iBAAclR,MAAO,CAAE4S,YAAa,UAApC,UACE,SAAC,GAAD,CACExX,MAAO8V,EAAI,GAAKgH,EAAO,qBAAuB,UAC9C/c,KAAK,cAHE+V,EADM,KAUxB,EAwGD,SAtG8C,SAAC,GAMzC,IALJzQ,EAKI,EALJA,KACA1E,EAII,EAJJA,KACAE,EAGI,EAHJA,QACA6W,EAEI,EAFJA,KACAuD,EACI,EADJA,QAEQvX,EAAW2B,EAAX3B,OAEFwB,EAAgB,CACpBvB,MAAO,GACPC,OAAQ,GAGV,GAII0H,EAAAA,EAAAA,MAHF4N,EADF,EACEA,QACApR,EAFF,EAEEA,QACaiI,EAHf,EAGE/H,UAAa+H,OAGf,GAAmCmL,EAAAA,EAAAA,IAAc,CAC/ChC,QAAAA,EACA5U,KAAM,WAFA8D,EAAR,EAAQA,OAAQ+S,EAAhB,EAAgBA,OAAQpS,EAAxB,EAAwBA,OAKxB,OACE,SAAC,EAAA7I,SAAD,WACE,UAAC,GAAD,CACE0W,QAASc,EACT/W,KAAMA,EACNuN,QAAS,kBACPkN,EAAAA,EAAAA,IACE,SACA1X,EACAwB,EACAiW,EACAxa,EACAE,EACAoa,EARK,EAWTtX,MAAM,SACNgT,MAAM,SAAC,GAAD,CAAU5W,KAAK,OAAOC,MAAM,YAClC2H,UAAWoI,EAAM,OACjB/N,OAAQ0B,EAAO1B,OAjBjB,UAmBGoG,EAAO+G,KAAI,SAACW,EAAMgG,GAAP,OACV,SAAC,EAAA5V,SAAD,WACE,SAAC,QAAD,CACEyD,MAAOD,EAAOoS,GAAGnS,MAAQD,EAAOoS,GAAGnS,MAAQ,kBAC3CnB,YACEkB,EAAOoS,GAAGnS,QAAS,SAACkZ,GAAD,CAAYC,KAAMpZ,EAAOoS,GAAGlS,SAEjD8T,KAAMA,IAAS,UAAY5B,EAC3B8B,aAAc,kBAAMyD,EAAAA,EAAAA,IAA0BtS,EAAQ+M,EAAxC,EACd6B,WAAY,kBACV2D,EAAAA,EAAAA,IACE,aACAxF,EACAhO,EACA4P,EACAuD,EANQ,EASZtT,WAASoI,EAAM,SAAcA,EAAM,OAAW+F,IAhBhD,UAkBE,UAAC,GAAD,YACE,0BACE,SAACP,GAAA,EAAD,CACEjR,KAAI,iBAAYwR,EAAZ,UACJ3T,MAAM,QACNlC,UAAU,MACVsb,cAAc,OAGlB,iBAAKtb,UAAU,MAAf,WACE,qCACA,SAAC,GAAD,WACE,SAAC,GAAD,CAAQqE,KAAI,iBAAYwR,EAAZ,wBA/BPhG,EAAKxK,GADV,KAuCZ,SAAC,UAAD,CACE3B,MAAO,YACPuK,QAAS,kBACPsN,EAAAA,EAAAA,IACE,SACApT,EAAOpG,OACPkD,EACAiW,EACAF,EANK,QAalB,EAID,IAAMoB,GAAgBtb,GAAAA,GAAAA,IAAH,sFCfnB,SA5Hc,WACZ,OAA0CqF,EAAAA,EAAAA,UAAwB,MAAlE,eAAO2W,EAAP,KAAsBC,EAAtB,KACA,GAAkD5W,EAAAA,EAAAA,UAChD,MADF,eAAO6W,EAAP,KAA0BC,EAA1B,KAGA,GAAsC9W,EAAAA,EAAAA,UAAwB,IAA9D,eAAO6V,EAAP,KAAoBC,EAApB,KAEQ7W,EAASgF,KAAThF,KAGOkG,GACXD,EAAAA,EAAAA,MADFtD,UAAauD,cAGfpD,EAAAA,EAAAA,YAAU,WACJoD,GACF2R,EAAqB,KAExB,GAAE,CAAC3R,KAEJpD,EAAAA,EAAAA,YAAU,WACR,IAAMgV,EAAe,GAEM,IAAvBlB,EAAYja,QACdqD,EAAKxB,QAAQ7B,OAAS,GAAKmb,EAAahP,KAAK,WAE7C9I,EAAKtB,YAAY/B,OAAS,GAAKmb,EAAahP,KAAK,eAEjD9I,EAAKnB,UAAUlC,OAAS,GAAKmb,EAAahP,KAAK,aAE/C9I,EAAKhB,WAAWrC,OAAS,GAAKmb,EAAahP,KAAK,eAEhD8N,EAAY9M,KAAI,SAACiK,GACb/T,EAAa+T,GAAOpX,OAAS,GAAKmb,EAAahP,KAAKiL,EAAMe,WAC7D,IAEH+B,EAAeiB,EAChB,GAAE,CAAC9X,EAAKxB,QAASwB,EAAKtB,YAAasB,EAAKnB,UAAWmB,EAAKhB,aAEzD,IAAM+D,EAAc,CAClBvE,SACE,SAAC,GAAD,CACEwB,KAAMA,EACN1E,KAAwB,YAAlBoc,EACNlc,QAASmc,EACTtF,KAAMuF,EACNhC,QAASiC,IAIbnZ,aACE,SAAC,GAAD,CACEsB,KAAMA,EACN1E,KAAwB,gBAAlBoc,EACNlc,QAASmc,EACTtF,KAAMuF,EACNhC,QAASiC,IAIbhZ,WACE,SAAC,GAAD,CACEmB,KAAMA,EACN1E,KAAwB,cAAlBoc,EACNlc,QAASmc,EACTtF,KAAMuF,EACNhC,QAASiC,IAGb7Y,YACE,SAAC,GAAD,CACEgB,KAAMA,EACN1E,KAAwB,eAAlBoc,EACNlc,QAASmc,EACTtF,KAAMuF,EACNhC,QAASiC,KAKf,OACE,SAAC,EAAAhd,SAAD,WACE,iBAAKD,UAAU,OAAf,WACE,4CACA,cAAGA,UAAU,OAAO2E,MAAO,CAAE2R,SAAU,SAAvC,sJAIA,SAAC,GAAD,CACElR,KAAMA,EACN1E,KAAwB,eAAlBoc,EACNlc,QAASmc,EACTtF,KAAMuF,EACNhC,QAASiC,KAGX,SAAC,GAAD,CACE7X,KAAMA,EACN1E,KAAwB,cAAlBoc,EACNlc,QAASmc,EACTtF,KAAMuF,EACNhC,QAASiC,KAEX,SAAC,GAAD,CACE7X,KAAMA,EACN1E,KAAwB,WAAlBoc,EACNlc,QAASmc,EACTtF,KAAMuF,EACNhC,QAASiC,IAEVjB,EAAY9M,KAAI,SAACiK,EAAYtD,GAAb,OACf,yBAAc1N,EAAOgR,IAAXtD,EADK,IAIO,IAAvBmG,EAAYja,SACX,SAAC,GAAD,CACEia,YAAaA,EACbC,eAAgBA,QAM3B,E,gBCnBD,SA9FwC,SAAC,GAA2B,IAAzBxW,EAAyB,EAAzBA,KAAMG,EAAmB,EAAnBA,QAAStE,EAAU,EAAVA,IACxD,GAA4B6E,EAAAA,EAAAA,WAAS,GAArC,eAAOgX,EAAP,KAAeC,EAAf,KAEMC,GADYnS,EAAAA,GAAAA,KAAVhL,MACgB,KAAO,KAAO,KACtC,GAEImL,EAAAA,EAAAA,MADFtD,UAAauD,EADf,EACeA,aAAcrD,EAD7B,EAC6BA,QAASD,EADtC,EACsCA,QAEtC,EAAwCoC,KAAhCtE,EAAR,EAAQA,aAAcJ,EAAtB,EAAsBA,cAChB4X,EAAU,mCAAG,qFACjB7X,EAAOnE,GAAOsE,GAAQ,SAAC8U,GAAD,OAAkBA,EAAO,CAAzB,IADL,kBAEV0C,GAAU,IAFA,2CAAH,qDAqBhB,OAbAlV,EAAAA,EAAAA,YAAU,WACR,IAAMwE,EAAQC,YAAW,WACnBwQ,IACElV,GACFnC,EAAa,KAAe,IAATL,GAErB2X,GAAU,GAEb,GAAE,KAEH,OAAO,kBAAM9P,aAAaZ,EAAnB,CACR,GAAE,CAACyQ,KAGF,SAAC,EAAAld,SAAD,WACE,UAAC,GAAD,WACY,IAATwF,GACC,SAAC,GAAD,IACW,IAATA,GACF,SAAC,GAAD,IACW,IAATA,GACF,SAAC,GAAD,IACE,MAEJ,UAAC,MAAD,YACE,SAAC,KAAD,CACEkE,KAAK,SACLoE,QAAQ,QACRjO,KAAMud,EACNtd,MAAM,UACNkO,QAAS,kBAjCVxI,EAAO,GAAKG,GAAQ,SAAC8U,GAAD,OAAkBA,EAAO,CAAzB,GAiCV,EACT/V,MAAO,CAAE4S,YAAa,QANxB,SAQY,IAAT9R,EAAa,SAAW,cAE3B,SAAC,KAAD,CACEkE,KAAK,SACLoE,QAAQ,UACRjO,KAAMud,EACNpP,QAAS,kBAAMqP,GAAN,EACTnP,UACG7C,IAAiBtD,IAAYC,GAAWkV,IAAoB,IAAT1X,EANxD,SASY,IAATA,EAAa,eAAiB,aAGnC,SAAC8X,GAAA,EAAD,CACEC,GAAIlS,GAAgBtD,EACpByV,QAAS,CACPC,MAAO,IACPC,KAAM,KAJV,UAOE,SAAC,GAAD,UACGrS,GACC,UAAC,EAAArL,SAAD,YACE,SAAC,MAAD,CAAS0J,KAAK,UAAU7J,KAAK,YAC7B,SAAC8d,GAAD,CAAa7d,MAAM,UAAnB,uBAEA2F,GACF,UAAC,EAAAzF,SAAD,YACE,SAAC,KAAD,CAAYH,KAAK,SAASC,MAAM,aAChC,cAAG4E,MAAO,CAAE5E,MAAO,UAAW8d,OAAQ,YAAtC,uBAGF,UAAC,EAAA5d,SAAD,YACE,SAAC,KAAD,CAAaH,KAAK,SAASC,MAAM,aACjC,cAAG4E,MAAO,CAAE5E,MAAO,UAAW8d,OAAQ,YAAtC,+BAQf,EAID,I,SAAMhd,GAAUC,GAAAA,GAAAA,IAAH,sFAMPuS,GAASvS,GAAAA,GAAAA,IAAH,wkBAsDN8c,GAAc9c,GAAAA,GAAAA,EAAH,6MAGN,gBAAGC,EAAH,EAAGA,MAAH,SAAUhB,OAA6BgB,EAAM0N,OAAOxN,IAApD,IAIM,gBAAGF,EAAH,EAAGA,MAAH,OA9BJ,SAAChB,GAAD,OAAmB+d,EAAAA,GAAAA,IAAlB,SAAD,kaAOA/d,EAMKA,EAIAA,EACDA,EAlBJ,CA8B0Bge,CAAtB,EAAUhe,OAAiCgB,EAAM0N,OAAOxN,KAAxD,I,gCC9DjB,SA/GsB,SAAC,GAA0C,IAAxCuG,EAAwC,EAAxCA,UACvB,EAAgC4C,KAAxBhF,EAAR,EAAQA,KAAMK,EAAd,EAAcA,KAAMG,EAApB,EAAoBA,QACpB,GAA8CoY,EAAAA,GAAAA,IAAc,GAApDC,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,kBAExB,GAEI7S,EAAAA,EAAAA,MADFtD,UAAa+H,EADf,EACeA,OAAQ7H,EADvB,EACuBA,QAASD,EADhC,EACgCA,QAASsD,EADzC,EACyCA,aAGnC6S,KACJrO,EAAO3O,YACP2O,EAAOtO,WACPsO,EAAOlO,cACPkO,EAAOrO,eACPqO,EAAO7N,SACP6N,EAAO9N,aAIHoc,IAAetO,EAAO3N,WAEtBkc,KACJvO,EAAO5M,YACP4M,EAAOxM,WACPwM,EAAOrM,QACPqM,EAAOlM,SACPkM,EAAOhM,aACPgM,EAAO7L,WACP6L,EAAO1L,YAIHka,MACJlZ,EAAKjE,YAAciE,EAAK5D,WAAa4D,EAAK3D,gBAAkB0c,GAIxDI,GAAgBH,EAEhBI,MACHpZ,EAAKlC,YACJkC,EAAK9B,WACL8B,EAAK3B,QACL2B,EAAKxB,SACLwB,EAAKtB,aACLsB,EAAKnB,WACLmB,EAAKhB,aACNia,IAIHnW,EAAAA,EAAAA,YAAU,WACR,OAAO,kBAAMgW,GAAkB,EAAxB,CACR,GAAE,KAEHhW,EAAAA,EAAAA,YAAU,WAENgW,KADEjW,GAAYD,IAAWsD,GAK5B,GAAE,CAACrD,EAASqD,EAActD,IAE3B,IAAMyW,EAAQrZ,GAAQA,EAAKC,GAAK,CAAC,oBAAD,OAAqBD,EAAKC,KAAQ,GAElE,OACE,UAAC,EAAApF,SAAD,YACE,SAAC,KAAD,CACES,KAAMud,EACNrd,QAASsd,EACTQ,aAAcD,KAEhB,UAAC,GAAD,YACE,UAAC,KAAD,CAAend,IAAK,EAAGoK,QAASjG,EAAMkZ,UAAU,WAAhD,WACE,SAAC,UAAD,CACEta,KAAK,gBACL2D,QAASsW,EACT5W,QAASyW,EACTlQ,QAAS,kBAAMrI,EAAQ,EAAd,KAEX,SAAC,UAAD,CACEvB,KAAK,yBACL2D,QAASuW,EACT7W,QAAS0W,EACTnQ,QAAS,kBAAMrI,EAAQ,EAAd,KAEX,SAAC,UAAD,CACEvB,KAAK,yBACL2D,QAASwW,EACT9W,QAAS2W,EACTpQ,QAAS,kBAAMrI,EAAQ,EAAd,QAIb,kBAAMP,GAAG,aAAaV,MAAO,CAAEwS,SAAU,UAAzC,WACE,SAACyH,GAAD,UACGpX,IAAcpC,GACb,SAAC,KAAD,KAEA,SAAC,GAAD,CAAeK,KAAMA,EAAMG,QAASA,EAAStE,IAAK,OAItD,SAACud,GAAD,WACE,SAAC,GAAD,CAAWxU,cAAe7C,cAMrC,EAID,I,oCAAM3G,GAAUC,GAAAA,GAAAA,IAAH,0IAQP8d,GAAM9d,GAAAA,GAAAA,IAAH,6MAWH+d,GAAM/d,GAAAA,GAAAA,IAAH,kX,WCqIT,SApQuB,SAAC,GAA0C,IAAxC0G,EAAwC,EAAxCA,UACxB,GAAwCrB,EAAAA,EAAAA,WAAS,GAAjD,eAAO2E,EAAP,KAAqBC,EAArB,KACA,GAAkD5E,EAAAA,EAAAA,WAAS,GAA3D,eAAO2Y,EAAP,KAA0BC,EAA1B,KACA,GAA0B5Y,EAAAA,EAAAA,UAAS,GAAnC,eAAOqE,EAAP,KAAcC,EAAd,KACA,GAA4BtE,EAAAA,EAAAA,UAAS,GAArC,eAAOyE,EAAP,KAAeC,EAAf,KACA,GAAwB1E,EAAAA,EAAAA,UAAS,GAAjC,eAAOuE,EAAP,KAAaC,EAAb,KAEA,EAQIP,KAPFhF,EADF,EACEA,KACAE,EAFF,EAEEA,gBACAE,EAHF,EAGEA,SACAD,EAJF,EAIEA,aACAM,EALF,EAKEA,YACAC,EANF,EAMEA,aACAH,EAPF,EAOEA,SAGF,GAA0BuF,EAAAA,GAAAA,KAAlBhL,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAETgL,GAAUC,EAAAA,EAAAA,MAChB,GAII4T,EAAAA,EAAAA,MAHIC,EADR,EACE7Z,KACWmC,EAFb,EAEEC,UACAE,EAHF,EAGEA,QAGI4C,GAAMC,EAAAA,EAAAA,QAAuB,MAGpBvC,GACXqD,EAAAA,EAAAA,MADFtD,UAAaC,QAGTnD,EACJ3E,GAAS,KACL,KACAA,GAAS,KACA,IAARA,EAAe,KACP,KAARA,EAAgB,MAEvBgI,EAAAA,EAAAA,YAAU,WACR,GAAKoC,GAAQA,EAAIoB,SAAYnG,EAA7B,CACA,IAAMqH,EAAOtC,EAAIoB,QAAQ/K,SAAS,GAClCiM,EAAKjI,MAAMkH,UAAX,gBAAgChH,EAAhC,KACAyF,EAAIoB,QAAQ/G,MAAMzE,MAAQ0M,EAAKd,wBAAwB5L,MAAQ,KAC/DoK,EAAIoB,QAAQ/G,MAAMxE,OAASyM,EAAKd,wBAAwB3L,OAAS,KACjE,IAAM4L,EAASa,EAAKZ,aAAenH,EAAQ,GAAM,EAC3CoH,EAASW,EAAKV,cAAgBrH,EAAQ,GAAM,EAClD+H,EAAKjI,MAAMkH,UAAX,sBAAsCE,EAAtC,eAAkDE,EAAlD,0BAAyEpH,EAAzE,KACA,IAAMsH,EAAgBxD,SAASK,cAAc,OAC7CmD,EAAcxH,MAAMxE,OAAS,OAC7BgM,EAAcxH,MAAMkH,UAApB,gBAAyChH,EAAzC,KACAsH,EAAcxH,MAAMyH,WAAa,SACjCD,EAAcxH,MAAM0H,SAAW,WAC/BF,EAAcxH,MAAM2H,QAAU,IAC9B3D,SAAS4D,KAAKnD,YAAY+C,GAC1B,IAAMK,EAAeL,EAAcL,wBAAwB3L,OAC3D0K,EAAU2B,GACV7D,SAAS4D,KAAKE,YAAYN,EAjBuB,CAkBlD,GAAE,CAAC/G,EAAMkF,EAAK/E,EAAc0Z,EAAW/e,EAAOC,KAE/C+H,EAAAA,EAAAA,YAAU,WACR,GACG9C,GACA6Z,IACDtZ,IACA4B,GACCjC,GACU,IAAXsF,EANF,CASAmU,GAAqB,GACrB,IAAMrS,EAAQC,YAAW,WACvB,GAAKrC,GAAQA,EAAIoB,QAAjB,CACA,IAAMwT,EAAYvW,SAASiD,cAAc,gBACzCsT,GAAaA,EAAUC,SAAS,EAAG,GACnC,IAAMvS,EAAOtC,EAAIoB,QAAQE,cAAc,SACvC,GAAKgB,EAAL,CACA,IAAMC,EAAUD,EAAKjM,SAAS,GAE9B,GAAKkM,EAAL,CACA,IAAMrH,EAAWsH,KAAKC,MAAMD,KAAKE,UAAUzH,IAC3CsH,EAAQI,UAAY,GACpB,IAAMzC,GAAQ0C,EAAAA,GAAAA,GAAe1H,EAAUJ,EAAMyH,EAASjC,GACjDJ,IACL2C,EAAYC,OAAOC,KAAK7C,GAAOzI,QAC/B4I,EAAQ,GACRoU,GAAqB,GAPD,CAHH,CAJe,CAejC,GAAE,KACH,OAAO,kBAAMzR,aAAaZ,EAAnB,CAnBC,CAoBT,GAAE,CACDtH,EACAkF,EAAIoB,QACJnE,EACA0X,EACAtZ,EACAL,EACAsF,KAGF1C,EAAAA,EAAAA,YAAU,WACR,GAAKoC,GAAQA,EAAIoB,QAAjB,CACA,IAAMkB,EAAOtC,EAAIoB,QAAQE,cAAc,SACvC,GAAKgB,EAAL,CACA,IAAMC,EAAUD,EAAKjM,SAAS,GACzBkM,IACLA,EAAQlI,MAAMkH,UAAd,sBAAyCe,EAAKV,cAAgBxB,EAAO,GAArE,OACAmC,EAAQlI,MAAMxE,OAASyM,EAAKV,aAAexB,EAAO,KAJjC,CAFe,CAOjC,GAAE,CAACA,EAAMJ,EAAIoB,WAEdxD,EAAAA,EAAAA,YAAU,WACJvC,GAAUoF,GAAgB,EAE/B,GAAE,CAACpF,IAEJ,IAAMwH,EAAc,SAACI,GACnB7C,EAAO6C,GAAS5C,EAAQ4C,GACxB9C,EAAS8C,EACV,EAEKC,EAAc,SAAC7D,GACN,SAATA,GAAiBe,EAAO,GAAKA,GAAQF,GAASG,EAAQD,EAAO,GACpD,SAATf,GAAiBe,GAAQ,GAAKA,EAAOF,GAASG,EAAQD,EAAO,EAElE,EAED,OACE,UAAC,EAAAzK,SAAD,YACE,UAACmf,GAAD,YACE,SAAC,KAAD,CACErR,QAAQ,QACRjO,KAAK,KACLmO,QAAS,kBAAM9C,EAAQ+C,KAAR,wBAA8B9I,EAAKC,IAAzC,EAHX,6BAOA,0BACIqC,IAAYH,IACZ,UAAC,GAAD,CACE+G,SAAS,SACTC,WAAW,OACX7N,KAAMoK,EACNlK,QAASmK,EACToD,SAAUxI,IAAaqC,EALzB,WAOE,SAACwG,GAAA,SAAD,WACE,SAAC,EAAAvO,SAAD,UACI0F,GAKA,UAAC,EAAA1F,SAAD,2BACc,SAAC,MAAD,CAASH,KAAK,aAL5B,UAAC,EAAAG,SAAD,wBACW,SAAC,KAAD,YASjB,SAACuO,GAAA,OAAD,WACE,cAAGP,QAAS,kBAAMnI,EAAa,MAAnB,EAAZ,6BAGF,SAAC0I,GAAA,OAAD,WACE,cAAGP,QAAS,kBAAMnI,EAAa,OAAnB,EAAZ,+BAGF,SAAC0I,GAAA,OAAD,WACE,cAAGP,QAAS,kBAAMnI,EAAa,MAAnB,EAAZ,qCAMT4B,GACC,gBAAK1H,UAAU,eAAe2E,MAAO,CAAExE,OAAQ,QAA/C,UACE,sDAGF,UAAC,GAAD,YACE,SAAC,GAAD,WACE,SAACkf,GAAD,UACGJ,GACEA,EAAkB/P,KAAI,SAACW,EAAWgG,GAAZ,OACrB,UAACyJ,GAAD,CAEExL,OAAQtO,IAAaqK,EAAKxL,KAC1B,eACEmB,IAAaqK,EAAKxL,KACd,kBACA,oBANR,WASE,gBACE4J,QAAS,kBAAOtI,GAAYE,EAAYgK,EAAKxL,KAApC,EACT,eAAa,kBAFf,UAIE,gBAAK8Q,IAAKtF,EAAK0P,UAAWC,IAAI,QAEhC,uBAAI3P,EAAKxL,SAdJwR,EAFc,SAqB7B,SAAC,GAAD,WACE,UAAC4J,GAAD,CAAYzf,UAAU,cAAtB,WACE,UAAC,GAAD,YACE,mBACE2J,KAAK,SACLhF,MAAO,CAAEkH,UAAW,kBACpBoC,QAAS,kBAAMT,EAAY,OAAlB,EAHX,UAKE,SAAC,KAAD,CAAe1N,KAAK,UAAUC,MAAM,YAEtC,yBACG2K,EADH,MACsBF,MAEtB,mBACEb,KAAK,SACLhF,MAAO,CAAEkH,UAAW,mBACpBoC,QAAS,kBAAMT,EAAY,OAAlB,EAHX,UAKE,SAAC,KAAD,CAAe1N,KAAK,UAAUC,MAAM,eAIxC,UAAC,GAAD,aACKuF,GACDkC,IACCpC,GACD0Z,GACAvX,KACA,SAAC,GAAD,CAAiB,eAAa,kBAA9B,UACE,SAAC,KAAD,CAAiB1C,MAAOA,OAI5B,SAAC,GAAD,CACEyF,IAAKA,EACL3F,OACGW,GACDkC,IACCpC,GACD0Z,GACAvX,EACI,CAAE6E,WAAY,UACd,CAAEA,WAAY,WATtB,UAYE,gBAAKpM,UAAU,OAAf,UACE,gBAAK2E,MAAO,CAAEzE,MAAO,2BAUxC,EAID,I,GAAMW,GAAUC,GAAAA,GAAAA,IAAH,wNAUP2M,GAAkB3M,GAAAA,GAAAA,IAAH,iEAKf8d,GAAM9d,GAAAA,GAAAA,IAAH,mLAUH+d,GAAM/d,GAAAA,GAAAA,IAAH,iJAOH2e,GAAa3e,GAAAA,GAAAA,IAAH,2KASVsN,GAActN,GAAAA,GAAAA,IAAH,ycAaK,qBAAGC,MAAkB0N,OAAO8B,OAA5B,IAehB6O,GAActe,GAAAA,GAAAA,IAAH,gPAYXue,GAAeve,GAAAA,GAAAA,IAAH,qPAWZwe,GAAWxe,GAAAA,GAAAA,IAAH,2qBAYO,qBAAGgT,OAAuB,MAAQ,KAAlC,IACA,gBAAG/S,EAAH,EAAGA,MAAH,SAAU+S,QAAuB/S,EAAMC,OAAOuP,QAAQ,EAAtD,IAOR,gBAAGxP,EAAH,EAAGA,MAAH,SAAU+S,QAAuB/S,EAAM0N,OAAO8B,OAA9C,IASU,qBAAGxP,MAAkBC,OAAOuP,QAAQ,EAApC,IAGR,qBAAGxP,MAAkB0N,OAAO8B,OAA5B,IAKTlC,IAAcvN,EAAAA,GAAAA,IAAO0N,GAAAA,EAAP1N,CAAH,0WAgBS,qBAAGC,MAAkB0N,OAAOC,IAA5B,IAIpBf,GAAiB7M,GAAAA,GAAAA,IAAH,oJAQd8M,GAAkB9M,GAAAA,GAAAA,IAAH,wL,WCrYrB,SAtCkB,SAAC,GAA+C,IAA7CoF,EAA6C,EAA7CA,aACnB,GAA0BC,EAAAA,EAAAA,WAAS,GAAnC,eAAOuZ,EAAP,KAAcC,EAAd,KACMC,GAAUxU,EAAAA,EAAAA,MAEVtE,GAAcC,EAAAA,EAAAA,kBAEd8Y,EAAS,mCAAG,+FAChBF,GAAS,GADO,UAEcG,EAAAA,GAAAA,IAAU5Z,GAFxB,gBAERd,EAFQ,EAERA,KAAMsa,EAFE,EAEFA,MACVta,IACF0B,EAAYiZ,aAAa,CAAC,SAAU3a,EAAK8E,KAAM9E,GAC/Cwa,EAAQvd,QAAR,wBAAiC+C,EAAK8E,OAEpCwV,GAAOC,GAAS,GAPJ,2CAAH,qDAcf,OAJAzX,EAAAA,EAAAA,YAAU,WACR2X,GACD,GAAE,KAGD,SAAC,EAAA5f,SAAD,WACE,gBAAKD,UAAU,oBAAf,SACG0f,GACC,UAACM,GAAD,YACE,sDACA,SAAC,KAAD,CAAQjS,QAAQ,UAAUjO,KAAK,KAAKmO,QAAS,kBAAM4R,GAAN,EAA7C,2BAKF,SAAC,MAAD,CAAS/f,KAAK,SAAS6J,KAAK,eAKrC,EAID,IAAMqW,GAAalf,GAAAA,GAAAA,IAAH,4HCWhB,SAhDqB,WACnB,OAAqBmf,EAAAA,EAAAA,MAAb5a,EAAR,EAAQA,GAAIsE,EAAZ,EAAYA,KACJzJ,GAAUgL,EAAAA,GAAAA,KAAVhL,MACF0f,GAAUxU,EAAAA,EAAAA,MAEhB,OACE,SAAC,EAAAnL,SAAD,UACGC,EAAQ,KAAiB,IAAVA,GACd,iBACEyE,MAAO,CACLub,QAAS,OACTC,WAAY,SACZnS,eAAgB,SAChBoS,cAAe,SACfjgB,OAAQ,OANZ,WASE,eAAIwE,MAAO,CAAE0b,UAAW,UAAxB,kEAGA,SAAC,KAAD,CACEtS,QAAQ,UACRjO,KAAK,KACL6E,MAAO,CACLzE,MAAO,cACPogB,QAAS,SACT5S,UAAW,QAEbO,QAAS,kBAAM2R,EAAQ1R,KAAK,IAAnB,EARX,kCAaAhO,GAAS,KACX,SAAC,EAAAD,SAAD,UACY,QAAT0J,GACC,SAAC,GAAD,CAAWzD,aAAcb,KACgB,IAAvC,CAAC,OAAQ,WAAWkb,QAAQ5W,IAC9B,SAAC6W,GAAD,CAAW7W,KAAMA,EAAMtE,GAAIA,EAAInF,MAAOA,KAEtC,SAAC,WAAD,MAGF,MAGT,EAID,IAAMsgB,GAAY,SAAC,GAQb,IAPJ7W,EAOI,EAPJA,KACAtE,EAMI,EANJA,GACAnF,EAKI,EALJA,MAMA,GAISugB,EAAAA,EAAAA,IAAUpb,EAAInF,EAAQ,KAHvB+F,EADR,EACEb,KACAsC,EAFF,EAEEA,QACAF,EAHF,EAGEA,UAGF,OACE,SAAC,EAAAvH,SAAD,UACGyH,GACC,gBAAK1H,UAAU,eAAe2E,MAAO,CAAExE,OAAQ,QAA/C,UACE,sDAGF,SAAC,EAAD,CAAgB8F,YAAaA,EAAaC,aAAc,YAAxD,SACY,YAATyD,GACC,SAAC,GAAD,CAAgBnC,UAAWA,IAChB,SAATmC,GACF,SAAC,GAAD,CAAenC,UAAWA,IACxB,QAKb,C","sources":["webpack://user-dashboard/./src/components/svgs/dustbin.tsx","webpack://user-dashboard/./src/components/svgs/pen.tsx","webpack://user-dashboard/./src/components/svgs/plus.tsx","webpack://user-dashboard/./src/components/svgs/searchIcon.tsx","webpack://user-dashboard/./src/components/ui/modal.tsx","webpack://user-dashboard/./src/validations/resume.ts","webpack://user-dashboard/./src/contexts/resume.tsx","webpack://user-dashboard/./src/pages/resumes/preview.tsx","webpack://user-dashboard/./src/components/svgs/person.tsx","webpack://user-dashboard/./src/components/ui/dropzone.tsx","webpack://user-dashboard/./src/components/svgs/justCheckIcon.tsx","webpack://user-dashboard/./src/components/svgs/upload.tsx","webpack://user-dashboard/./src/components/ui/imageUploader.tsx","webpack://user-dashboard/./src/pages/resumes/builder/Step1.tsx","webpack://user-dashboard/./src/components/ui/searchDropdown.tsx","webpack://user-dashboard/./src/pages/resumes/builder/step2.tsx","webpack://user-dashboard/./src/components/accordian/formAccordian.tsx","webpack://user-dashboard/./src/pages/resumes/builder/styled.tsx","webpack://user-dashboard/./src/components/form/datePicker.tsx","webpack://user-dashboard/./src/pages/resumes/builder/step3/courses.tsx","webpack://user-dashboard/./src/pages/resumes/builder/step3/education.tsx","webpack://user-dashboard/./src/pages/resumes/builder/step3/experience.tsx","webpack://user-dashboard/./src/components/svgs/internship.tsx","webpack://user-dashboard/./src/pages/resumes/builder/step3/internships.tsx","webpack://user-dashboard/./src/components/svgs/language.tsx","webpack://user-dashboard/./src/pages/resumes/builder/step3/languages.tsx","webpack://user-dashboard/./src/components/svgs/certificate.tsx","webpack://user-dashboard/./src/components/svgs/reference.tsx","webpack://user-dashboard/./src/pages/resumes/builder/step3/otherSection.tsx","webpack://user-dashboard/./src/pages/resumes/builder/step3/refrences.tsx","webpack://user-dashboard/./src/components/svgs/star.tsx","webpack://user-dashboard/./src/components/form/rating.tsx","webpack://user-dashboard/./src/components/svgs/bulbIcon.tsx","webpack://user-dashboard/./src/pages/resumes/builder/step3/skills.tsx","webpack://user-dashboard/./src/pages/resumes/builder/step3/index.tsx","webpack://user-dashboard/./src/pages/resumes/builder/resumeStepper.tsx","webpack://user-dashboard/./src/pages/resumes/builder/index.tsx","webpack://user-dashboard/./src/pages/resumes/template-viewer.tsx","webpack://user-dashboard/./src/pages/resumes/createNew.tsx","webpack://user-dashboard/./src/pages/resumes/index.tsx"],"sourcesContent":["import React, { Fragment } from 'react'\ninterface IconProps {\n  size?: string\n  color?: string\n  className?: string\n}\nconst DustBinIcon = ({ size, color, className }: IconProps) => {\n  return (\n    <Fragment>\n      <svg\n        width={size || '1rem'}\n        height={size || '1rem'}\n        className={className || ''}\n        viewBox='0 0 19 19'\n        fill='none'\n        xmlns='http://www.w3.org/2000/svg'\n      >\n        <path\n          d='M6.08594 2.13281H5.90625C6.00508 2.13281 6.08594 2.05195 6.08594 1.95312V2.13281H12.9141V1.95312C12.9141 2.05195 12.9949 2.13281 13.0938 2.13281H12.9141V3.75H14.5312V1.95312C14.5312 1.16025 13.8866 0.515625 13.0938 0.515625H5.90625C5.11338 0.515625 4.46875 1.16025 4.46875 1.95312V3.75H6.08594V2.13281ZM17.4062 3.75H1.59375C1.19619 3.75 0.875 4.07119 0.875 4.46875V5.1875C0.875 5.28633 0.955859 5.36719 1.05469 5.36719H2.41133L2.96611 17.1143C3.00205 17.8802 3.63545 18.4844 4.40137 18.4844H14.5986C15.3668 18.4844 15.9979 17.8824 16.0339 17.1143L16.5887 5.36719H17.9453C18.0441 5.36719 18.125 5.28633 18.125 5.1875V4.46875C18.125 4.07119 17.8038 3.75 17.4062 3.75ZM14.4257 16.8672H4.57432L4.03076 5.36719H14.9692L14.4257 16.8672Z'\n          fill={color || '#898989'}\n        />\n      </svg>\n    </Fragment>\n  )\n}\n\nexport default DustBinIcon\n","import React, { Fragment } from 'react'\ninterface IconProps {\n  size?: string\n  color?: string\n  className?: string\n}\nconst PenIcon = ({ size, color, className }: IconProps) => {\n  return (\n    <Fragment>\n      <svg\n        width={size || '1rem'}\n        height={size || '1rem'}\n        className={className || ''}\n        viewBox='0 0 24 24'\n        fill={color || '#898989'}\n        xmlns='http://www.w3.org/2000/svg'\n      >\n        <path d='M20.41 4.94l-1.35-1.35c-.78-.78-2.05-.78-2.83 0L3 16.82V21h4.18L20.41 7.77c.79-.78.79-2.05 0-2.83zm-14 14.12L5 19v-1.36l9.82-9.82 1.41 1.41-9.82 9.83z'></path>\n      </svg>\n    </Fragment>\n  )\n}\n\nexport default PenIcon\n","import React, { Fragment } from 'react'\ninterface IconProps {\n  size?: string\n  color?: string\n  className?: string\n}\nconst PlusIcon = ({ size, color, className }: IconProps) => {\n  return (\n    <Fragment>\n      <svg\n        width={size || '1rem'}\n        height={size || '1rem'}\n        className={className || ''}\n        viewBox='0 0 20 19'\n        fill='none'\n        xmlns='http://www.w3.org/2000/svg'\n      >\n        <path\n          d='M19.5406 9.44757H0.0765508'\n          stroke={color || '#898989'}\n          strokeWidth='1.5'\n        />\n        <path\n          d='M9.81017 0.000184768L9.81017 18.8953'\n          stroke={color || '#898989'}\n          strokeWidth='1.5'\n        />\n      </svg>\n    </Fragment>\n  )\n}\n\nexport default PlusIcon\n","import React, { Fragment } from 'react'\ninterface IconProps {\n  size?: string\n  color?: string\n  className?: string\n}\nconst SearchIcon = ({ size, color, className }: IconProps) => {\n  return (\n    <Fragment>\n      <svg\n        width={size || '1rem'}\n        className={className || ''}\n        height={size || '1rem'}\n        viewBox='0 0 14 15'\n        fill='none'\n        xmlns='http://www.w3.org/2000/svg'\n      >\n        <path\n          d='M5.66732 11.0007C6.85064 11.0004 7.99985 10.6043 8.93198 9.87532L11.8627 12.806L12.8053 11.8633L9.87465 8.93265C10.604 8.00043 11.0004 6.85094 11.0007 5.66732C11.0007 2.72665 8.60798 0.333984 5.66732 0.333984C2.72665 0.333984 0.333984 2.72665 0.333984 5.66732C0.333984 8.60798 2.72665 11.0007 5.66732 11.0007ZM5.66732 1.66732C7.87332 1.66732 9.66732 3.46132 9.66732 5.66732C9.66732 7.87332 7.87332 9.66732 5.66732 9.66732C3.46132 9.66732 1.66732 7.87332 1.66732 5.66732C1.66732 3.46132 3.46132 1.66732 5.66732 1.66732Z'\n          fill={color || '#898989'}\n        />\n      </svg>\n    </Fragment>\n  )\n}\n\nexport default SearchIcon\n","import React, { Fragment } from 'react'\nimport styled from 'styled-components'\n\nconst Modal = ({ show, setShow, children }) => {\n  return <Fragment>{show && <Wrapper>{children}</Wrapper>}</Fragment>\n}\n\nexport default Modal\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  z-index: 1000;\n  top: 0;\n  left: 0;\n  background-color: ${({ theme }) => theme.shades.dark[3]};\n`\n","import * as Yup from 'yup'\n\nconst months = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec'\n]\n\nconst first_name = Yup.string()\n  .required('first name is required')\n  .max(20, 'Max 20 characters allowed')\n  .min(3, 'Min 3 characters required')\nconst last_name = Yup.string()\n  .required('last name is required')\n  .max(20, 'Max 20 characters allowed')\n  .min(3, 'Min 3 characters required')\n\nconst email_address = Yup.string()\n  .email('email is invalid')\n  .required('email is required')\n\nconst phoneRegExp =\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\n\nconst phone_number = Yup.string().test(\n  'isValid',\n  'Invalid phone number',\n  (value) => {\n    if (!value) return true\n    return phoneRegExp.test(value) && value.length >= 6 && value.length <= 10\n  }\n)\n\nconst designation = Yup.string().max(50, 'Max 50 characters allowed')\nconst address = Yup.string()\n  .label('address')\n  .max(50, 'Max 50 characters allowed')\n\nconst about_info = Yup.string().test(\n  'test_length_greater_than_2000',\n  'Max 2000 characters allowed',\n  (value) => {\n    if (!value) return true\n    const regex = /(<([^>]+)>)/gi\n    const noBreak = value.replaceAll('<br>', '!!!!!!!!!!!!!!!')\n    const plain = noBreak.replace(regex, '')\n    if (plain.length > 2000) return false\n    else return true\n  }\n)\n\nconst city = Yup.string().max(20, 'Max 20 characters allowed')\nconst description = Yup.string().test(\n  'test_length_greater_than_300',\n  'Max 300 characters allowed',\n  (value) => {\n    if (!value) return true\n    const regex = /(<([^>]+)>)/gi\n    const noBreak = value.replaceAll('<br>', '!!!!!!!!!!!!!!!')\n    const plain = noBreak.replace(regex, '')\n\n    if (plain.length > 300) return false\n    else return true\n  }\n)\n\nconst isNumeric = (str: any) => {\n  if (typeof str != 'string') return false\n  return !isNaN(str as any) && !isNaN(parseFloat(str))\n}\n\nconst duration = Yup.object()\n  .test('valid start date', 'Invalid start date', (value) => {\n    const start: any = value.start\n    if (!start) return true\n    if (start.length > 8) return false\n    const splitVal = start.split(' ')\n    if (\n      splitVal.length !== 2 ||\n      !months.includes(splitVal[0]) ||\n      !isNumeric(splitVal[1]) ||\n      splitVal[1] < 1999 ||\n      splitVal[1] > 2098\n    )\n      return false\n    else return true\n  })\n  .test('valid end date', 'Invalid end date', (value) => {\n    const end: any = value.end\n    if (!end) return true\n    if (end.length > 8) return false\n    const splitVal = end.split(' ')\n    if (\n      splitVal.length !== 2 ||\n      !months.includes(splitVal[0]) ||\n      !isNumeric(splitVal[1]) ||\n      splitVal[1] < 1999 ||\n      splitVal[1] > 2098\n    )\n      return false\n    else return true\n  })\n  .test('required date', 'start date required', (value) => {\n    const end: any = value.end\n    const start: any = value.start\n\n    if (!end && !start) return true\n    if (end && !start) return false\n    else return true\n  })\n\nconst experience = Yup.array().of(\n  Yup.object().shape({\n    company: Yup.string().required().max(30, 'Max 30 characters allowed'),\n    designation: Yup.string().required().max(30, 'Max 30 characters allowed'),\n    city,\n    description,\n    duration\n  })\n)\n\nconst education = Yup.array().of(\n  Yup.object().shape({\n    institution: Yup.string().required().max(30, 'Max 30 characters allowed'),\n    degree: Yup.string().required().max(30, 'Max 30 characters allowed'),\n    city,\n    description,\n    duration\n  })\n)\n\nconst skills = Yup.array().of(\n  Yup.object().shape({\n    title: Yup.string().required().max(30, 'Max 30 characters allowed'),\n    rating: Yup.number().required().min(0).max(5, 'Max length 5 allowed')\n  })\n)\n\nconst courses = Yup.array().of(\n  Yup.object().shape({\n    institution: Yup.string().required().max(30, 'Max 30 characters allowed'),\n    course: Yup.string().required().max(30, 'Max 30 characters allowed'),\n    duration\n  })\n)\n\nconst internships = Yup.array().of(\n  Yup.object().shape({\n    job_title: Yup.string()\n      .required('job title is required')\n      .max(30, 'Max 30 characters allowed'),\n    employer: Yup.string().required().max(30, 'Max 30 characters allowed'),\n    city,\n    description,\n    duration\n  })\n)\nconst languages = Yup.array().of(\n  Yup.object().shape({\n    language: Yup.string().required().max(30, 'Max 30 characters allowed'),\n    level: Yup.string().max(30, 'Max 30 characters allowed')\n  })\n)\n\nconst references = Yup.array().of(\n  Yup.object().shape({\n    name: Yup.string().required().max(30, 'Max 30 characters allowed'),\n    company: Yup.string().required().max(30, 'Max 30 characters allowed'),\n    phone_number,\n    email_address\n  })\n)\n\nexport const validateResumeFrom = Yup.object().shape({\n  first_name: first_name,\n  last_name: last_name,\n  email_address,\n  phone_number,\n  designation,\n  address,\n  about_info,\n  experience,\n  education,\n  skills,\n  courses,\n  internships,\n  languages,\n  references\n})\n","import React, { useEffect, useState } from 'react'\nimport { FormProvider, useForm } from 'react-hook-form'\nimport { IResumeDefault } from '../typings/resume'\nimport '../styled/template_global.css'\nimport { getResumeTemplate } from '../queries/resumeQueries'\nimport { useNotify } from './notify'\nimport { useQueryClient } from 'react-query'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport { validateResumeFrom } from '../validations/resume'\nimport { handleResumeDownload, submitResumeFrom } from '../helpers/resume'\nimport { loadFonts } from '../helpers/loadFonts'\n\ninterface Context {\n  data: IResumeDefault & { id: string | null }\n  isTemplateReady: boolean\n  templateData: any\n  template: string | null\n  step: number\n  submitSuccess: boolean\n  isSaving: boolean\n  setStep: (val: number) => void\n  setTemplate: (name: string) => void\n  submitResume: (\n    type?: 'txt' | 'pdf' | 'docx' | null,\n    autoSave?: boolean\n  ) => void\n}\n\nconst defaultAvatar = {\n  blank: true,\n  orignal: '',\n  processed: '',\n  style: {\n    width: 0,\n    height: 0,\n    rotate: 0,\n    scale: 1,\n    pos: {\n      x: 0.5,\n      y: 0.5,\n    },\n  },\n}\n\nconst defaultValues = {\n  title: 'Untitled',\n  first_name: '',\n  last_name: '',\n  email_address: '',\n  phone_number: '',\n  avatar: defaultAvatar,\n  designation: '',\n  address: '',\n  about_info: '',\n  experience: [],\n  education: [],\n  skills: [],\n  courses: [],\n  internships: [],\n  references: [],\n  languages: [],\n}\n\n/* istanbul ignore next */\nconst contextValues = {\n  data: { ...defaultValues, id: null },\n  isTemplateReady: false,\n  templateData: null,\n  template: null,\n  step: 1,\n  submitSuccess: false,\n  isSaving: false,\n  setStep: () => {\n    return undefined\n  },\n  setTemplate: () => {\n    return undefined\n  },\n  submitResume: () => {\n    return undefined\n  },\n}\n\nconst ResumeContext = React.createContext<Context>(contextValues)\n\nconst ResumeProvider = ({ initialData, templateName, children }: any) => {\n  const [cssReady, setCssReady] = useState(false)\n  const [fontsReady, setFontsReady] = useState(false)\n  const [queryEnabled, setQueryEnabled] = useState(false)\n  const [step, setStep] = useState(1)\n  const [submitSuccess, setSubmitSuccess] = useState(false)\n  const [isSaving, setIsSaving] = useState(false)\n  const [template, setTemplate] = useState(templateName)\n\n  const { setNotify } = useNotify()\n  const queryClient = useQueryClient()\n\n  const methods = useForm<IResumeDefault>({\n    mode: 'onChange',\n    defaultValues,\n    criteriaMode: 'all',\n    resolver: yupResolver(validateResumeFrom),\n  })\n  const {\n    data: templateData,\n    isLoading: isTemplateLoading,\n    isError: isTemplateError,\n  } = getResumeTemplate(template, queryEnabled && !!templateName)\n\n  const {\n    handleSubmit,\n    watch,\n    reset,\n    trigger,\n    setValue,\n    formState: { isValid, isDirty },\n  } = methods\n\n  useEffect(() => {\n    if (!initialData) return\n    if (initialData.template) {\n      setTemplate(initialData.template)\n    }\n\n    const { fields } = initialData\n    const resumeData = {\n      title: initialData.title || 'Untitled',\n      first_name: fields.first_name || '',\n      last_name: fields.last_name || '',\n      avatar: fields.avatar || defaultAvatar,\n      email_address: fields.email_address || '',\n      phone_number: fields.phone_number || '',\n      designation: fields.designation || '',\n      address: fields.address || '',\n      about_info: fields.about_info || '',\n      experience: fields.experience || [],\n      education: fields.education || [],\n      skills: fields.skills || [],\n      courses: fields.courses || [],\n      internships: fields.internships || [],\n      languages: fields.languages || [],\n      references: fields.references || [],\n    }\n\n    reset(resumeData, {\n      keepDirty: true,\n      keepIsValid: true,\n      keepErrors: true,\n    })\n    setQueryEnabled(true)\n  }, [initialData])\n\n  useEffect(() => {\n    setCssReady(false)\n  }, [template])\n\n  // console.log(templateData, 'templatedata')\n\n  const loadTemplateFonts = async () => {\n    await loadFonts(templateData.fonts)\n    return setFontsReady(true)\n  }\n\n  useEffect(() => {\n    if (\n      !queryEnabled ||\n      !templateData ||\n      !templateData.fonts ||\n      templateData.fonts === 0\n    )\n      return\n    setFontsReady(false)\n    loadTemplateFonts()\n\n    return () => setFontsReady(true)\n  }, [templateData, queryEnabled])\n\n  useEffect(() => {\n    if (!document || !queryEnabled || cssReady) return\n    const old = document.getElementById('css_style')\n    if (old) {\n      old.remove()\n    }\n    const link = document.createElement('link')\n    link.id = 'css_style'\n    link.setAttribute('rel', 'stylesheet')\n    link.setAttribute('type', 'text/css')\n    link.setAttribute(\n      'href',\n      `${process.env.API_HOST}/css/resumes/${template}.css`\n    )\n\n    document.head.appendChild(link)\n\n    /* istanbul ignore next */\n    link.onload = () => {\n      setCssReady(true)\n    }\n    /* istanbul ignore next */\n    link.onerror = () => {\n      return console.log('stylesheet could not be loaded')\n    }\n  }, [cssReady, queryEnabled])\n\n  const currData = watch()\n\n  const regex = /(<([^>]+)>)/gi\n  const hasTextinDescription = currData.about_info.replace(regex, '').length\n\n  useEffect(() => {\n    if (!hasTextinDescription && isDirty) {\n      setValue('about_info', '')\n    }\n  }, [currData.about_info])\n\n  const submitResume = async (\n    type?: 'txt' | 'pdf' | 'docx' | null,\n    autoSave?: boolean\n  ) => {\n    const submitForm = async (data: any) => {\n      return await submitResumeFrom(\n        template,\n        type,\n        initialData,\n        data,\n        watch,\n        reset,\n        setSubmitSuccess,\n        setNotify,\n        queryClient\n      )\n    }\n    // const submitForm = async (data: any) => {\n    //   try {\n    //     setSubmitSuccess(false)\n    //     if (!data) return\n    //     const { data: resData, error } = await updateResume({\n    //       title: data.title,\n    //       template,\n    //       id: initialData._id,\n    //       ...data,\n    //     })\n    //     if (error) {\n    //       !axios.isCancel(error) &&\n    //         setNotify({\n    //           type: 'danger',\n    //           heading: 'Err!',\n    //           message: 'Failed to update design',\n    //         })\n    //     }\n    //     if (resData) {\n    //       if (type) {\n    //         const name = resData.title ? resData.title : ''\n    //         await handleResumeDownload(\n    //           name,\n    //           initialData._id,\n    //           type as any,\n    //           setNotify\n    //         )\n    //       }\n\n    //       const resumes: Array<any> | undefined =\n    //         queryClient.getQueryData('resumes')\n    //       if (resumes) {\n    //         const find = resumes.findIndex((item) => item._id === resData._id)\n    //         if (find >= 0) {\n    //           resumes.splice(find, 1, resData)\n    //         } else {\n    //           resumes.unshift(resData)\n    //         }\n    //         queryClient.setQueryData('resumes', resumes)\n    //       }\n\n    //       resData.fields = watch()\n\n    //       queryClient.setQueryData(['resume', resData._id], resData)\n    //       setSubmitSuccess(true)\n    //       reset(\n    //         {},\n    //         {\n    //           keepDirty: false,\n    //           keepValues: true,\n    //           keepIsValid: true,\n    //           keepErrors: true,\n    //         }\n    //       )\n    //     }\n    //   } catch (err) {\n    //     setNotify({\n    //       type: 'danger',\n    //       heading: 'Err!',\n    //       message: 'Something went wrong!',\n    //     })\n    //   }\n    // }\n\n    if (!autoSave) {\n      trigger()\n      if (!isValid) {\n        return setNotify({\n          type: 'warning',\n          heading: 'Invalid fields!',\n          message: 'Valid fields are required to proceed',\n        })\n      }\n    }\n\n    if (isDirty || initialData.template !== template) {\n      setIsSaving(true)\n      await handleSubmit(submitForm)()\n      setIsSaving(false)\n    } else {\n      setIsSaving(true)\n      const name = currData.title\n      await handleResumeDownload(name, initialData._id, type as any, setNotify)\n      setIsSaving(false)\n    }\n  }\n\n  return (\n    <ResumeContext.Provider\n      value={{\n        data: { ...currData, id: initialData ? initialData._id : null },\n        isTemplateReady:\n          cssReady &&\n          !isTemplateLoading &&\n          templateData &&\n          fontsReady &&\n          queryEnabled,\n        templateData,\n        submitSuccess,\n        setTemplate,\n        template,\n        submitResume,\n        step,\n        setStep,\n        isSaving,\n      }}\n    >\n      <FormProvider {...methods}>{children}</FormProvider>\n    </ResumeContext.Provider>\n  )\n}\n\nexport default ResumeProvider\n\nconst useResume = () => {\n  const {\n    data,\n    isTemplateReady,\n    templateData,\n    setTemplate,\n    template,\n    submitResume,\n    submitSuccess,\n    isSaving,\n    step,\n    setStep,\n  } = React.useContext(ResumeContext)\n\n  return {\n    data,\n    isTemplateReady,\n    templateData,\n    setTemplate,\n    template,\n    submitResume,\n    submitSuccess,\n    isSaving,\n    step,\n    setStep,\n  }\n}\n\nexport { ResumeProvider, useResume }\n","import React, { Fragment, useEffect, useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button } from '../../styled/button'\nimport BlocksIcon from '../../components/svgs/blocks'\nimport DownArrowIcon from '../../components/svgs/downArrow'\nimport { useFormContext } from 'react-hook-form'\nimport DropButton from '../../components/ui/DropButton'\nimport VerticalLineIcon from '../../components/svgs/verticalLine'\nimport { useResume } from '../../contexts/resume'\nimport { useHistory } from 'react-router-dom'\nimport templateMapper from '../../helpers/templateMapper'\nimport { useViewport } from '../../contexts/viewPort'\nimport PreviewSkeleton from '../../components/ui/previewSkeleton'\nimport { Spinner } from '../../styled/loader'\n\nconst Previewer = ({ isDataLoading }: { isDataLoading: boolean }) => {\n  const ref = useRef<HTMLDivElement>(null)\n  const [pages, setPages] = useState(1)\n  const [curr, setCurr] = useState(1)\n  const [buffer, setBuffer] = useState(0)\n  const [showDownload, setShowDownload] = useState(false)\n  const [firstLoad, setFirstLoad] = useState(false)\n\n  const { width, height } = useViewport()\n  const histroy = useHistory()\n\n  const { data, templateData, isTemplateReady, submitResume, isSaving } =\n    useResume()\n\n  const {\n    formState: { isSubmitting, isValid },\n  } = useFormContext()\n\n  useEffect(() => {\n    if (isSaving) setShowDownload(false)\n    return\n  }, [isSaving])\n\n  const scale = width >= 1920 ? 0.6 : width / 1920\n\n  const top = Math.floor(scale >= 0.7 ? scale * 40 : scale * -60)\n\n  useEffect(() => {\n    if (!ref || !ref.current) return\n    const element = ref.current.querySelector('.page') as HTMLElement\n    if (!element) return\n    element.style.transform = `scale(${scale})`\n    ref.current.style.width = element.getBoundingClientRect().width + 'px'\n    ref.current.style.height = element.getBoundingClientRect().height + 'px'\n    const calcX = (element.clientWidth * (scale - 1)) / 2\n    const calcY = (element.clientHeight * (scale - 1)) / 2\n    element.style.transform = `translate3d(${calcX}px, ${calcY}px, 0px) scale(${scale})`\n    const dummyBufferEl = document.createElement('div')\n    dummyBufferEl.style.height = '50px'\n    dummyBufferEl.style.transform = `scale(${scale})`\n    dummyBufferEl.style.visibility = 'hidden'\n    dummyBufferEl.style.position = 'absolute'\n    dummyBufferEl.style.opacity = '0'\n    document.body.appendChild(dummyBufferEl)\n    const bufferHeight = dummyBufferEl.getBoundingClientRect().height\n    setBuffer(bufferHeight)\n    document.body.removeChild(dummyBufferEl)\n  }, [ref.current, width, height])\n\n  useEffect(() => {\n    if (!data || !templateData || buffer === 0) return\n    const timer = setTimeout(() => {\n      if (!ref || !ref.current) return\n      const page = ref.current.querySelector('.page')\n      if (!page) return\n      const wrapper = page.children[0] as HTMLElement\n\n      if (!wrapper) return\n      const template = JSON.parse(JSON.stringify(templateData))\n      wrapper.innerHTML = ''\n      const pages = templateMapper(template, data, wrapper, buffer)\n      if (!pages) return\n      updatePages(Object.keys(pages).length)\n\n      if (!firstLoad) setFirstLoad(true)\n    }, 500)\n    return () => clearTimeout(timer)\n  }, [data, ref, templateData, buffer])\n\n  useEffect(() => {\n    if (!ref || !ref.current) return\n    const page = ref.current.querySelector('.page') as HTMLElement\n    if (!page) return\n    const wrapper = page.children[0] as HTMLElement\n    if (!wrapper) return\n    wrapper.style.transform = `translateY(-${page.clientHeight * (curr - 1)}px)`\n    wrapper.style.height = page.clientHeight * curr + 'px'\n  }, [curr, ref.current])\n\n  const updatePages = (total: number) => {\n    curr > total && setCurr(total)\n    setPages(total)\n  }\n\n  const handleClick = (type: 'prev' | 'next') => {\n    if (type === 'prev') curr > 1 && curr <= pages && setCurr(curr - 1)\n    if (type === 'next') curr >= 1 && curr < pages && setCurr(curr + 1)\n    return\n  }\n\n  return (\n    <Fragment>\n      <SkeletonWrapper\n        data-test-id=\"preview-skeleton\"\n        style={\n          isDataLoading || !data || !isTemplateReady || !firstLoad\n            ? { visibility: 'visible' }\n            : { visibility: 'hidden' }\n        }\n      >\n        {width ? (\n          <PreviewSkeleton\n            style={{ position: 'absolute', marginTop: 0, top: `${top}px` }}\n            scale={scale}\n          />\n        ) : null}\n      </SkeletonWrapper>\n      <PreviewWrapper>\n        <TemplateWrapper ref={ref}>\n          <div className=\"page\">\n            <div style={{ width: '100%' }} />\n          </div>\n        </TemplateWrapper>\n        <PreviewFooter\n          className={`template_footer ${\n            isDataLoading || !data || !isTemplateReady || !firstLoad\n              ? 'invisible'\n              : ''\n          }`}\n        >\n          <div>\n            <TemplateBtn\n              type=\"button\"\n              btnType=\"ghost\"\n              color=\"#F08438\"\n              size=\"lg\"\n              style={{ justifyContent: 'space-around' }}\n              onClick={() => histroy.push(`/resumes/preview/${data.id}`)}\n              disabled={isSubmitting}\n            >\n              <BlocksIcon size={width < 1300 ? '0.8rem' : '1rem'} />\n              Change template\n            </TemplateBtn>\n          </div>\n\n          <PageToggler>\n            <button\n              data-test-id=\"resume_pages_prev\"\n              type=\"button\"\n              style={{ transform: 'rotateZ(90deg)' }}\n              onClick={() => handleClick('prev')}\n            >\n              <DownArrowIcon size=\"0.75rem\" />\n            </button>\n\n            <p data-test-id=\"resume_pages\">\n              {curr}&nbsp;/&nbsp;{pages}\n            </p>\n            <button\n              data-test-id=\"resume_pages_next\"\n              type=\"button\"\n              style={{ transform: 'rotateZ(270deg)' }}\n              onClick={() => handleClick('next')}\n            >\n              <DownArrowIcon size=\"0.75rem\" />\n            </button>\n          </PageToggler>\n\n          <div>\n            <DownloadBtn\n              vertical=\"top\"\n              horizontal=\"left\"\n              show={showDownload}\n              setShow={setShowDownload}\n              disabled={isSaving || !isValid || isSubmitting}\n            >\n              <DropButton.Button>\n                <Fragment>\n                  {!isSaving ? (\n                    <Fragment>\n                      Download <VerticalLineIcon /> <DownArrowIcon />\n                    </Fragment>\n                  ) : (\n                    <Fragment>\n                      Downloading <Spinner size=\"1rem\" />\n                    </Fragment>\n                  )}\n                </Fragment>\n              </DropButton.Button>\n              <DropButton.Item>\n                <a onClick={() => submitResume('pdf')}>Download PDF</a>\n              </DropButton.Item>\n\n              <DropButton.Item>\n                <a onClick={() => submitResume('docx')}>Export to DOCX</a>\n              </DropButton.Item>\n\n              <DropButton.Item>\n                <a onClick={() => submitResume('txt')}>Export to TXT</a>\n              </DropButton.Item>\n            </DownloadBtn>\n          </div>\n        </PreviewFooter>\n      </PreviewWrapper>\n    </Fragment>\n  )\n}\n\nexport default Previewer\n\nconst PreviewWrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  margin: auto;\n`\nconst PreviewFooter = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 1.5rem;\n`\nconst PageToggler = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  p {\n    font-weight: 600;\n  }\n  button {\n    padding-left: 0.5rem;\n    padding-right: 0.5rem;\n    svg {\n      path {\n        stroke-width: 1.5;\n      }\n    }\n  }\n`\nconst TemplateWrapper = styled.div`\n  display: block;\n  position: relative;\n`\nconst DownloadBtn = styled(DropButton)`\n  button {\n    background: rgba(240, 132, 56, 1);\n    color: #fff;\n    height: 40px;\n    width: 150px;\n    display: flex;\n    justify-content: space-around;\n    padding: 0 1rem;\n    border-radius: 6px;\n    @media (max-width: 1300px) {\n      height: 32px;\n      font-size: 0.75rem;\n      width: 120px;\n    }\n    svg {\n      path {\n        stroke: #fff;\n      }\n    }\n    &:disabled {\n      background-color: ${({ theme }) => theme.colors.grey};\n    }\n  }\n`\n\nconst TemplateBtn = styled(Button)`\n  @media (max-width: 1300px) {\n    height: 32px;\n    font-size: 0.75rem;\n    width: 120px;\n  }\n`\nconst SkeletonWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: auto;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  z-index: 1;\n  background: #f7f9fc;\n`\n","import React, { Fragment } from 'react'\ninterface IconProps {\n  size?: string\n  color?: string\n  className?: string\n}\nconst PersonIcon = ({ size, color, className }: IconProps) => {\n  return (\n    <Fragment>\n      <svg\n        width={size || '1rem'}\n        className={className || ''}\n        height={size || '1rem'}\n        viewBox='0 0 34 34'\n        fill='none'\n        xmlns='http://www.w3.org/2000/svg'\n      >\n        <path\n          d='M26.6213 24.3209C22.1633 22.6968 20.7381 21.326 20.7381 18.3907C20.7381 16.6293 22.1989 15.4877 22.6968 13.978C23.1947 12.4683 23.4828 10.6809 23.7222 9.38074C23.9616 8.08055 24.0568 7.57767 24.1869 6.19234C24.3462 4.46341 23.1887 0 17 0C10.8131 0 9.65201 4.46341 9.81478 6.19234C9.945 7.57767 10.0407 8.08061 10.2796 9.38074C10.5185 10.6809 10.8037 12.4682 11.3013 13.978C11.7989 15.4878 13.2617 16.6293 13.2617 18.3907C13.2617 21.326 11.8366 22.6968 7.37865 24.3209C2.90448 25.9485 0 27.5536 0 28.6875V34H34V28.6875C34 27.5554 31.0937 25.9503 26.6213 24.3209Z'\n          fill={color || '#898989'}\n        />\n      </svg>\n    </Fragment>\n  )\n}\n\nexport default PersonIcon\n","import React, { Fragment, useCallback } from 'react'\nimport Resizer from 'react-image-file-resizer'\nimport { useDropzone } from 'react-dropzone'\nimport styled from 'styled-components'\nimport { Button } from '../../styled/button'\nimport CrossIcon from '../svgs/cross'\nimport { useNotify } from '../../contexts/notify'\n\ninterface IProps {\n  setImage: (val: any) => void\n  setShow: (val: boolean) => void\n}\n\nconst resizeFile = (file: any) =>\n  new Promise((resolve) => {\n    Resizer.imageFileResizer(\n      file,\n      1600,\n      1200,\n      'JPEG',\n      80,\n      0,\n      (uri) => {\n        resolve(uri)\n      },\n      'file',\n      250,\n      250\n    )\n  })\n\nconst Dropzone: React.FC<IProps> = ({ setImage, setShow }) => {\n  const { setNotify } = useNotify()\n\n  const onDrop = useCallback(async (acceptedFiles) => {\n    try {\n      await Promise.all(\n        acceptedFiles.map((image: any) => {\n          return resizeFile(image)\n        })\n      ).then((uploadBranchImages) => {\n        if (uploadBranchImages.length > 0) {\n          setImage(uploadBranchImages[0])\n        }\n        return\n      })\n    } catch (err) {\n      console.log(err)\n    }\n  }, [])\n  const onDropRejected = useCallback(async (rejectedFiles) => {\n    try {\n      console.log(rejectedFiles)\n      if (!rejectedFiles || rejectedFiles.length === 0) return\n      rejectedFiles.forEach((item: Record<string, any>) =>\n        setNotify({\n          type: 'warning',\n          message: item.file.name,\n          heading: item.errors[0].message,\n        })\n      )\n    } catch (err) {\n      console.log(err)\n    }\n  }, [])\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    accept: ['image/png', 'image/jpg', 'image/jpeg', 'image/webp'],\n    maxFiles: 1,\n    onDrop,\n    onDropRejected,\n  })\n\n  return (\n    <Fragment>\n      <Wrapper>\n        <CloseBtn onClick={() => setShow(false)}>\n          <CrossIcon size=\"1.2rem\" />\n        </CloseBtn>\n        <DropWrapper {...getRootProps()}>\n          <input {...getInputProps()} />\n          {isDragActive ? (\n            <p>Drop the files here ...</p>\n          ) : (\n            <Fragment>\n              <p className=\"mb-2\">\n                Drag &apos;n&apos; drop here, or click to select image\n              </p>\n              <Button type=\"button\" btnType=\"primary\" size=\"lg\">\n                Choose Image\n              </Button>\n            </Fragment>\n          )}\n        </DropWrapper>\n      </Wrapper>\n    </Fragment>\n  )\n}\n\nexport default Dropzone\n\nconst Wrapper = styled.div`\n  max-height: 400px;\n  max-width: 850px;\n  height: 100%;\n  width: 100%;\n  padding: 5rem 4rem;\n  background-color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n`\n\nconst DropWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n  margin: 0;\n  align-items: center;\n  justify-content: center;\n  background-image: url(\"data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' stroke='%23ACACACFF' stroke-width='2' stroke-dasharray='5%2c 8' stroke-dashoffset='0' stroke-linecap='square'/%3e%3c/svg%3e\");\n  opacity: 0.8;\n  transition: opacity 200ms;\n  cursor: pointer;\n  p {\n    font-size: 1.25rem;\n  }\n  &:hover {\n    opacity: 1;\n  }\n`\nconst CloseBtn = styled.span`\n  display: inline-flex;\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  padding: 1rem;\n  z-index: 1;\n  cursor: pointer;\n\n  &:hover {\n    svg {\n      path {\n        stroke: ${({ theme }) => theme.colors.primary};\n      }\n    }\n  }\n`\n","import React, { Fragment } from 'react'\ninterface IconProps {\n  size?: string\n  color?: string\n  className?: string\n}\nconst JustCheckIcon = ({ size, color, className }: IconProps) => {\n  return (\n    <Fragment>\n      <svg\n        xmlns='http://www.w3.org/2000/svg'\n        viewBox='0 0 25 18'\n        width={size || '1rem'}\n        className={className || ''}\n        height={size || '1rem'}\n      >\n        <path d='M24 1L8 17' stroke={color || '#898989'} strokeWidth='2' />\n        <path d='M1 9L9.49999 17' stroke={color || '#898989'} strokeWidth='2' />\n      </svg>\n    </Fragment>\n  )\n}\n\nexport default JustCheckIcon\n","import React, { Fragment } from 'react'\ninterface IconProps {\n  size?: string\n  color?: string\n  className?: string\n}\nconst UploadIcon = ({ size, color, className }: IconProps) => {\n  return (\n    <Fragment>\n      <svg\n        xmlns='http://www.w3.org/2000/svg'\n        viewBox='0 0 22 16'\n        width={size || '1rem'}\n        className={className || ''}\n        height={size || '1rem'}\n      >\n        <path\n          d='M17.4346 3.70116C16.6586 2.42505 15.5527 1.40594 14.2454 0.762384C12.9381 0.118832 11.4832 -0.122701 10.05 0.0658831C8.61673 0.254467 7.26409 0.865417 6.1494 1.82765C5.03471 2.78989 4.2038 4.06386 3.75333 5.50134C2.55889 5.84467 1.52424 6.63086 0.84195 7.71358C0.159662 8.7963 -0.12378 10.1018 0.0443783 11.3871C0.212537 12.6723 0.820841 13.8498 1.75607 14.7004C2.6913 15.551 3.88974 16.0167 5.12833 16.0108H16.0424C17.4986 16.0065 18.9028 15.4433 19.9894 14.4279C21.076 13.4124 21.7695 12.0151 21.9389 10.5002C22.1083 8.98536 21.7417 7.45801 20.9085 6.20711C20.0753 4.95621 18.8333 4.06852 17.4174 3.71196L17.4346 3.70116ZM10.0818 14.081H5.11802C4.28854 14.0889 3.48715 13.7666 2.87592 13.1792C2.26469 12.5918 1.88923 11.7833 1.82548 10.917C1.76172 10.0508 2.01443 9.19151 2.53249 8.51297C3.05056 7.83443 3.79531 7.38727 4.61615 7.26192L5.22114 7.16471L5.36896 6.54184C5.64807 5.35926 6.26044 4.29198 7.12645 3.4788C7.99245 2.66562 9.07202 2.14416 10.2248 1.98222C11.3775 1.82028 12.5501 2.02535 13.5901 2.57077C14.6301 3.1162 15.4894 3.97674 16.0561 5.04049L16.2727 5.44373L16.7093 5.51934C17.6739 5.6782 18.5525 6.19293 19.1866 6.97064C19.8207 7.74836 20.1686 8.73785 20.1674 9.76057C20.1666 10.3552 20.0496 10.9433 19.8236 11.4887C19.5025 12.2593 18.9738 12.915 18.3021 13.3755C17.6305 13.8359 16.8451 14.0811 16.0424 14.081H11.9174V9.67056L12.9486 10.7507C13.1207 10.9303 13.3537 11.0312 13.5966 11.0312C13.8395 11.0312 14.0725 10.9303 14.2446 10.7507C14.4163 10.5699 14.5127 10.3252 14.5127 10.0702C14.5127 9.81518 14.4163 9.57053 14.2446 9.38973L11.6527 6.67506C11.4768 6.50191 11.2444 6.40551 11.003 6.40551C10.7616 6.40551 10.5293 6.50191 10.3533 6.67506L7.76146 9.38973C7.67298 9.4781 7.60225 9.5841 7.55343 9.70149C7.5046 9.81889 7.47866 9.94532 7.47713 10.0734C7.4756 10.2014 7.49851 10.3285 7.54451 10.4471C7.59052 10.5658 7.65869 10.6736 7.74502 10.7642C7.83136 10.8549 7.93412 10.9266 8.04727 10.9751C8.16042 11.0236 8.28168 11.0479 8.40393 11.0466C8.52619 11.0454 8.64697 11.0185 8.75918 10.9677C8.8714 10.9169 8.97278 10.8431 9.05739 10.7507L10.0886 9.67056V14.081'\n          fill={color || '#898989'}\n        />\n      </svg>\n    </Fragment>\n  )\n}\n\nexport default UploadIcon\n","import React, {\n  ChangeEvent,\n  Fragment,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\nimport AvatarEditor from 'react-avatar-editor'\nimport styled from 'styled-components'\nimport Modal from './modal'\nimport CrossIcon from '../svgs/cross'\nimport Dropzone from './dropzone'\nimport JustCheckIcon from '../svgs/justCheckIcon'\nimport UploadIcon from '../svgs/upload'\nimport { IImgTransformStyle } from '../../typings/imageUpload'\nimport { Spinner } from '../../styled/loader'\n\ninterface IProps {\n  show: boolean\n  img: File | string | null\n  style: IImgTransformStyle\n  setShow: (val: boolean) => void\n  canvasElement: (\n    orignalImage: File | string,\n    processedCanvas: HTMLCanvasElement,\n    style: IImgTransformStyle\n  ) => void\n}\n\nconst ImageUploader: React.FC<IProps> = ({\n  show,\n  setShow,\n  canvasElement,\n  img,\n  style,\n}) => {\n  const [scale, setScale] = useState(style.scale ? style.scale : 1)\n  const [rotate, setRotate] = useState(style.rotate ? style.rotate : 0)\n  const [toggle, setToggle] = useState(0)\n  const [pos, setPos] = useState({\n    x: style.pos.x || 0.5,\n    y: style.pos.y || 0.5,\n  })\n  const [loading, setLoading] = useState(true)\n  const [dropped, setDropped] = useState<File | string | null>(null)\n  const wrapperRef = useRef<HTMLDivElement>(null)\n  const editorRef = useRef<AvatarEditor>(null)\n\n  const options = {\n    cols: 3,\n    rows: 3,\n    width: 250,\n    height: 250,\n    color: '#fff',\n  }\n\n  useEffect(() => {\n    style.scale ? setScale(style.scale) : 1\n    style.rotate ? setRotate(style.rotate) : 0\n    return\n  }, [style.scale, style.rotate])\n\n  useEffect(() => {\n    setLoading(true)\n    if (img) {\n      setDropped(img)\n    } else {\n      setDropped(null)\n    }\n  }, [img, show])\n\n  useEffect(() => {\n    if (!wrapperRef || !wrapperRef.current) return\n    const canvas = wrapperRef.current.querySelector(\n      '#cropper'\n    ) as HTMLCanvasElement\n    const ctx = canvas.getContext('2d')\n    if (ctx) {\n      canvas.width = options.width\n      canvas.height = options.height\n      ctx.translate(0.5, 0.5)\n      ctx.beginPath()\n      ctx.lineWidth = 0.7\n      ctx.strokeStyle = options.color\n      const offsetX = Math.floor(options.width / options.cols)\n      const offsetY = Math.floor(options.height / options.rows)\n      for (let x = offsetX; x < options.width - offsetX; x += offsetX) {\n        ctx.setLineDash([10, 7])\n        ctx.moveTo(x, 0)\n        ctx.lineTo(x, options.height)\n      }\n\n      for (let y = offsetY; y < options.height - offsetY; y += offsetY) {\n        ctx.setLineDash([10, 7])\n        ctx.moveTo(0, y)\n        ctx.lineTo(options.width, y)\n      }\n\n      ctx.stroke()\n    }\n  }, [wrapperRef.current, dropped, show])\n\n  useEffect(() => {\n    setScale(style.scale || 1)\n    setRotate(style.rotate || 0)\n    setToggle(0)\n    setLoading(true)\n  }, [dropped])\n\n  useEffect(() => {\n    if (!wrapperRef || !wrapperRef.current) return\n    let value: {\n      selector: string | undefined\n      targetValue: number | undefined\n      max: number | undefined\n    } = {\n      selector: undefined,\n      targetValue: undefined,\n      max: undefined,\n    }\n    switch (toggle) {\n      case 0:\n        value = {\n          selector: '#scaleRange',\n          targetValue: scale,\n          max: 3,\n        }\n        break\n      case 1:\n        value = {\n          selector: '#rotateRange',\n          targetValue: rotate,\n          max: 360,\n        }\n        break\n      default:\n        null\n        break\n    }\n    if (!value.selector || !value.targetValue || !value.max) return\n\n    const element = wrapperRef.current.querySelector(\n      value.selector\n    ) as HTMLCanvasElement\n\n    if (!element) return\n\n    rangeTrack(element, value.targetValue, value.max)\n  }, [wrapperRef.current, dropped, toggle, show])\n\n  const rangeTrack = (\n    element: HTMLElement,\n    targetValue: number,\n    max: number\n  ) => {\n    const parent = element\n    const value = ((targetValue - 1) / (max - 1)) * 100\n    parent.style.background = `linear-gradient(to right, rgba(240,132,56,1) 0%, rgba(240,132,56,1) ${value}%, #C4C4C4 ${value}%, #C4C4C4 100%)`\n  }\n\n  const handleChange = (e: any, max: number, type: 'scale' | 'rotate') => {\n    if (type === 'scale') {\n      setScale(parseFloat(e.target.value))\n    } else if (type === 'rotate') {\n      setRotate(parseFloat(e.target.value))\n    } else return false\n    rangeTrack(e.target.parentElement, e.target.value, max)\n  }\n\n  const handleSave = () => {\n    if (editorRef.current && dropped && !loading) {\n      const processedCanvas = editorRef.current.getImageScaledToCanvas()\n      const {\n        state: { image },\n      } = editorRef.current\n      const style = {\n        height: image.height,\n        width: image.width,\n        scale,\n        rotate,\n        pos: {\n          x: image.x,\n          y: image.y,\n        },\n      }\n      canvasElement(dropped, processedCanvas, style)\n      setShow(false)\n    }\n  }\n\n  const handleNew = () => {\n    setDropped(null)\n  }\n\n  return (\n    <Fragment>\n      <Modal show={show} setShow={setShow}>\n        {dropped ? (\n          <Wrapper ref={wrapperRef} data-test-id=\"image-edit\">\n            <Fragment>\n              <ActionWrapper>\n                <span\n                  onClick={() => setShow(false)}\n                  data-test-id=\"upload-close\"\n                >\n                  <CrossIcon className=\"svg-strokes\" size=\"1.05rem\" />\n                </span>\n                <span onClick={handleNew} data-test-id=\"upload-new\">\n                  <UploadIcon className=\"svg-fills\" size=\"1.2rem\" />\n                  &nbsp;Upload New\n                </span>\n                <span onClick={handleSave} data-test-id=\"upload-save\">\n                  <JustCheckIcon className=\"svg-strokes\" size=\"1.2rem\" />\n                </span>\n              </ActionWrapper>\n              <Fragment>\n                <CanvasWrapper>\n                  <CanvasCorner data-test-id=\"image-crop\">\n                    <Corner top=\"0\" left=\"0\" />\n                    <Corner top=\"0\" right=\"0\" />\n                    <Corner bottom=\"0\" left=\"0\" />\n                    <Corner bottom=\"0\" right=\"0\" />\n                  </CanvasCorner>\n                  {loading && (\n                    <Loader>\n                      <Spinner type=\"primary\" size=\"2rem\" />\n                    </Loader>\n                  )}\n                  <CanvasGrid id=\"cropper\" />\n                  <AvatarEditor\n                    data-test-id=\"image-drag\"\n                    ref={editorRef}\n                    image={dropped}\n                    width={250}\n                    height={250}\n                    border={[175, 70]}\n                    borderRadius={0}\n                    color={[255, 255, 255, 0.9]} // RGBA\n                    scale={scale}\n                    rotate={rotate}\n                    crossOrigin=\"anonymous\"\n                    position={pos}\n                    onImageReady={() => setLoading(false)}\n                    onPositionChange={({ x, y }) => setPos({ x, y })}\n                  />\n                </CanvasWrapper>\n\n                <ToggleWrapper>\n                  <Toggle onClick={() => setToggle(0)} active={toggle === 0}>\n                    <span>Zoom</span>\n                  </Toggle>\n                  <Toggle onClick={() => setToggle(1)} active={toggle === 1}>\n                    <span>Rotate</span>\n                  </Toggle>\n                </ToggleWrapper>\n                <Controls id=\"range\">\n                  <Range show={toggle === 0}>\n                    <RangeTrack id=\"scaleRange\">\n                      <input\n                        data-test-id=\"image-scale\"\n                        type=\"range\"\n                        step={0.05}\n                        min={1}\n                        value={scale}\n                        max={3}\n                        onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                          handleChange(e, 3, 'scale')\n                        }\n                      />\n                    </RangeTrack>\n                    <RangeLabels steps={5}>\n                      <li className=\"active selected\">1.0 x</li>\n                      <li>1.5 x</li>\n                      <li>2.0 x</li>\n                      <li>2.5 x</li>\n                      <li>3.0 x</li>\n                    </RangeLabels>\n                  </Range>\n                  <Range show={toggle === 1}>\n                    <RangeTrack id=\"rotateRange\">\n                      <input\n                        data-test-id=\"image-rotate\"\n                        type=\"range\"\n                        step={1}\n                        min={0}\n                        value={rotate}\n                        max={360}\n                        onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                          handleChange(e, 360, 'rotate')\n                        }\n                      />\n                    </RangeTrack>\n                    <RangeLabels steps={5}>\n                      <li className=\"active selected\">0&deg;</li>\n                      <li>90&deg;</li>\n                      <li>180&deg;</li>\n                      <li>270&deg;</li>\n                      <li>360&deg;</li>\n                    </RangeLabels>\n                  </Range>\n                </Controls>\n              </Fragment>\n            </Fragment>\n          </Wrapper>\n        ) : (\n          <Dropzone setImage={setDropped} setShow={setShow} />\n        )}\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default ImageUploader\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 600px;\n  max-height: 600px;\n  height: 100%;\n  background-color: #ffffff;\n  border-radius: 6px;\n  overflow: hidden;\n  position: relative;\n`\n\nconst ActionWrapper = styled.div`\n  display: inline-flex;\n  position: absolute;\n  top: 0;\n  z-index: 1;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  span {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 1.5rem;\n    color: #898989;\n    cursor: pointer;\n    .svg-fills {\n      margin-bottom: 0.15rem;\n    }\n    &:hover {\n      color: ${({ theme }) => theme.colors.primary};\n      .svg-strokes {\n        path {\n          stroke: ${({ theme }) => theme.colors.primary};\n        }\n      }\n      .svg-fills {\n        path {\n          fill: ${({ theme }) => theme.colors.primary};\n        }\n      }\n    }\n  }\n`\n\nconst CanvasGrid = styled.canvas`\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  margin: auto;\n  pointer-events: none;\n  z-index: 1;\n`\nconst Loader = styled.div`\n  position: absolute;\n  display: inline-flex;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  margin: auto;\n  pointer-events: none;\n  z-index: 1;\n  height: 50px;\n  width: 50px;\n  align-items: center;\n  justify-content: center;\n`\n\nconst CanvasCorner = styled.div`\n  width: 260px;\n  height: 260px;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  margin: auto;\n  pointer-events: none;\n  position: absolute;\n  z-index: 0;\n`\nconst Corner = styled.div<{\n  top?: string\n  left?: string\n  right?: string\n  bottom?: string\n}>`\n  height: 40px;\n  width: 40px;\n  position: absolute;\n  top: ${({ top }) => top || 'auto'};\n  bottom: ${({ bottom }) => bottom || 'auto'};\n  left: ${({ left }) => left || 'auto'};\n  right: ${({ right }) => right || 'auto'};\n  border-top: ${({ top }) => (top ? '3px' : 0)};\n  border-bottom: ${({ bottom }) => (bottom ? '3px' : 0)};\n  border-left: ${({ left }) => (left ? '3px' : 0)};\n  border-right: ${({ right }) => (right ? '3px' : 0)};\n  border-color: ${({ theme }) => theme.colors.primary};\n  border-style: solid;\n`\nconst CanvasWrapper = styled.div`\n  display: inline-flex;\n  position: relative;\n  width: 100%;\n`\nconst Controls = styled.div`\n  width: 100%;\n  padding: 0 3rem;\n`\nconst rangeThumb = `\n  width: 18px;\n  height: 18px;\n  margin: -8px -2px  0;\n  border-radius: 50%;\n  background: #fff;\n  cursor: pointer;\n  border: 2px solid rgba(240,132,56,1);\n\n`\nconst RangeTrack = styled.div`\n  width: 100%;\n  margin: auto;\n  height: 2px;\n  cursor: pointer;\n  background: #c4c4c4;\n`\n\nconst Range = styled.div<{ show: boolean }>`\n  display: ${({ show }) => (show ? 'block' : 'none')};\n  position: relative;\n  input {\n    width: 100%;\n    position: absolute;\n    top: 2px;\n    left: 0;\n    height: 0;\n    -webkit-appearance: none;\n    padding: 0;\n    border: 0;\n    &::-webkit-slider-thumb {\n      -webkit-appearance: none;\n      ${rangeThumb}\n    }\n\n    &::-moz-range-thumb {\n      ${rangeThumb}\n    }\n\n    &::-ms-thumb {\n      ${rangeThumb}\n    }\n\n    &:focus {\n      background: none;\n      outline: none;\n    }\n\n    &::-ms-track {\n      width: 100%;\n      cursor: pointer;\n      background: transparent;\n      border-color: transparent;\n      color: transparent;\n    }\n  }\n`\n\nconst RangeLabels = styled.ul<{ steps: number }>`\n  padding: 0;\n  list-style: none;\n  pointer-events: none;\n  width: ${({ steps }) => `calc(${(100 * steps) / (steps - 1) + '%'} - 25px)`};\n\n  top: 20px;\n  position: relative;\n  li {\n    float: left;\n    width: ${({ steps }) => 100 / steps + '%'};\n    color: #b2b2b2;\n    font-size: 14px;\n    align-items: center;\n  }\n`\nconst ToggleWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  width: 200px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 2rem;\n  margin-bottom: 2rem;\n`\nconst Toggle = styled.div<{ active: boolean }>`\n  width: 75px;\n  text-align: center;\n  cursor: pointer;\n  user-select: none;\n  border-bottom: ${({ active, theme }) =>\n    active && '2px solid \\u0020' + theme.colors.primary};\n  span {\n    transition: color 0.5s;\n    &:hover {\n      color: ${({ theme }) => theme.colors.primary};\n    }\n    color: ${({ active, theme }) => active && theme.colors.primary};\n  }\n`\n","import React, { Fragment, useEffect, useState } from 'react'\nimport { useFormContext } from 'react-hook-form'\nimport styled from 'styled-components'\nimport Input from '../../../components/form/Input'\nimport DustBinIcon from '../../../components/svgs/dustbin'\nimport PenIcon from '../../../components/svgs/pen'\nimport PersonIcon from '../../../components/svgs/person'\nimport ImageUploader from '../../../components/ui/imageUploader'\nimport { useNotify } from '../../../contexts/notify'\nimport { useResume } from '../../../contexts/resume'\nimport {\n  appendBlobToFromData,\n  deleteResumeAvatar,\n} from '../../../helpers/resume'\nimport { Button } from '../../../styled/button'\nimport { Spinner } from '../../../styled/loader'\nimport { IImgTransformStyle } from '../../../typings/imageUpload'\n\nconst Step1 = () => {\n  const [show, setShow] = useState(false)\n  const [loading, setLoading] = useState(false)\n\n  const { data } = useResume()\n  const [titleVal, setTitleVal] = useState('')\n  const { setNotify } = useNotify()\n  const { setValue } = useFormContext()\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.value.length > 30) {\n      setTitleVal(e.target.value.substring(0, 30))\n    } else {\n      setTitleVal(e.target.value)\n    }\n  }\n\n  useEffect(() => {\n    setTitleVal(data.title)\n  }, [data.title])\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setValue('title', titleVal, { shouldDirty: true })\n    }, 300)\n    return () => clearTimeout(timer)\n  }, [titleVal])\n\n  const canvasElement = async (\n    orignalImage: File | string,\n    processedCanvas: HTMLCanvasElement,\n    style: IImgTransformStyle\n  ) => {\n    return appendBlobToFromData(\n      orignalImage,\n      processedCanvas,\n      style,\n      data,\n      loading,\n      setLoading,\n      setValue,\n      setNotify\n    )\n  }\n  return (\n    <Fragment>\n      <TitleWrapper>\n        <input\n          name=\"title\"\n          placeholder=\"Untitled\"\n          value={titleVal}\n          onChange={(e) => handleChange(e)}\n          spellCheck={false}\n          autoComplete=\"off\"\n        />\n        <p id=\"mask\">{titleVal}</p>\n      </TitleWrapper>\n      <h3>Primary Details</h3>\n      <Grid className=\"mb-3\">\n        <div>\n          <p>\n            Let us know who you are, how employers can get in touch with you,\n            and what your profession is.\n          </p>\n        </div>\n        <FlexWrapper>\n          <ImgWrapper onClick={() => setShow(true)}>\n            {loading ? (\n              <Spinner type=\"primary\" size=\"1.2rem\" />\n            ) : data.avatar.processed ? (\n              <img src={data.avatar.processed} data-test-id=\"avatar\" />\n            ) : (\n              <PersonIcon size=\"2rem\" />\n            )}\n          </ImgWrapper>\n          {data.avatar.processed ? (\n            <ToggleButtonsWrapper>\n              <span onClick={() => setShow(true)} data-test-id=\"avatar-edit\">\n                <PenIcon size=\"1.1rem\" />\n              </span>\n              <span\n                onClick={() =>\n                  deleteResumeAvatar(\n                    data,\n                    loading,\n                    setLoading,\n                    setValue,\n                    setNotify\n                  )\n                }\n                data-test-id=\"avatar-delete\"\n              >\n                <DustBinIcon size=\"1rem\" />\n              </span>\n            </ToggleButtonsWrapper>\n          ) : (\n            <Button\n              btnType=\"ghost\"\n              type=\"button\"\n              disabled={loading}\n              size=\"sm\"\n              onClick={() => setShow(true)}\n              color=\"rgba(240, 132, 56, 1)\"\n            >\n              Upload Image\n            </Button>\n          )}\n\n          <ImageUploader\n            show={show}\n            setShow={setShow}\n            canvasElement={canvasElement}\n            img={data.avatar.orignal || null}\n            style={data.avatar.style}\n          />\n        </FlexWrapper>\n        <div>\n          <Input name=\"first_name\" label=\"First Name\" />\n        </div>\n        <div>\n          <Input name=\"last_name\" label=\"Last Name\" />\n        </div>\n        <div>\n          <Input name=\"email_address\" label=\"Email address\" />\n        </div>\n        <div>\n          <Input name=\"phone_number\" label=\"Phone number\" />\n        </div>\n        <div>\n          <Input name=\"designation\" label=\"Designation\" />\n        </div>\n        <div>\n          <Input name=\"address\" label=\"Address\" />\n        </div>\n      </Grid>\n    </Fragment>\n  )\n}\n\nexport default Step1\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 1.5rem;\n`\nconst ImgWrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: 75px;\n  height: 75px;\n  background-color: rgba(244, 245, 247, 1);\n  border-radius: 4px;\n  overflow: hidden;\n  margin-right: 1rem;\n  cursor: pointer;\n  img {\n    width: 100%;\n    height: 100%;\n  }\n`\nconst FlexWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  ${Button} {\n    width: fit-content;\n    padding-left: 1rem;\n    padding-right: 1rem;\n  }\n`\nconst ToggleButtonsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  span {\n    background-color: #eee;\n    height: 30px;\n    width: 30px;\n    margin-top: 0.2rem;\n    margin-bottom: 0.2rem;\n    border-radius: 6px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    &:hover {\n      background-color: ${({ theme }) => theme.shades.primary[4]};\n      color: ${({ theme }) => theme.colors.primary};\n\n      svg {\n        path {\n          fill: ${({ theme }) => theme.colors.primary};\n        }\n      }\n    }\n  }\n`\nconst TitleWrapper = styled.div`\n  overflow: hidden;\n  max-width: 100%;\n  position: relative;\n  top: -20px;\n  margin: 1rem 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  input {\n    background-color: transparent;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    left: 0px;\n    top: 0px;\n    padding: 0px;\n    margin: 0px;\n    border: none;\n    font-size: 2rem;\n    text-align: center;\n    z-index: 1;\n    color: #555;\n  }\n  input:focus {\n    color: #343434;\n  }\n  input:hover ~ p:after,\n  input:focus ~ p:after {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  p {\n    height: 100%;\n    position: relative;\n    width: fit-content;\n    font-size: 2rem;\n    text-align: center;\n    margin: 0;\n    color: transparent;\n    &:after {\n      content: '';\n      display: flex;\n      height: 2px;\n      z-index: 100;\n      bottom: -10px;\n      width: 100%;\n      background-color: transparent;\n    }\n  }\n`\n","import React, { Fragment, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport detectOutsideClick from '../../hooks/detectOutsideClick'\nimport SearchIcon from '../svgs/searchIcon'\n\ninterface IProps {\n  data: Array<any>\n  handleClick: (text: string) => void\n}\n\nconst SearchDropdown: React.FC<IProps> = ({ data, handleClick }) => {\n  const [show, setShow] = useState(false)\n  const [value, setValue] = useState('')\n  const [found, setFound] = useState<string[]>([])\n  const { isOutside, ref } = detectOutsideClick()\n\n  useEffect(() => {\n    if (!isOutside) return\n    setShow(false)\n  }, [isOutside])\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (data && ((found.length < 0 && data.length > 1) || value.length < 1)) {\n        const initialItems = data.filter((item, i) => i < 10)\n        setFound(initialItems)\n      }\n    }, 300)\n    return () => clearTimeout(timer)\n  }, [data, value])\n\n  useEffect(() => {\n    if (!value || value.length < 1) return\n    const timer = setTimeout(() => {\n      const find = data.filter((item) =>\n        item.text.toLowerCase().includes(value.toLowerCase())\n      )\n      if (find.length > 0) {\n        setFound(find)\n      }\n    }, 300)\n    return () => clearTimeout(timer)\n  }, [value])\n\n  const handle = (text: string) => {\n    handleClick(text)\n  }\n\n  return (\n    <Fragment>\n      <Wrapper ref={ref}>\n        <Button type='button' onClick={() => setShow(!show)}>\n          Choose Description <span>{data.length}</span>\n        </Button>\n        <DropdownWrapper show={show}>\n          <SearchWrapper>\n            <SearchIcon />\n            <input\n              type='text'\n              placeholder='Search keywords'\n              value={value}\n              onChange={(e) => setValue(e.target.value)}\n            />\n          </SearchWrapper>\n          <ListWrapper>\n            {found.map((item: any, i) => (\n              <li key={i} onClick={() => handle(item.text)}>\n                {item.text}\n              </li>\n            ))}\n          </ListWrapper>\n        </DropdownWrapper>\n      </Wrapper>\n    </Fragment>\n  )\n}\n\nexport default SearchDropdown\n\nconst Wrapper = styled.div`\n  display: block;\n  position: relative;\n`\nconst Button = styled.button`\n  color: #f08438;\n  background-color: #f4f5f7;\n  border-radius: 4px;\n  height: 32px;\n  display: flex;\n  align-items: center;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  font-size: 0.875rem;\n  position: relative;\n  span {\n    content: '';\n    width: 18px;\n    height: 18px;\n    background-color: #f08438;\n    color: #fff;\n    font-size: 0.625rem;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: absolute;\n    top: -5px;\n    right: -5px;\n  }\n`\nconst SearchWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-right: 1rem;\n  padding-left: 1rem;\n  border-bottom: 1px solid #e2e9f3;\n  input {\n    background-color: #fff;\n    border: none;\n  }\n`\nconst DropdownWrapper = styled.div<{ show: boolean }>`\n  width: 400px;\n  background-color: #fff;\n  box-shadow: 4px 4px 19px rgb(0 18 81 / 6%);\n  border-radius: 5px;\n  position: absolute;\n  right: 0;\n  top: 100%;\n  z-index: 10;\n  margin-top: 0.5rem;\n  border: 1px solid #f4f5f7;\n  transition: transform ease-in-out 200ms, opacity 300ms, visibility 300ms;\n  visibility: ${({ show }) => (show ? 'visible' : 'hidden')};\n  opacity: ${({ show }) => (show ? 1 : 0)};\n  transform: ${({ show }) => (show ? 'scale(1)' : 'scale(0)')};\n  transform-origin: 100% 0;\n`\nconst ListWrapper = styled.ul`\n  margin: 0.2rem;\n  max-height: 400px;\n  overflow-y: auto;\n  li {\n    padding: 0.5rem;\n    display: flex;\n    align-items: flex-start;\n    cursor: pointer;\n    transition: background-color 0.5s ease-in-out;\n    &:before {\n      content: '\\u2022';\n      font-size: 1.5rem;\n      line-height: 0.8;\n      margin-right: 0.5rem;\n      color: rgba(135, 135, 135, 1);\n    }\n    &:hover {\n      background-color: #f4f5f7;\n    }\n  }\n`\n","import React, { Fragment } from 'react'\nimport { useFormContext } from 'react-hook-form'\nimport styled from 'styled-components'\nimport RichTextEditor from '../../../components/form/RichTextEditor'\nimport SearchDropdown from '../../../components/ui/searchDropdown'\nimport { InvalidFeedBack } from '../../../styled/form'\n\nconst initalData = [\n  {\n    id: '1',\n    text: \"Sometimes there isn't a good answer. No matter how you try to rationalize the outcome, it doesn't make sense. And instead of an answer.\"\n  },\n  {\n    id: '2',\n    text: 'The chair sat in the corner where it had been for over 25 years. The only difference was there was someone actually sitting in it.'\n  },\n  {\n    id: '3',\n    text: \" She tried to explain that love wasn't like pie. There wasn't a set number of slices to be given out.\"\n  },\n  {\n    id: '4',\n    text: 'Her mom had warned her. She had been warned time and again, but she had refused to believe her.'\n  },\n  {\n    id: '5',\n    text: \" It was a concerning development that he couldn't get out of his mind.\"\n  },\n  {\n    id: '6',\n    text: 'Colors bounced around in her head. They mixed and threaded themselves together.'\n  },\n  {\n    id: '7',\n    text: 'The alarm went off and Jake rose awake. Rising early had become a daily ritual, one that he could not fully explain.'\n  },\n  {\n    id: '8',\n    text: 'Punctuality means time-sense. To fulfil your assignments on time is punctuality.'\n  },\n  {\n    id: '9',\n    text: 'Those who are punctual are loved and liked by all. They finish their job in time and are able to give finishing touches needed for the job'\n  }\n]\n\nconst Step2 = () => {\n  const {\n    setValue,\n    watch,\n    formState: { errors }\n  } = useFormContext()\n  const desc = watch('about_info')\n\n  const handleClick = (text: string) => {\n    const regex = /(<([^>]+)>)/gi\n    const hasTextinDescription = !!desc.replace(regex, '').length\n\n    const val = `${hasTextinDescription ? desc + '<br>' : ''}<p>${text}</p>`\n    setValue('about_info', val)\n  }\n\n  return (\n    <Fragment>\n      <div className='mb-3'>\n        <h2>Tell us about yourself</h2>\n        <p className='mb-3' style={{ maxWidth: '525px' }}>\n          This appears near the top of your resume. Impress employers with a\n          strong opening statement that sums up your strengths and experience.\n        </p>\n        <FlexWrapper>\n          <label>Short description</label>\n          <SearchDropdown data={initalData} handleClick={handleClick} />\n        </FlexWrapper>\n        <RichTextEditor name='about_info' />\n        {errors.about_info && (\n          <InvalidFeedBack style={{ marginTop: '0.5rem' }}>\n            {errors.about_info.message}\n          </InvalidFeedBack>\n        )}\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Step2\n\nconst FlexWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  margin-bottom: 0.5rem;\n  label {\n    margin-bottom: 0;\n  }\n`\n","import React, {\n  Fragment,\n  ReactElement,\n  ReactNode,\n  useEffect,\n  useRef,\n} from 'react'\nimport styled from 'styled-components'\nimport { Button } from '../../styled/button'\nimport DustBinIcon from '../svgs/dustbin'\nimport PlusIcon from '../svgs/plus'\nimport WarningIcon from '../svgs/warning'\n\ninterface IFormAcc {\n  children: ReactNode\n  icon: ReactElement\n  title: string\n  show: boolean\n  openIds: string | number | null\n  onClick: () => void\n  isError: boolean\n  length: number\n}\n\ninterface IFormItem {\n  open: boolean\n  title: string\n  description: string\n  handleOpen: () => void\n  handleDelete: () => void\n  children: ReactNode\n  isError: boolean\n}\n\ninterface IFormFooter {\n  title: string\n  onClick: () => void\n}\n\nconst FormAccordian = ({\n  children,\n  icon,\n  title,\n  show,\n  onClick,\n  openIds,\n  isError,\n  length,\n}: IFormAcc) => {\n  const ref = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    if (!ref || !ref.current) return\n    const items = ref.current.querySelectorAll('.item')\n\n    if (!items) return\n\n    let activeItem: HTMLElement | null = null\n\n    items.forEach((item) => {\n      const itemBody = item.children[1] as HTMLElement\n      if (!itemBody) return\n      itemBody.style.height = '0px'\n      if (item.classList.contains('active')) {\n        activeItem = itemBody\n        itemBody.style.height = itemBody.scrollHeight + 'px'\n      } else {\n        itemBody.style.height = '0px'\n        itemBody.style.overflow = 'hidden'\n      }\n    })\n\n    const timer = setTimeout(() => {\n      if (!activeItem) return\n      activeItem.style.overflow = 'visible'\n    }, 500)\n\n    return () => clearTimeout(timer)\n  }, [ref.current, openIds, length])\n\n  return (\n    <Fragment>\n      <Wrapper ref={ref} data-test-id={`acc_${title.toLowerCase()}`}>\n        <HeaderWrapper className=\"header\">\n          <Heading>\n            {icon}\n            <p>{title}</p>\n          </Heading>\n          <ToggleWrapper>\n            {isError && (\n              <IconWrapper style={{ marginRight: '1rem' }}>\n                <WarningIcon size=\"1.5rem\" color=\"rgba(244, 67, 54, 0.8)\" />\n              </IconWrapper>\n            )}\n            <Toggle active={show} onClick={onClick} data-test-id=\"acc_toggle\">\n              <PlusIcon size=\"1.2rem\" />\n            </Toggle>\n          </ToggleWrapper>\n        </HeaderWrapper>\n        {show && children}\n      </Wrapper>\n    </Fragment>\n  )\n}\n\nconst Item: React.FC<IFormItem> = ({\n  open,\n  title,\n  description,\n  handleOpen,\n  handleDelete,\n  children,\n  isError,\n}) => {\n  return (\n    <FormWrapper\n      className={`item ${open ? 'active' : 'inactive'} ${\n        isError ? 'error' : ''\n      }`}\n      data-test-id=\"acc_item\"\n    >\n      <FormHeader>\n        <div\n          style={{ cursor: 'pointer', userSelect: 'none' }}\n          onClick={handleOpen}\n        >\n          {!open && (\n            <Fragment>\n              <p style={{ fontSize: '16px', marginBottom: '0.5rem' }}>\n                {title}\n              </p>\n              <p style={{ color: '#A8A8A8' }}>{description}</p>\n            </Fragment>\n          )}\n        </div>\n        <ToggleDelete onClick={handleDelete} data-test-id=\"acc_item_delete\">\n          <DustBinIcon size=\"1.1rem\" />\n        </ToggleDelete>\n      </FormHeader>\n      <FormItemBody> {children}</FormItemBody>\n    </FormWrapper>\n  )\n}\n\nconst Footer: React.FC<IFormFooter> = ({ title, onClick }) => {\n  return (\n    <Fragment>\n      <AccFooter className=\"item\">\n        <Button\n          type=\"button\"\n          btnType=\"link\"\n          data-test-id=\"acc_add\"\n          onClick={onClick}\n        >\n          <PlusIcon /> {title}\n        </Button>\n      </AccFooter>\n    </Fragment>\n  )\n}\n\nFormAccordian.Item = Item\nFormAccordian.Footer = Footer\n\nexport default FormAccordian\n\nconst Wrapper = styled.div`\n  display: block;\n  padding-right: 0.7rem;\n  padding-left: 0.7rem;\n  width: 100%;\n  background: #ffffff;\n  box-shadow: 4px 1px 8px rgba(0, 50, 61, 0.08);\n  border: 1px solid #f5f5f5;\n  border-radius: 6px;\n  margin-bottom: 1.5rem;\n  transition: all ease-in-out;\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n`\n\nconst HeaderWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 90% 10%;\n  min-height: 65px;\n  padding-right: 0.5rem;\n  padding-left: 0.5rem;\n  user-select: none;\n  width: 100%;\n`\n\nconst Toggle = styled.div<{ active: boolean }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    transition: transform 300ms;\n    transform: ${({ active }) => (active ? `rotateZ(45deg)` : `rotateZ(0deg)`)};\n  }\n\n  &:hover {\n    svg {\n      path {\n        stroke: ${({ theme }) => theme.colors.primary};\n      }\n    }\n  }\n`\nconst Heading = styled.div`\n  display: flex;\n  align-items: center;\n  height: 100%;\n  p {\n    font-size: 1.125rem;\n    margin-left: 1.5rem;\n  }\n  svg {\n    margin-bottom: 0.4rem;\n  }\n`\nconst FormWrapper = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n  border: 1px solid #f2f5fa;\n  border-radius: 6px;\n  padding: 0.8rem;\n  margin-bottom: 1rem;\n  width: 100%;\n  &.error {\n    border-color: rgba(244, 67, 54, 0.6);\n    background: rgb(244 67 54 / 1%);\n  }\n`\nconst FormHeader = styled.div`\n  display: grid;\n  grid-template-columns: 95% 5%;\n  width: 100%;\n  div {\n    p {\n      margin-top: 0;\n      margin-bottom: 0.2rem;\n    }\n  }\n`\nconst ToggleDelete = styled.div`\n  display: block;\n  cursor: pointer;\n  text-align: center;\n  &:hover {\n    svg {\n      path {\n        fill: ${({ theme }) => theme.colors.primary};\n      }\n    }\n  }\n`\nconst AccFooter = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  justify-content: flex-start;\n  margin-bottom: 1rem;\n  ${Button} {\n    width: fit-content;\n    svg {\n      margin-right: 0.7rem;\n      path {\n        stroke: ${({ theme }) => theme.colors.primary};\n      }\n    }\n  }\n`\nconst FormItemBody = styled.div`\n  display: block;\n  transition: height 0.3s;\n  height: 0px;\n  overflow: hidden;\n\n  .invalid-feild {\n    height: 0;\n    position: relative;\n    top: 5px;\n  }\n`\nconst IconWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  svg {\n    margin: 0;\n  }\n`\n","import styled from 'styled-components'\n\nexport const Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 1.5rem;\n  margin-bottom: 1.5rem;\n`\nexport const SubGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 1.5rem;\n`\n\nexport const Heading = styled.div`\n  display: flex;\n  align-items: center;\n  height: 100%;\n  p {\n    font-size: 1.125rem;\n    margin-left: 1.5rem;\n  }\n  svg {\n    margin-bottom: 0.4rem;\n  }\n`\n","import dayjs from 'dayjs'\nimport React, { Fragment, useEffect, useState } from 'react'\nimport { useFormContext, useController } from 'react-hook-form'\nimport styled from 'styled-components'\nimport detectOutsideClick from '../../hooks/detectOutsideClick'\nimport DownArrowIcon from '../svgs/downArrow'\n\nconst months = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec'\n]\n\ninterface IInput {\n  name: string\n}\n\nconst DatePicker: React.FC<\n  IInput &\n    React.DetailedHTMLProps<\n      React.InputHTMLAttributes<HTMLInputElement>,\n      HTMLInputElement\n    >\n> = ({ name, ...props }) => {\n  const currYear = dayjs().format('YYYY')\n  const [show, setShow] = useState<boolean>(false)\n  const [year, setYear] = useState<string>(dayjs().format('YYYY'))\n  const [month, setMonth] = useState<string | null>(null)\n  const [inputVal, setInputVal] = useState('')\n  const { isOutside, ref } = detectOutsideClick()\n  const { control, trigger } = useFormContext()\n\n  const {\n    field: { onChange, onBlur, value }\n  } = useController({\n    name,\n    control\n  })\n\n  useEffect(() => {\n    return setShow(false)\n  }, [isOutside])\n\n  useEffect(() => {\n    return setInputVal(value)\n  }, [])\n\n  useEffect(() => {\n    const triggerName = name.split('.', 3)\n    trigger(triggerName.join('.'))\n    return\n  }, [value])\n\n  const isNumeric = (num: any) =>\n    (typeof num === 'number' ||\n      (typeof num === 'string' && num.trim() !== '')) &&\n    !isNaN(num as number)\n\n  const detect = (e: any) => {\n    const regex = new RegExp('([0-9]+)|([a-zA-Z]+)', 'g')\n\n    const value = e.target.value.replace(/[^a-zA-Z0-9]/g, '')\n\n    const arr = value.match(regex)\n\n    const find = (arr: string[]) => {\n      return (\n        arr &&\n        arr.reduce(\n          (acc: any, curr: string) => {\n            let val = curr\n            if (!acc.mm) {\n              if (isNumeric(val)) {\n                let mm = parseInt(val.substring(0, 2))\n                mm > 12 ? (mm = 12) : mm < 1 ? (mm = 1) : mm\n                acc.mm = months[mm - 1]\n                val = val.substring(mm.toString().length)\n              } else {\n                let mm = val.substring(0, 3)\n                let find = months.filter((m) =>\n                  m.toLowerCase().includes(mm.toLowerCase())\n                )\n                if (find && find.length > 0) {\n                  acc.mm = find[0]\n                } else {\n                  mm = val.substring(0, 2)\n                  find = months.filter((m) =>\n                    m.toLowerCase().includes(mm.toLowerCase())\n                  )\n                  acc.mm = find[0]\n                }\n              }\n            }\n            if (!acc.yyyy) {\n              if (isNumeric(curr) && val.length >= 4) {\n                let yyyy = val.substring(0, 4)\n                parseInt(yyyy) > 2099\n                  ? (yyyy = currYear)\n                  : parseInt(yyyy) < 1999\n                  ? (yyyy = currYear)\n                  : yyyy\n                acc.yyyy = yyyy\n              }\n            }\n\n            return acc\n          },\n          { mm: '', yyyy: '' }\n        )\n      )\n    }\n    const found = find(arr)\n    if (found) {\n      found.yyyy ? setYear(found.yyyy) : setYear(year)\n      found.mm ? setMonth(found.mm) : setMonth('Jan')\n    }\n  }\n\n  const handlePrev = () => {\n    const prev = dayjs(year).subtract(1, 'year').format('YYYY')\n    if (parseInt(prev) < 1999) return\n    setYear(prev)\n    setInputVal(`${month} ${prev}`)\n    onChange(`${month} ${prev}`)\n  }\n\n  const handleNext = () => {\n    const add = dayjs(year).add(1, 'year').format('YYYY')\n    if (parseInt(add) > 2099) return\n    setYear(add)\n    setInputVal(`${month} ${add}`)\n    onChange(`${month} ${add}`)\n  }\n\n  const handleValue = (month: string) => {\n    setMonth(month)\n    setInputVal(`${month} ${year}`)\n    onChange(`${month} ${year}`)\n    setShow(false)\n  }\n\n  const handleChange = (e: React.FocusEvent<HTMLInputElement>) => {\n    detect(e)\n    setInputVal(e.target.value)\n  }\n\n  const handleBlur = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.value.length === 0) {\n      onChange('')\n    } else {\n      detect(e)\n      if (month) {\n        onChange(`${month} ${year}`)\n        setInputVal(`${month} ${year}`)\n      }\n    }\n\n    onBlur()\n  }\n\n  const handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    const key = e.keyCode || e.which\n    if (key === 13) {\n      detect(e)\n      if (month) {\n        onChange(`${month} ${year}`)\n        setInputVal(`${month} ${year}`)\n      }\n      setShow(false)\n    }\n  }\n\n  return (\n    <Fragment>\n      <Wrapper ref={ref}>\n        <input\n          onClick={() => setShow(true)}\n          onBlur={handleBlur}\n          onChange={handleChange}\n          onKeyPress={handleKeyPress}\n          value={inputVal}\n          name={name}\n          autoComplete='off'\n          placeholder='Select Date'\n          {...props}\n        />\n        {show && (\n          <PickerWrapper>\n            <YearWrapper>\n              <div>\n                <span\n                  style={{ transform: 'rotateZ(90deg)' }}\n                  onClick={handlePrev}\n                >\n                  <DownArrowIcon />\n                </span>\n              </div>\n              <div>{year}</div>\n              <div>\n                <span\n                  style={{ transform: 'rotateZ(270deg)' }}\n                  onClick={handleNext}\n                >\n                  <DownArrowIcon />\n                </span>\n              </div>\n            </YearWrapper>\n            <MonthsWrapper>\n              {months.map((item, i) => (\n                <Months\n                  key={i}\n                  onClick={() => handleValue(item)}\n                  active={month === item}\n                >\n                  {item}\n                </Months>\n              ))}\n            </MonthsWrapper>\n          </PickerWrapper>\n        )}\n      </Wrapper>\n    </Fragment>\n  )\n}\n\nexport default DatePicker\n\nconst MonthsWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 25%);\n`\nconst Months = styled.div<{ active: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 48px;\n  border-right: 1px solid #f2f5fa;\n  border-bottom: 1px solid #f2f5fa;\n  cursor: pointer;\n  transition: all 300ms;\n  color: ${({ theme, active }) => active && theme.colors.primary};\n  background: ${({ theme, active }) => active && theme.shades.primary[4]};\n\n  &:hover {\n    color: ${({ theme }) => theme.colors.primary};\n    background: ${({ theme }) => theme.shades.primary[4]};\n  }\n`\n\nconst Wrapper = styled.div`\n  position: relative;\n`\nconst YearWrapper = styled.div`\n  display: grid;\n  height: 55px;\n  grid-template-columns: 15% 70% 15%;\n  justify-content: center;\n  align-items: center;\n  border-bottom: 1px solid #f2f5fa;\n  user-select: none;\n  div {\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    span {\n      cursor: pointer;\n      path {\n        transition: all 300ms;\n      }\n      &:hover {\n        path {\n          stroke: ${({ theme }) => theme.colors.primary};\n        }\n      }\n    }\n  }\n`\nconst PickerWrapper = styled.div`\n  width: 230px;\n  height: 200px;\n  background-color: #fff;\n  border: 1px solid rgba(0, 45, 112, 0.06);\n  box-shadow: 4px 4px 5px rgba(0, 25, 88, 0.04);\n  border-radius: 4px;\n  position: absolute;\n  z-index: 1;\n`\n","import React, { Fragment } from 'react'\nimport Input from '../../../../components/form/Input'\nimport DegreeHatIcon from '../../../../components/svgs/degreeHatIcon'\nimport { useFieldArray, useFormContext } from 'react-hook-form'\nimport FormAccordian from '../../../../components/accordian/formAccordian'\nimport { Grid } from '../styled'\nimport DatePicker from '../../../../components/form/datePicker'\nimport { InvalidFeedBack } from '../../../../styled/form'\nimport {\n  resumeAddItemToAccoridan,\n  resumeDeleteAccordianItem,\n  resumeOpensAccordianItem,\n  resumeToggleAccordian,\n} from '../../../../helpers/resume'\n\ninterface ICourse {\n  institution: string | undefined\n  course: string | undefined\n  duration: {\n    start: string | undefined\n    end: string | undefined\n  }\n}\n\ninterface IDefault {\n  courses: ICourse[]\n}\ninterface IProps {\n  data: any\n  show: boolean\n  setShow: (val: string | null) => void\n  open: string | null\n  setOpen: (val: string | null) => void\n}\n\nconst CoursesAccordian: React.FC<IProps> = ({\n  data,\n  show,\n  setShow,\n  open,\n  setOpen,\n}) => {\n  const { courses } = data\n  const defaultValues = {\n    institution: '',\n    course: '',\n    duration: {\n      start: '',\n      end: '',\n    },\n  }\n\n  const {\n    control,\n    trigger,\n    formState: { errors },\n  } = useFormContext<IDefault>()\n\n  const { fields, append, remove } = useFieldArray({\n    control,\n    name: 'courses',\n  })\n\n  return (\n    <Fragment>\n      <FormAccordian\n        openIds={open}\n        show={show}\n        onClick={() =>\n          resumeToggleAccordian(\n            'courses',\n            courses,\n            defaultValues,\n            append,\n            show,\n            setShow,\n            setOpen\n          )\n        }\n        title=\"Courses\"\n        icon={<DegreeHatIcon size=\"2.2rem\" color=\"#343434\" />}\n        isError={!!errors['courses']}\n        length={courses.length}\n      >\n        {fields.map((item, i) => (\n          <Fragment key={item.id}>\n            <FormAccordian.Item\n              title={\n                courses[i].course ? courses[i].course : '(Unknown institution)'\n              }\n              description={\n                courses[i].course &&\n                courses[i].duration.start + '-' + courses[i].duration.end\n              }\n              open={open === 'courses.' + i}\n              handleDelete={() => resumeDeleteAccordianItem(remove, i)}\n              handleOpen={() =>\n                resumeOpensAccordianItem('courses', i, trigger, open, setOpen)\n              }\n              isError={errors['courses'] && errors['courses'][i] ? true : false}\n            >\n              <Grid>\n                <div>\n                  <Input\n                    name={`courses.${i}.course`}\n                    label=\"Course\"\n                    className=\"smb\"\n                    isFieldArray={true}\n                  />\n                </div>\n                <div>\n                  <Input\n                    name={`courses.${i}.institution`}\n                    label=\"Name of institution\"\n                    className=\"smb\"\n                    isFieldArray={true}\n                  />\n                </div>\n\n                <div className=\"smb\">\n                  <label>Start date</label>\n\n                  <DatePicker name={`courses.${i}.duration.start`} />\n                  {errors.courses &&\n                  (errors as any).courses[i] &&\n                  (errors as any).courses[i].duration &&\n                  (errors as any).courses[i].duration.message ? (\n                    <InvalidFeedBack className=\"invalid-feild\">\n                      {(errors as any).courses[i].duration?.message}\n                    </InvalidFeedBack>\n                  ) : null}\n                </div>\n                <div>\n                  <label>End date</label>\n\n                  <DatePicker name={`courses.${i}.duration.end`} />\n                </div>\n              </Grid>\n            </FormAccordian.Item>\n          </Fragment>\n        ))}\n        <FormAccordian.Footer\n          title={'Add another course'}\n          onClick={() =>\n            resumeAddItemToAccoridan(\n              'courses',\n              fields.length,\n              defaultValues,\n              append,\n              setOpen\n            )\n          }\n        />\n      </FormAccordian>\n    </Fragment>\n  )\n}\n\nexport default CoursesAccordian\n","import React, { Fragment } from 'react'\nimport Input from '../../../../components/form/Input'\nimport DegreeHatIcon from '../../../../components/svgs/degreeHatIcon'\nimport { useFieldArray, useFormContext } from 'react-hook-form'\nimport FormAccordian from '../../../../components/accordian/formAccordian'\nimport { Grid, SubGrid } from '../styled'\nimport DatePicker from '../../../../components/form/datePicker'\nimport { InvalidFeedBack } from '../../../../styled/form'\nimport RichTextEditor from '../../../../components/form/RichTextEditor'\nimport {\n  resumeAddItemToAccoridan,\n  resumeDeleteAccordianItem,\n  resumeOpensAccordianItem,\n  resumeToggleAccordian,\n} from '../../../../helpers/resume'\n\ninterface IEdu {\n  institution: string | undefined\n  degree: string | undefined\n  duration: {\n    start: string | undefined\n    end: string | undefined\n  }\n  city: string | undefined\n  description: string | undefined\n}\n\ninterface IDefault {\n  education: IEdu[]\n}\ninterface IProps {\n  data: any\n  show: boolean\n  setShow: (val: string | null) => void\n  open: string | null\n  setOpen: (val: string | null) => void\n}\n\nconst EducationAccordian: React.FC<IProps> = ({\n  data,\n  show,\n  setShow,\n  open,\n  setOpen,\n}) => {\n  const { education } = data\n  const defaultValues = {\n    institution: '',\n    degree: '',\n    duration: {\n      start: '',\n      end: '',\n    },\n    city: '',\n    description: '',\n  }\n\n  const {\n    control,\n    trigger,\n    formState: { errors },\n  } = useFormContext<IDefault>()\n\n  const { fields, append, remove } = useFieldArray({\n    control,\n    name: 'education',\n  })\n\n  return (\n    <Fragment>\n      <FormAccordian\n        openIds={open}\n        show={show}\n        onClick={() =>\n          resumeToggleAccordian(\n            'education',\n            education,\n            defaultValues,\n            append,\n            show,\n            setShow,\n            setOpen\n          )\n        }\n        title=\"Education\"\n        icon={<DegreeHatIcon size=\"2.2rem\" color=\"#343434\" />}\n        isError={!!errors['education']}\n        length={education.length}\n      >\n        {fields.map((item, i) => (\n          <Fragment key={item.id}>\n            <FormAccordian.Item\n              title={\n                education[i].institution\n                  ? education[i].institution\n                  : '(Unknown institution)'\n              }\n              description={\n                education[i].institution &&\n                education[i].duration.start + '-' + education[i].duration.end\n              }\n              open={open === 'education.' + i}\n              handleDelete={() => resumeDeleteAccordianItem(remove, i)}\n              handleOpen={() =>\n                resumeOpensAccordianItem('education', i, trigger, open, setOpen)\n              }\n              isError={\n                errors['education'] && errors['education'][i] ? true : false\n              }\n            >\n              <Grid>\n                <div>\n                  <Input\n                    name={`education.${i}.institution`}\n                    label=\"Name of institution\"\n                    placeholder=\"e.g. Pulchowk Engineering\"\n                    className=\"smb\"\n                    isFieldArray={true}\n                  />\n                </div>\n                <div>\n                  <Input\n                    name={`education.${i}.degree`}\n                    label=\"Degree\"\n                    placeholder=\"Educaton degree\"\n                    className=\"smb\"\n                    isFieldArray={true}\n                  />\n                </div>\n                <div className=\"smb\">\n                  <label>Start and End date</label>\n                  <SubGrid>\n                    <div>\n                      <DatePicker name={`education.${i}.duration.start`} />\n                    </div>\n                    <div>\n                      <DatePicker name={`education.${i}.duration.end`} />\n                    </div>\n                  </SubGrid>\n                  {errors.education &&\n                  (errors as any).education[i] &&\n                  (errors as any).education[i].duration &&\n                  (errors as any).education[i].duration.message ? (\n                    <InvalidFeedBack className=\"invalid-feild\">\n                      {(errors as any).education[i].duration?.message}\n                    </InvalidFeedBack>\n                  ) : null}\n                </div>\n                <div>\n                  <Input\n                    name={`education.${i}.city`}\n                    label=\"City\"\n                    placeholder=\"e.g. California\"\n                    className=\"smb\"\n                    isFieldArray={true}\n                  />\n                </div>\n              </Grid>\n              <div className=\"mb-2\">\n                <RichTextEditor\n                  name={`education.${i}.description`}\n                  maxHeight=\"150px\"\n                  formats={['bold', 'italic', 'underline', 'list', 'bullet']}\n                  modules={{\n                    toolbar: [\n                      ['bold', 'italic', 'underline'],\n                      [{ list: 'ordered' }, { list: 'bullet' }],\n                    ],\n                  }}\n                />\n                {errors.education &&\n                (errors as any).education[i] &&\n                (errors as any).education[i].description &&\n                (errors as any).education[i].description.message ? (\n                  <InvalidFeedBack className=\"invalid-feild\">\n                    {(errors as any).education[i].description?.message}\n                  </InvalidFeedBack>\n                ) : null}\n              </div>\n            </FormAccordian.Item>\n          </Fragment>\n        ))}\n        <FormAccordian.Footer\n          title={'Add education'}\n          onClick={() =>\n            resumeAddItemToAccoridan(\n              'education',\n              fields.length,\n              defaultValues,\n              append,\n              setOpen\n            )\n          }\n        />\n      </FormAccordian>\n    </Fragment>\n  )\n}\n\nexport default EducationAccordian\n","import React, { Fragment } from 'react'\nimport { useFieldArray, useFormContext } from 'react-hook-form'\nimport FormAccordian from '../../../../components/accordian/formAccordian'\nimport DatePicker from '../../../../components/form/datePicker'\nimport Input from '../../../../components/form/Input'\nimport RichTextEditor from '../../../../components/form/RichTextEditor'\nimport BreifCaseIcon from '../../../../components/svgs/breifCaseIcon'\nimport {\n  resumeAddItemToAccoridan,\n  resumeDeleteAccordianItem,\n  resumeOpensAccordianItem,\n  resumeToggleAccordian,\n} from '../../../../helpers/resume'\nimport { InvalidFeedBack } from '../../../../styled/form'\nimport { Grid, SubGrid } from '../styled'\n\ninterface IExp {\n  company: string | undefined\n  designation: string | undefined\n  duration: {\n    start: string | undefined\n    end: string | undefined\n  }\n  city: string | undefined\n  description: string | undefined\n}\n\ninterface IDefault {\n  experience: IExp[]\n}\ninterface IProps {\n  data: any\n  show: boolean\n  setShow: (val: string | null) => void\n  open: string | null\n  setOpen: (val: string | null) => void\n}\n\nconst Experience: React.FC<IProps> = ({\n  data,\n  show,\n  setShow,\n  open,\n  setOpen,\n}) => {\n  const { experience } = data\n  const defaultValues = {\n    company: '',\n    designation: '',\n    duration: {\n      start: '',\n      end: '',\n    },\n    city: '',\n    description: '',\n  }\n\n  const {\n    control,\n    trigger,\n    formState: { errors },\n  } = useFormContext<IDefault>()\n\n  const { fields, append, remove } = useFieldArray({\n    control,\n    name: 'experience',\n  })\n\n  return (\n    <Fragment>\n      <FormAccordian\n        openIds={open}\n        show={show}\n        onClick={() =>\n          resumeToggleAccordian(\n            'experience',\n            experience,\n            defaultValues,\n            append,\n            show,\n            setShow,\n            setOpen\n          )\n        }\n        title=\"Experience\"\n        icon={<BreifCaseIcon size=\"1.8rem\" color=\"#343434\" />}\n        isError={!!errors['experience']}\n        length={experience.length}\n      >\n        {fields.map((item, i) => (\n          <Fragment key={item.id}>\n            <FormAccordian.Item\n              title={\n                experience[i].company\n                  ? experience[i].company\n                  : '(Unknown company)'\n              }\n              description={\n                experience[i].company &&\n                experience[i].duration.start + '-' + experience[i].duration.end\n              }\n              open={open === 'experience.' + i ? true : false}\n              handleDelete={() => resumeDeleteAccordianItem(remove, i)}\n              handleOpen={() =>\n                resumeOpensAccordianItem(\n                  'experience',\n                  i,\n                  trigger,\n                  open,\n                  setOpen\n                )\n              }\n              isError={\n                errors['experience'] && errors['experience'][i] ? true : false\n              }\n            >\n              <Grid>\n                <div>\n                  <Input\n                    name={`experience.${i}.company`}\n                    label=\"Company name\"\n                    placeholder=\"e.g. Google\"\n                    className=\"smb\"\n                    isFieldArray={true}\n                  />\n                </div>\n                <div>\n                  <Input\n                    name={`experience.${i}.designation`}\n                    label=\"Designation\"\n                    placeholder=\"e.g. Content Writer\"\n                    className=\"smb\"\n                    isFieldArray={true}\n                  />\n                </div>\n                <div className=\"smb\">\n                  <label>Start and End date</label>\n                  <SubGrid>\n                    <div>\n                      <DatePicker name={`experience.${i}.duration.start`} />\n                    </div>\n                    <div>\n                      <DatePicker name={`experience.${i}.duration.end`} />\n                    </div>\n                  </SubGrid>\n                  {errors.experience &&\n                  (errors as any).experience[i] &&\n                  (errors as any).experience[i].duration &&\n                  (errors as any).experience[i].duration.message ? (\n                    <InvalidFeedBack className=\"invalid-feild\">\n                      {(errors as any).experience[i].duration?.message}\n                    </InvalidFeedBack>\n                  ) : null}\n                </div>\n                <div>\n                  <Input\n                    name={`experience.${i}.city`}\n                    label=\"City\"\n                    placeholder=\"e.g. California\"\n                    className=\"smb\"\n                    isFieldArray={true}\n                  />\n                </div>\n              </Grid>\n              <div className=\"mb-2\">\n                <RichTextEditor\n                  name={`experience.${i}.description`}\n                  maxHeight=\"150px\"\n                  formats={['bold', 'italic', 'underline', 'list', 'bullet']}\n                  modules={{\n                    toolbar: [\n                      ['bold', 'italic', 'underline'],\n                      [{ list: 'ordered' }, { list: 'bullet' }],\n                    ],\n                  }}\n                />\n                {errors.experience &&\n                (errors as any).experience[i] &&\n                (errors as any).experience[i].description &&\n                (errors as any).experience[i].description.message ? (\n                  <InvalidFeedBack className=\"invalid-feild\">\n                    {(errors as any).experience[i].description?.message}\n                  </InvalidFeedBack>\n                ) : null}\n              </div>\n            </FormAccordian.Item>\n          </Fragment>\n        ))}\n        <FormAccordian.Footer\n          title={'Add another experience'}\n          onClick={() =>\n            resumeAddItemToAccoridan(\n              'experience',\n              fields.length,\n              defaultValues,\n              append,\n              setOpen\n            )\n          }\n        />\n      </FormAccordian>\n    </Fragment>\n  )\n}\n\nexport default Experience\n","import React, { Fragment } from 'react'\ninterface IconProps {\n  size?: string\n  color?: string\n  className?: string\n}\nconst InternshipIcon = ({ size, color, className }: IconProps) => {\n  return (\n    <Fragment>\n      <svg\n        width={size || '1rem'}\n        className={className || ''}\n        height={size || '1rem'}\n        viewBox='0 0 30 30'\n        fill='none'\n        xmlns='http://www.w3.org/2000/svg'\n      >\n        <path\n          d='M28.6406 18.1874C28.5492 18.1551 28.4654 18.1067 28.374 18.0663C25.7461 16.9528 23.1258 15.8474 20.5055 14.7258C20.0865 14.5483 19.6904 14.4434 19.2715 14.6774C19.1039 14.7662 19.043 14.6855 19.0506 14.5079C19.0506 14.4273 19.0506 14.3466 19.0506 14.2659C19.0506 11.2239 19.0277 8.17383 19.0582 5.13184C19.0734 4.00219 18.685 3.58261 17.6414 3.62295C16.5217 3.6633 15.3867 3.63102 14.2518 3.63102C13.8709 3.63102 13.8557 3.61488 13.8557 3.20337C13.8557 2.51751 13.8557 1.83165 13.8557 1.14579C13.848 0.411516 13.4748 0.00806894 12.774 0.00806894C10.5803 0 8.39414 0 6.20039 0C5.48438 0 5.11875 0.403447 5.11113 1.16193C5.10352 1.83972 5.11113 2.50944 5.11113 3.18723C5.11113 3.61488 5.10352 3.62295 4.69219 3.62295C3.4582 3.62295 2.2166 3.62295 0.982617 3.62295C0.418945 3.62295 0.167578 3.81661 0 4.38143C0 8.779 0 13.1766 0 17.5741C0.167578 18.1309 0.411328 18.3246 0.982617 18.3326C1.02832 18.3326 1.08164 18.3326 1.12734 18.3326C4.22754 18.3326 7.33535 18.3326 10.4355 18.3326C10.5498 18.3326 10.6564 18.3246 10.7783 18.3246C10.1689 18.7038 10.1613 19.5914 10.7479 19.9787C10.9002 20.0836 11.0678 20.1562 11.2354 20.2288C11.8904 20.5112 12.5455 20.7856 13.2006 21.0599C13.7338 21.2859 13.7338 21.2859 13.7338 21.9152C13.7338 23.9002 13.7338 25.8851 13.7338 27.8782C13.7338 27.9992 13.7338 28.1202 13.7414 28.2413C13.7795 28.8061 14.1451 29.1934 14.6783 29.2338C14.8002 29.2418 14.9221 29.2418 15.0516 29.2418C18.2279 29.2418 21.4119 29.2257 24.5883 29.2499C25.5404 29.258 25.9289 28.8061 25.9137 27.854C25.8832 25.8206 25.9061 23.7792 25.9061 21.7458C25.9061 21.3101 25.9213 21.2859 26.3098 21.1245C26.6068 20.9954 26.9115 20.8743 27.2086 20.7372C27.3914 20.6565 27.46 20.713 27.4447 20.9066C27.4371 20.9873 27.4447 21.068 27.4447 21.1487C27.4447 22.8835 27.4371 24.6183 27.4523 26.3531C27.46 26.918 27.7875 27.3214 28.2674 27.4021C28.7168 27.4747 29.09 27.1923 29.25 26.6598C29.25 24.0777 29.25 21.4956 29.25 18.9136C29.1967 18.5343 28.9605 18.3165 28.6406 18.1874ZM17.2605 15.3794C17.2605 15.565 17.2225 15.6618 17.0473 15.7264C16.5521 15.92 16.0646 16.1379 15.5467 16.3557C15.5467 15.8555 15.5467 15.3955 15.5467 14.9356C15.5467 13.6688 15.5467 12.402 15.5467 11.1271C15.5467 10.9495 15.5771 10.8689 15.76 10.8285C16.2932 10.6994 16.773 10.4493 17.2148 10.1023C17.2986 10.1669 17.2605 10.2556 17.2605 10.3282C17.2529 12.0227 17.2529 13.7011 17.2605 15.3794ZM6.90879 2.08985C6.90879 1.94461 6.94688 1.90427 7.08398 1.90427C8.68359 1.91234 10.2832 1.91234 11.8828 1.90427C12.0199 1.90427 12.058 1.94461 12.058 2.08985C12.0504 2.56592 12.0504 3.03392 12.058 3.50999C12.0656 3.67944 12.0123 3.72785 11.8523 3.72785C11.0525 3.71978 10.2527 3.72785 9.45293 3.72785C8.68359 3.72785 7.91426 3.71978 7.1373 3.73592C6.95449 3.73592 6.90117 3.6875 6.90117 3.48578C6.92402 3.01778 6.91641 2.54978 6.90879 2.08985ZM3.3668 16.3799C3.19922 16.5494 2.77266 16.4284 2.46035 16.4284C2.27754 16.4284 2.09473 16.4203 1.91953 16.4284C1.76719 16.4364 1.70625 16.4041 1.70625 16.2266C1.71387 14.2094 1.71387 12.2002 1.71387 10.183C1.71387 10.1669 1.72148 10.1427 1.73672 10.0942C2.20137 10.4493 2.68125 10.7075 3.21445 10.8366C3.39727 10.885 3.42773 10.9657 3.42773 11.1351C3.42012 12.5553 3.42773 13.9754 3.42012 15.3955C3.42773 15.7344 3.56484 16.1863 3.3668 16.3799ZM3.83906 9.1179C2.60508 8.90004 1.73672 7.79459 1.71387 6.47129C1.70625 6.17274 1.61484 5.77736 1.75957 5.59177C1.9043 5.40619 2.29277 5.53529 2.57461 5.53529C4.875 5.52722 7.18301 5.53529 9.4834 5.53529C11.9895 5.53529 14.4879 5.53529 16.9939 5.52722C17.1996 5.52722 17.2758 5.56757 17.2605 5.80157C17.2377 6.26956 17.2758 6.74563 17.1463 7.21363C16.8264 8.33521 15.8666 9.14211 14.7621 9.15824C13.9242 9.17438 13.0863 9.15824 12.2484 9.16631C12.0809 9.16631 12.0428 9.10176 12.0504 8.94038C12.0656 8.70638 12.058 8.48045 12.0504 8.24645C12.0352 7.74618 11.6771 7.35887 11.1973 7.35887C10.0547 7.3508 8.91211 7.3508 7.76953 7.35887C7.28965 7.35887 6.93164 7.74618 6.91641 8.26259C6.91641 8.29487 6.91641 8.32714 6.91641 8.35135C6.90117 8.61762 7.03066 8.9888 6.86309 9.12597C6.71074 9.26314 6.37559 9.17438 6.1166 9.16631C5.35488 9.15017 4.59316 9.247 3.83906 9.1179ZM10.3365 10.1184C10.3137 10.6026 9.93281 10.9899 9.4834 10.9899C9.03398 10.9899 8.65312 10.6107 8.63027 10.1184C8.61504 9.86024 8.63789 9.59396 8.62266 9.33576C8.61504 9.19859 8.66836 9.16631 8.78262 9.16631C9.01875 9.17438 9.25488 9.16631 9.49102 9.16631C9.71953 9.16631 9.94805 9.17438 10.1766 9.16631C10.2984 9.15824 10.3441 9.19859 10.3365 9.33576C10.3365 9.59396 10.3518 9.85217 10.3365 10.1184ZM9.47578 16.4284C8.1123 16.4284 6.75645 16.4203 5.39297 16.4364C5.17969 16.4364 5.13398 16.3799 5.13398 16.154C5.1416 14.5241 5.1416 12.8861 5.13398 11.2562C5.13398 11.0383 5.17969 10.9657 5.39297 10.9738C5.88047 10.998 6.36035 10.9899 6.84785 10.9738C7.00781 10.9738 7.06875 11.0302 7.1373 11.1755C7.60957 12.2164 8.39414 12.7893 9.4834 12.7812C10.5727 12.7812 11.3572 12.2083 11.8219 11.1674C11.8828 11.0383 11.9361 10.9738 12.0885 10.9738C12.5988 10.9818 13.1168 10.9818 13.6271 10.9738C13.7719 10.9738 13.8176 11.006 13.8176 11.1674C13.81 12.8538 13.81 14.5322 13.8176 16.2186C13.8176 16.4445 13.7109 16.4203 13.5738 16.4203C12.218 16.4284 10.8469 16.4284 9.47578 16.4284ZM23.8799 27.3214C22.0518 27.3214 20.2236 27.3214 18.3955 27.3214C17.5119 27.3214 16.6283 27.3214 15.7371 27.3214C15.6152 27.3214 15.5238 27.3295 15.5314 27.1439C15.5391 25.4414 15.5391 23.7388 15.5391 22.0363C15.5391 22.0201 15.5543 22.004 15.5695 21.9636C16.3617 22.2945 17.1539 22.6334 17.9461 22.9723C18.3955 23.1659 18.8525 23.3354 19.2943 23.5452C19.66 23.7227 19.9951 23.7065 20.3607 23.5532C21.5338 23.0449 22.7145 22.5527 23.8951 22.0524C23.9561 22.0282 24.017 22.004 24.1084 21.9636C24.1084 23.7227 24.1008 25.4333 24.116 27.152C24.116 27.3618 24.0018 27.3214 23.8799 27.3214ZM24.0779 20.0029C22.7297 20.5758 21.3814 21.1406 20.0408 21.7135C19.9266 21.7619 19.8275 21.8103 19.6904 21.7539C17.6947 20.9066 15.699 20.0594 13.7033 19.2121C13.6805 19.2041 13.6652 19.1799 13.6119 19.1395C14.1527 18.9055 14.6707 18.6877 15.1811 18.4698C16.6664 17.8404 18.1518 17.211 19.6371 16.5817C19.7437 16.5333 19.8428 16.501 19.957 16.5575C21.9604 17.4128 23.9713 18.26 25.9746 19.1153C25.9898 19.1234 25.9898 19.1476 26.0203 19.1879C25.3729 19.4542 24.7254 19.7285 24.0779 20.0029Z'\n          fill={color || '#898989'}\n        />\n      </svg>\n    </Fragment>\n  )\n}\n\nexport default InternshipIcon\n","import React, { Fragment } from 'react'\nimport { useFieldArray, useFormContext } from 'react-hook-form'\nimport FormAccordian from '../../../../components/accordian/formAccordian'\nimport DatePicker from '../../../../components/form/datePicker'\nimport Input from '../../../../components/form/Input'\nimport RichTextEditor from '../../../../components/form/RichTextEditor'\nimport InternshipIcon from '../../../../components/svgs/internship'\nimport {\n  resumeAddItemToAccoridan,\n  resumeDeleteAccordianItem,\n  resumeOpensAccordianItem,\n  resumeToggleAccordian,\n} from '../../../../helpers/resume'\nimport { InvalidFeedBack } from '../../../../styled/form'\nimport { Grid, SubGrid } from '../styled'\n\ninterface IIntern {\n  job_title: string | undefined\n  employer: string | undefined\n  duration: {\n    start: string | undefined\n    end: string | undefined\n  }\n  city: string | undefined\n  description: string | undefined\n}\n\ninterface IDefault {\n  internships: IIntern[]\n}\n\ninterface IProps {\n  data: any\n  show: boolean\n  setShow: (val: string | null) => void\n  open: string | null\n  setOpen: (val: string | null) => void\n}\n\nconst InternshipAccordian: React.FC<IProps> = ({\n  data,\n  show,\n  setShow,\n  open,\n  setOpen,\n}) => {\n  const { internships } = data\n  const defaultValues = {\n    job_title: '',\n    employer: '',\n    duration: {\n      start: '',\n      end: '',\n    },\n    city: '',\n    description: '',\n  }\n\n  const {\n    control,\n    trigger,\n    formState: { errors },\n  } = useFormContext<IDefault>()\n\n  const { fields, append, remove } = useFieldArray({\n    control,\n    name: 'internships',\n  })\n\n  return (\n    <Fragment>\n      <FormAccordian\n        openIds={open}\n        show={show}\n        onClick={() =>\n          resumeToggleAccordian(\n            'internships',\n            internships,\n            defaultValues,\n            append,\n            show,\n            setShow,\n            setOpen\n          )\n        }\n        title=\"Internships\"\n        icon={<InternshipIcon size=\"1.8rem\" color=\"#343434\" />}\n        isError={!!errors['internships']}\n        length={internships.length}\n      >\n        {fields.map((item, i) => (\n          <Fragment key={item.id}>\n            <FormAccordian.Item\n              title={\n                internships[i].job_title\n                  ? internships[i].job_title\n                  : '(Unspecified)'\n              }\n              description={\n                internships[i].job_title &&\n                internships[i].duration.start +\n                  '-' +\n                  internships[i].duration.end\n              }\n              open={open === 'internships.' + i ? true : false}\n              handleDelete={() => resumeDeleteAccordianItem(remove, i)}\n              handleOpen={() =>\n                resumeOpensAccordianItem(\n                  'internships',\n                  i,\n                  trigger,\n                  open,\n                  setOpen\n                )\n              }\n              isError={\n                errors['internships'] && errors['internships'][i] ? true : false\n              }\n            >\n              <Grid>\n                <div>\n                  <Input\n                    name={`internships.${i}.job_title`}\n                    label=\"Job Title\"\n                    className=\"smb\"\n                    isFieldArray={true}\n                  />\n                </div>\n                <div>\n                  <Input\n                    name={`internships.${i}.employer`}\n                    label=\"Employer\"\n                    className=\"smb\"\n                    isFieldArray={true}\n                  />\n                </div>\n                <div className=\"smb\">\n                  <label>Start and End date</label>\n                  <SubGrid>\n                    <div>\n                      <DatePicker name={`internships.${i}.duration.start`} />\n                    </div>\n                    <div>\n                      <DatePicker name={`internships.${i}.duration.end`} />\n                    </div>\n                  </SubGrid>\n                  {errors.internships &&\n                  (errors as any).internships[i] &&\n                  (errors as any).internships[i].duration &&\n                  (errors as any).internships[i].duration.message ? (\n                    <InvalidFeedBack className=\"invalid-feild\">\n                      {(errors as any).internships[i].duration?.message}\n                    </InvalidFeedBack>\n                  ) : null}\n                </div>\n                <div>\n                  <Input\n                    name={`internships.${i}.city`}\n                    label=\"City\"\n                    className=\"smb\"\n                    isFieldArray={true}\n                  />\n                </div>\n              </Grid>\n              <div className=\"mb-2\">\n                <RichTextEditor\n                  name={`internships.${i}.description`}\n                  maxHeight=\"150px\"\n                  formats={['bold', 'italic', 'underline', 'list', 'bullet']}\n                  modules={{\n                    toolbar: [\n                      ['bold', 'italic', 'underline'],\n                      [{ list: 'ordered' }, { list: 'bullet' }],\n                    ],\n                  }}\n                />\n                {errors.internships &&\n                (errors as any).internships[i] &&\n                (errors as any).internships[i].description &&\n                (errors as any).internships[i].description.message ? (\n                  <InvalidFeedBack className=\"invalid-feild\">\n                    {(errors as any).internships[i].description?.message}\n                  </InvalidFeedBack>\n                ) : null}\n              </div>\n            </FormAccordian.Item>\n          </Fragment>\n        ))}\n        <FormAccordian.Footer\n          title={'Add another internship'}\n          onClick={() =>\n            resumeAddItemToAccoridan(\n              'internships',\n              fields.length,\n              defaultValues,\n              append,\n              setOpen\n            )\n          }\n        />\n      </FormAccordian>\n    </Fragment>\n  )\n}\n\nexport default InternshipAccordian\n","import React, { Fragment } from 'react'\ninterface IconProps {\n  size?: string\n  color?: string\n  className?: string\n}\nconst LanguagesIcon = ({ size, color, className }: IconProps) => {\n  return (\n    <Fragment>\n      <svg\n        width={size || '1rem'}\n        className={className || ''}\n        height={size || '1rem'}\n        viewBox='0 0 23 28'\n        fill='none'\n        xmlns='http://www.w3.org/2000/svg'\n      >\n        <path\n          d='M10.0693 16.4952C9.69273 16.286 9.33286 16.06 8.97299 15.8257C8.76377 15.6918 8.74703 15.5913 8.87256 15.3654C10.6217 12.4362 11.6846 9.2811 12.0528 5.88328C12.0779 5.68242 12.1532 5.64894 12.329 5.65731C13.1742 5.66568 14.0195 5.67405 14.8732 5.65731C15.8021 5.64058 16.4214 4.75346 16.1285 3.88308C15.936 3.32236 15.4255 2.97923 14.7644 2.97923C13.0989 2.97923 11.4419 2.97086 9.77642 2.97923C9.55882 2.97923 9.49187 2.92064 9.50024 2.70305C9.51698 2.32644 9.51698 1.94984 9.50024 1.57323C9.4584 0.845127 8.88093 0.309509 8.1612 0.309509C7.44146 0.309509 6.864 0.853496 6.83889 1.5816C6.82215 1.9331 6.81378 2.29297 6.83889 2.64447C6.85563 2.90391 6.78868 2.97923 6.52087 2.97923C4.88054 2.96249 3.24021 2.97086 1.59151 2.97086C1.17306 2.97086 0.804826 3.07966 0.51191 3.38094C0.126935 3.77428 0.0181379 4.34338 0.235732 4.83715C0.478434 5.38114 0.905254 5.65731 1.49109 5.65731C4.00179 5.66568 6.5125 5.65731 9.02321 5.65731C9.14037 5.65731 9.24917 5.65731 9.38307 5.65731C9.05668 8.49441 8.20304 11.1223 6.79705 13.6246C6.70499 13.4907 6.63803 13.3987 6.57945 13.3066C6.07731 12.5199 5.70907 11.6663 5.458 10.7708C5.24041 9.97573 4.52904 9.54891 3.7842 9.75813C3.05609 9.95899 2.67112 10.6871 2.88034 11.4654C3.26532 12.93 3.9181 14.2607 4.82196 15.4658C5.22367 16.0098 5.22367 16.0014 4.78848 16.537C3.96832 17.5246 3.07283 18.4284 2.08529 19.2402C1.68357 19.575 1.42413 19.9683 1.47435 20.504C1.53293 21.0396 1.80911 21.4162 2.31125 21.6254C2.81339 21.8263 3.27369 21.7342 3.69214 21.3994C4.92238 20.3868 6.04383 19.2653 7.03975 18.01C7.15691 17.8677 7.22387 17.8342 7.37451 17.9598C7.8097 18.3029 8.28673 18.5791 8.7805 18.8385C9.51698 19.2319 10.3037 19.031 10.6803 18.3531C11.0485 17.6752 10.7974 16.8969 10.0693 16.4952Z'\n          fill={color || '#e0e0e0'}\n        />\n        <path\n          d='M22.8322 25.3329C22.1041 22.0439 21.376 18.7465 20.6396 15.4658C20.2211 13.6163 18.723 12.386 16.8902 12.3777C15.0407 12.3693 13.5343 13.5744 13.1074 15.4575C12.3542 18.7716 11.6177 22.0941 10.8813 25.4166C10.8227 25.676 10.8143 25.9355 10.9064 26.1949C11.0989 26.764 11.6345 27.149 12.2203 27.1239C12.848 27.0988 13.3501 26.672 13.5008 26.0275C13.8021 24.6969 14.095 23.3578 14.3879 22.0188C14.4297 21.8263 14.4799 21.7259 14.7227 21.7342C16.1621 21.751 17.61 21.7426 19.0494 21.7342C19.2419 21.7342 19.3089 21.7844 19.3507 21.9769C19.6353 23.2909 19.9282 24.6048 20.2211 25.9187C20.3801 26.6468 20.8906 27.0904 21.5685 27.082C22.464 27.0737 23.0415 26.2786 22.8322 25.3329ZM18.3967 19.0478C18.1372 19.0394 17.8861 19.0394 17.6267 19.0394C17.3673 19.0394 17.1162 19.0394 16.8568 19.0394C16.455 19.0394 16.0617 19.0394 15.66 19.0394C15.5261 19.0394 15.3922 19.0394 15.2583 19.0478C15.0909 19.0478 15.0407 19.0059 15.0742 18.8386C15.2917 17.8845 15.4926 16.922 15.7186 15.9763C15.8608 15.3905 16.3379 15.0139 16.8819 15.0306C17.4342 15.0474 17.8694 15.4156 18.0033 15.9931C18.2125 16.9137 18.4134 17.8426 18.631 18.7632C18.6979 19.0143 18.631 19.0561 18.3967 19.0478Z'\n          fill={color || '#e0e0e0'}\n        />\n      </svg>\n    </Fragment>\n  )\n}\n\nexport default LanguagesIcon\n","import React, { Fragment } from 'react'\nimport { useFieldArray, useFormContext } from 'react-hook-form'\nimport FormAccordian from '../../../../components/accordian/formAccordian'\nimport Input from '../../../../components/form/Input'\nimport LanguagesIcon from '../../../../components/svgs/language'\nimport {\n  resumeAddItemToAccoridan,\n  resumeDeleteAccordianItem,\n  resumeOpensAccordianItem,\n  resumeToggleAccordian,\n} from '../../../../helpers/resume'\nimport { Grid } from '../styled'\n\ninterface ILang {\n  language: string | undefined\n  level: string | undefined\n}\n\ninterface IDefault {\n  languages: ILang[]\n}\n\ninterface IProps {\n  data: any\n  show: boolean\n  setShow: (val: string | null) => void\n  open: string | null\n  setOpen: (val: string | null) => void\n}\n\nconst LanguagesAccordian: React.FC<IProps> = ({\n  data,\n  show,\n  setShow,\n  open,\n  setOpen,\n}) => {\n  const { languages } = data\n  const defaultValues = {\n    language: '',\n    level: '',\n  }\n\n  const {\n    control,\n    trigger,\n    formState: { errors },\n  } = useFormContext<IDefault>()\n\n  const { fields, append, remove } = useFieldArray({\n    control,\n    name: 'languages',\n  })\n\n  return (\n    <Fragment>\n      <FormAccordian\n        openIds={open}\n        show={show}\n        onClick={() =>\n          resumeToggleAccordian(\n            'languages',\n            languages,\n            defaultValues,\n            append,\n            show,\n            setShow,\n            setOpen\n          )\n        }\n        title=\"Languages\"\n        icon={<LanguagesIcon size=\"1.8rem\" color=\"#343434\" />}\n        isError={!!errors['languages']}\n        length={languages.length}\n      >\n        {fields.map((item, i) => (\n          <Fragment key={item.id}>\n            <FormAccordian.Item\n              title={\n                languages[i].language ? languages[i].langauge : '(Unspecified)'\n              }\n              description={languages[i].language && languages[i].level}\n              open={open === 'languages.' + i ? true : false}\n              handleDelete={() => resumeDeleteAccordianItem(remove, i)}\n              handleOpen={() =>\n                resumeOpensAccordianItem('languages', i, trigger, open, setOpen)\n              }\n              isError={\n                errors['languages'] && errors['languages'][i] ? true : false\n              }\n            >\n              <Grid>\n                <div>\n                  <Input\n                    name={`languages.${i}.language`}\n                    label=\"Language\"\n                    className=\"smb\"\n                    isFieldArray={true}\n                  />\n                </div>\n                <div>\n                  <Input\n                    name={`languages.${i}.level`}\n                    label=\"Level\"\n                    className=\"smb\"\n                    isFieldArray={true}\n                  />\n                </div>\n              </Grid>\n            </FormAccordian.Item>\n          </Fragment>\n        ))}\n        <FormAccordian.Footer\n          title={'Add another language'}\n          onClick={() =>\n            resumeAddItemToAccoridan(\n              'languages',\n              fields.length,\n              defaultValues,\n              append,\n              setOpen\n            )\n          }\n        />\n      </FormAccordian>\n    </Fragment>\n  )\n}\n\nexport default LanguagesAccordian\n","import React, { Fragment } from 'react'\ninterface IconProps {\n  size?: string\n  color?: string\n  className?: string\n}\nconst CertificateIcon = ({ size, color, className }: IconProps) => {\n  return (\n    <Fragment>\n      <svg\n        width={size || '1rem'}\n        height={size || '1rem'}\n        className={className || ''}\n        viewBox='0 0 18 18'\n        fill='none'\n        xmlns='http://www.w3.org/2000/svg'\n      >\n        <path\n          d='M0.511719 2.79742C0.511719 2.23654 0.734528 1.69863 1.13113 1.30203C1.52773 0.905426 2.06564 0.682617 2.62653 0.682617H15.3154C15.8762 0.682617 16.4142 0.905426 16.8108 1.30203C17.2074 1.69863 17.4302 2.23654 17.4302 2.79742V6.12401C17.1115 5.83868 16.7558 5.59754 16.3728 5.40709V2.79742C16.3728 2.51698 16.2614 2.24803 16.0631 2.04973C15.8648 1.85143 15.5958 1.74002 15.3154 1.74002H2.62653C2.34608 1.74002 2.07713 1.85143 1.87883 2.04973C1.68053 2.24803 1.56912 2.51698 1.56912 2.79742V11.2566C1.56912 11.5371 1.68053 11.806 1.87883 12.0043C2.07713 12.2026 2.34608 12.3141 2.62653 12.3141H10.3012C10.3815 12.4335 10.4672 12.5499 10.557 12.6619V13.3715H2.62653C2.06564 13.3715 1.52773 13.1486 1.13113 12.752C0.734528 12.3554 0.511719 11.8175 0.511719 11.2566V2.79742Z'\n          fill={color || '#898989'}\n          fillOpacity='0.69'\n        />\n        <path\n          d='M17.9594 9.67108C17.9594 10.6798 17.5566 11.5934 16.902 12.2617V16.5442C16.902 16.6424 16.8747 16.7386 16.8231 16.8222C16.7715 16.9057 16.6976 16.9732 16.6098 17.0171C16.522 17.061 16.4236 17.0796 16.3259 17.0708C16.2281 17.0619 16.1347 17.0261 16.0561 16.9672L14.5757 15.8569C14.4842 15.7882 14.3729 15.7511 14.2585 15.7511C14.1441 15.7511 14.0328 15.7882 13.9413 15.8569L12.4609 16.9672C12.3824 17.0261 12.289 17.0619 12.1912 17.0708C12.0934 17.0796 11.9951 17.061 11.9073 17.0171C11.8195 16.9732 11.7456 16.9057 11.694 16.8222C11.6424 16.7386 11.615 16.6424 11.615 16.5442V12.2617C11.1902 11.8281 10.8786 11.2967 10.7075 10.7143C10.5365 10.1319 10.5114 9.51639 10.6343 8.92198C10.7573 8.32756 11.0246 7.77251 11.4126 7.30574C11.8006 6.83897 12.2975 6.4748 12.8595 6.24534C13.4214 6.01587 14.0312 5.92815 14.635 5.98991C15.2389 6.05166 15.8183 6.26099 16.3222 6.59945C16.826 6.93791 17.2389 7.39511 17.5244 7.93077C17.81 8.46642 17.9594 9.06408 17.9594 9.67108ZM14.2585 13.372C13.6907 13.372 13.1535 13.2451 12.6724 13.0156V15.2224L13.9868 14.4336C14.0689 14.3844 14.1628 14.3584 14.2585 14.3584C14.3542 14.3584 14.4482 14.3844 14.5303 14.4336L15.8446 15.2224V13.0156C15.349 13.251 14.8072 13.3727 14.2585 13.372ZM14.2585 12.3146C14.9596 12.3146 15.632 12.0361 16.1278 11.5403C16.6235 11.0446 16.902 10.3722 16.902 9.67108C16.902 8.96997 16.6235 8.29759 16.1278 7.80183C15.632 7.30608 14.9596 7.02757 14.2585 7.02757C13.5574 7.02757 12.885 7.30608 12.3893 7.80183C11.8935 8.29759 11.615 8.96997 11.615 9.67108C11.615 10.3722 11.8935 11.0446 12.3893 11.5403C12.885 12.0361 13.5574 12.3146 14.2585 12.3146Z'\n          fill={color || '#898989'}\n          fillOpacity='0.69'\n        />\n        <path\n          d='M3.68457 4.38417C3.68457 4.24395 3.74027 4.10947 3.83942 4.01032C3.93857 3.91117 4.07305 3.85547 4.21327 3.85547H13.7299C13.8701 3.85547 14.0046 3.91117 14.1038 4.01032C14.2029 4.10947 14.2586 4.24395 14.2586 4.38417C14.2586 4.52439 14.2029 4.65887 14.1038 4.75802C14.0046 4.85717 13.8701 4.91287 13.7299 4.91287H4.21327C4.07305 4.91287 3.93857 4.85717 3.83942 4.75802C3.74027 4.65887 3.68457 4.52439 3.68457 4.38417Z'\n          fill={color || '#898989'}\n          fillOpacity='0.69'\n        />\n        <path\n          d='M4.21327 9.14258C4.07305 9.14258 3.93857 9.19828 3.83942 9.29743C3.74027 9.39658 3.68457 9.53106 3.68457 9.67128C3.68457 9.8115 3.74027 9.94598 3.83942 10.0451C3.93857 10.1443 4.07305 10.2 4.21327 10.2H8.44289C8.58311 10.2 8.71758 10.1443 8.81673 10.0451C8.91588 9.94598 8.97159 9.8115 8.97159 9.67128C8.97159 9.53106 8.91588 9.39658 8.81673 9.29743C8.71758 9.19828 8.58311 9.14258 8.44289 9.14258H4.21327Z'\n          fill={color || '#898989'}\n          fillOpacity='0.69'\n        />\n      </svg>\n    </Fragment>\n  )\n}\n\nexport default CertificateIcon\n","import React, { Fragment } from 'react'\ninterface IconProps {\n  size?: string\n  color?: string\n  className?: string\n}\nconst ReferenceIcon = ({ size, color, className }: IconProps) => {\n  return (\n    <Fragment>\n      <svg\n        width={size || '1rem'}\n        className={className || ''}\n        height={size || '1rem'}\n        viewBox='0 0 20 16'\n        fill='none'\n        xmlns='http://www.w3.org/2000/svg'\n      >\n        <g clipPath='url(#clip0_4_654)'>\n          <path\n            d='M19.4285 4.08281C19.3725 4.30199 19.3267 4.52117 19.2606 4.73015C19.0774 5.32142 18.7517 5.83114 18.3192 6.2644C16.7722 7.81394 15.2253 9.36348 13.6732 10.913C13.1796 11.4074 12.5893 11.7337 11.9125 11.9019C11.5665 11.9885 11.2663 11.8764 11.0983 11.6062C10.9457 11.3616 10.9609 11.0353 11.1441 10.806C11.2357 10.6887 11.3528 10.6072 11.5003 10.5715C12.055 10.4492 12.4926 10.1331 12.8896 9.73047C14.3653 8.2421 15.8512 6.76392 17.3269 5.27555C18.1207 4.48039 18.2581 3.36921 17.6933 2.44153C16.9809 1.27428 15.3423 1.01942 14.3144 1.92162C14.2482 1.97768 14.1821 2.04395 14.121 2.10511C12.5995 3.62917 11.078 5.15322 9.55647 6.67217C9.03233 7.19208 8.7779 7.81394 8.83896 8.55812C8.85423 8.72123 8.89494 8.87924 8.92038 9.04235C8.97127 9.41445 8.74737 9.74067 8.38607 9.81712C8.02478 9.89358 7.67875 9.69989 7.57697 9.33289C7.30727 8.33895 7.43449 7.39087 7.93827 6.49377C8.11128 6.18794 8.33519 5.92289 8.58453 5.67823C10.101 4.15927 11.6174 2.64032 13.1338 1.12136C13.9327 0.3313 14.8894 -0.0509873 16.0242 0.00508155C17.5406 0.0764418 18.9603 1.24369 19.3115 2.73206C19.3522 2.91556 19.3878 3.09906 19.4285 3.27746C19.4285 3.54761 19.4285 3.81266 19.4285 4.08281Z'\n            fill={color || '#898989'}\n          />\n          <path\n            d='M11.9583 7.62029C11.9481 8.69069 11.5665 9.5674 10.8388 10.2912C9.3122 11.8254 7.78051 13.3597 6.24881 14.8888C4.9054 16.2294 2.93608 16.367 1.41457 15.2405C-0.229075 14.0274 -0.488598 11.5094 0.87008 9.98027C0.987119 9.84775 1.10925 9.72032 1.23646 9.59289C2.71727 8.10961 4.19808 6.62634 5.67888 5.14306C6.19793 4.62315 6.80348 4.27145 7.5159 4.10324C7.91281 4.0064 8.2792 4.20519 8.38606 4.57218C8.49801 4.95447 8.29446 5.33676 7.88737 5.4387C7.34288 5.57123 6.92052 5.87196 6.52869 6.25934C5.04789 7.75281 3.5569 9.23609 2.0761 10.7245C1.23138 11.5757 1.1296 12.799 1.82166 13.7267C2.59005 14.7614 4.11157 14.9245 5.08351 14.0784C5.15984 14.0121 5.23108 13.9408 5.30232 13.8694C6.80348 12.3657 8.30464 10.857 9.81089 9.35332C10.4622 8.70598 10.7014 7.9516 10.4928 7.0494C10.3961 6.62634 10.62 6.25934 11.0067 6.17269C11.3935 6.08604 11.7497 6.3307 11.8413 6.74867C11.8769 6.91688 11.9125 7.08508 11.9329 7.25329C11.9532 7.39091 11.9532 7.52344 11.9583 7.62029Z'\n            fill={color || '#898989'}\n          />\n        </g>\n        <defs>\n          <clipPath id='clip0_4_654'>\n            <rect width='19.4286' height='16' fill={color || '#898989'} />\n          </clipPath>\n        </defs>\n      </svg>\n    </Fragment>\n  )\n}\n\nexport default ReferenceIcon\n","import React, { Fragment } from 'react'\nimport styled from 'styled-components'\nimport CertificateIcon from '../../../../components/svgs/certificate'\nimport InternshipIcon from '../../../../components/svgs/internship'\nimport LanguagesIcon from '../../../../components/svgs/language'\nimport PlusIcon from '../../../../components/svgs/plus'\nimport ReferenceIcon from '../../../../components/svgs/reference'\n\nconst OtherSection = ({\n  otherFields,\n  setOtherFields,\n}: {\n  otherFields: Array<string>\n  setOtherFields: (val: any) => void\n}) => {\n  return (\n    <Fragment>\n      <Wrapper>\n        <Heading>\n          <PlusIcon size=\"1.4rem\" />\n          <p>Add other sections</p>\n        </Heading>\n        <Grid>\n          {!otherFields.includes('courses') && (\n            <div\n              onClick={() => setOtherFields([...otherFields, 'courses'])}\n              data-test-id=\"add_courses\"\n            >\n              <span>\n                <CertificateIcon size=\"1.2rem\" />\n              </span>\n              <p>Courses</p>\n            </div>\n          )}\n\n          {!otherFields.includes('internships') && (\n            <div\n              onClick={() => setOtherFields([...otherFields, 'internships'])}\n              data-test-id=\"add_internships\"\n            >\n              <span>\n                <InternshipIcon size=\"1.2rem\" />\n              </span>\n              <p>Internships</p>\n            </div>\n          )}\n\n          {!otherFields.includes('languages') && (\n            <div\n              onClick={() => setOtherFields([...otherFields, 'languages'])}\n              data-test-id=\"add_languages\"\n            >\n              <span>\n                <LanguagesIcon size=\"1.2rem\" />\n              </span>\n              <p>Languages</p>\n            </div>\n          )}\n\n          {!otherFields.includes('references') && (\n            <div\n              onClick={() => setOtherFields([...otherFields, 'references'])}\n              data-test-id=\"add_references\"\n            >\n              <span>\n                <ReferenceIcon size=\"1.2rem\" />\n              </span>\n              <p>References</p>\n            </div>\n          )}\n        </Grid>\n      </Wrapper>\n    </Fragment>\n  )\n}\n\nexport default OtherSection\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 0.8rem 1.5rem;\n  width: 100%;\n  background: #ffffff;\n  box-shadow: 4px 1px 8px rgba(0, 50, 61, 0.08);\n  border: 1px solid #f5f5f5;\n  border-radius: 6px;\n  margin-bottom: 1.5rem;\n`\n\nconst Heading = styled.div`\n  display: flex;\n  align-items: center;\n  height: 100%;\n  p {\n    font-size: 1.125rem;\n    margin-left: 1.5rem;\n  }\n  svg {\n    path {\n      stroke: #343434;\n    }\n  }\n`\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  justify-content: space-between;\n  max-width: 600px;\n  padding-top: 1rem;\n  padding-bottom: 0.5rem;\n  div {\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    p {\n      font-size: 1rem;\n      margin: 0;\n      transition: color 0.5s;\n    }\n    span {\n      display: inline-flex;\n      margin-right: 1rem;\n      margin-top: 0.2rem;\n      svg {\n        path {\n          fill: #343434;\n          transition: fill 0.5s;\n        }\n      }\n    }\n    &:hover {\n      p {\n        color: ${({ theme }) => theme.colors.primary};\n      }\n      svg {\n        path {\n          fill: ${({ theme }) => theme.colors.primary};\n        }\n      }\n    }\n  }\n`\n","import React, { Fragment } from 'react'\nimport { useFieldArray, useFormContext } from 'react-hook-form'\nimport FormAccordian from '../../../../components/accordian/formAccordian'\nimport Input from '../../../../components/form/Input'\nimport ReferenceIcon from '../../../../components/svgs/reference'\nimport {\n  resumeAddItemToAccoridan,\n  resumeDeleteAccordianItem,\n  resumeOpensAccordianItem,\n  resumeToggleAccordian,\n} from '../../../../helpers/resume'\nimport { Grid } from '../styled'\n\ninterface IRef {\n  name: string | undefined\n  company: string | undefined\n  phone_number: string | undefined\n  email_address: string | undefined\n}\n\ninterface IDefault {\n  references: IRef[]\n}\n\ninterface IProps {\n  data: any\n  show: boolean\n  setShow: (val: string | null) => void\n  open: string | null\n  setOpen: (val: string | null) => void\n}\n\nconst RefrencesAccordian: React.FC<IProps> = ({\n  data,\n  show,\n  setShow,\n  open,\n  setOpen,\n}) => {\n  const { references } = data\n  const defaultValues = {\n    name: '',\n    company: '',\n    phone_number: '',\n    email_address: '',\n  }\n\n  const {\n    control,\n    trigger,\n    formState: { errors },\n  } = useFormContext<IDefault>()\n\n  const { fields, append, remove } = useFieldArray({\n    control,\n    name: 'references',\n  })\n\n  return (\n    <Fragment>\n      <FormAccordian\n        openIds={open}\n        show={show}\n        onClick={() =>\n          resumeToggleAccordian(\n            'references',\n            references,\n            defaultValues,\n            append,\n            show,\n            setShow,\n            setOpen\n          )\n        }\n        title=\"References\"\n        icon={<ReferenceIcon size=\"1.8rem\" color=\"#343434\" />}\n        isError={!!errors['references']}\n        length={references.length}\n      >\n        {fields.map((item, i) => (\n          <Fragment key={item.id}>\n            <FormAccordian.Item\n              title={references[i].name ? references[i].name : '(Unspecified)'}\n              description={references[i].name && references[i].company}\n              open={open === 'references.' + i ? true : false}\n              handleDelete={() => resumeDeleteAccordianItem(remove, i)}\n              handleOpen={() =>\n                resumeOpensAccordianItem(\n                  'references',\n                  i,\n                  trigger,\n                  open,\n                  setOpen\n                )\n              }\n              isError={\n                errors['references'] && errors['references'][i] ? true : false\n              }\n            >\n              <Grid>\n                <div>\n                  <Input\n                    name={`references.${i}.name`}\n                    label=\"Referent's full name\"\n                    className=\"smb\"\n                    isFieldArray={true}\n                  />\n                </div>\n                <div>\n                  <Input\n                    name={`references.${i}.company`}\n                    label=\"Company\"\n                    className=\"smb\"\n                    isFieldArray={true}\n                  />\n                </div>\n                <div>\n                  <Input\n                    name={`references.${i}.phone_number`}\n                    label=\"Phone\"\n                    className=\"smb\"\n                    isFieldArray={true}\n                  />\n                </div>\n                <div>\n                  <Input\n                    name={`references.${i}.email_address`}\n                    label=\"Email\"\n                    className=\"smb\"\n                    isFieldArray={true}\n                  />\n                </div>\n              </Grid>\n            </FormAccordian.Item>\n          </Fragment>\n        ))}\n        <FormAccordian.Footer\n          title={'Add another reference'}\n          onClick={() =>\n            resumeAddItemToAccoridan(\n              'references',\n              fields.length,\n              defaultValues,\n              append,\n              setOpen\n            )\n          }\n        />\n      </FormAccordian>\n    </Fragment>\n  )\n}\n\nexport default RefrencesAccordian\n","import React, { Fragment } from 'react'\ninterface IconProps {\n  size?: string\n  color?: string\n  className?: string\n}\n\nconst Star = ({ size, color, className }: IconProps) => {\n  return (\n    <Fragment>\n      <svg\n        width={size || '1rem'}\n        height={size || '1rem'}\n        viewBox='0 0 22 21'\n        fill='none'\n        xmlns='http://www.w3.org/2000/svg'\n        className={className || ''}\n      >\n        <path\n          d='M21.2889 7.3947L14.6938 6.43661L11.7455 0.462178C11.665 0.298601 11.5325 0.166182 11.3689 0.0856924C10.9585 -0.116831 10.4598 0.0519386 10.2546 0.462178L7.30634 6.43661L0.711168 7.3947C0.52934 7.42066 0.363097 7.50635 0.235817 7.63617C0.0819425 7.79426 -0.00284927 8.00694 7.31104e-05 8.22749C0.00299549 8.44803 0.0933929 8.6584 0.251402 8.81236L5.0231 13.4626L3.89576 20.029C3.86932 20.1818 3.88623 20.3389 3.94457 20.4825C4.00291 20.6261 4.10035 20.7505 4.22583 20.8416C4.35131 20.9327 4.49981 20.9869 4.6545 20.9979C4.80919 21.0089 4.96388 20.9764 5.10102 20.904L11.0001 17.8039L16.8991 20.904C17.0601 20.9897 17.2472 21.0183 17.4264 20.9871C17.8784 20.9092 18.1823 20.4808 18.1043 20.029L16.977 13.4626L21.7487 8.81236C21.8786 8.68513 21.9643 8.51896 21.9903 8.33721C22.0604 7.88283 21.7435 7.46221 21.2889 7.3947Z'\n          fill={color || '#D9D9D9'}\n        />\n      </svg>\n    </Fragment>\n  )\n}\n\nexport default Star\n","import React, { Fragment, useState } from 'react'\nimport { useController, useFormContext } from 'react-hook-form'\nimport styled from 'styled-components'\nimport Star from '../svgs/star'\n\ninterface IInput {\n  name: string\n}\n\nconst Rating: React.FC<\n  IInput &\n    React.DetailedHTMLProps<\n      React.InputHTMLAttributes<HTMLInputElement>,\n      HTMLInputElement\n    >\n> = ({ name, ...props }) => {\n  const [hover, setHover] = useState(0)\n\n  const { control } = useFormContext()\n\n  const {\n    field: { onBlur, onChange, value }\n  } = useController({\n    name,\n    control\n  })\n\n  return (\n    <Fragment>\n      <RatingWrapper>\n        {[...Array(5)].map((star, i) => {\n          i += 1\n          return (\n            <IconButton\n              type='button'\n              key={i}\n              colored={i <= (hover || value) ? true : false}\n              onClick={() => onChange(i)}\n              onMouseEnter={() => setHover(i)}\n              onMouseLeave={() => setHover(value)}\n            >\n              <Star size='1.3rem' />\n            </IconButton>\n          )\n        })}\n        <input\n          name={name}\n          value={value}\n          onChange={onChange}\n          onBlur={onBlur}\n          hidden\n          type='number'\n          min={0}\n          max={5}\n          {...props}\n        />\n      </RatingWrapper>\n    </Fragment>\n  )\n}\n\nexport default Rating\n\nconst RatingWrapper = styled.div`\n  display: inline-flex;\n  width: fit-content;\n  user-select: none;\n  height: auto;\n`\n\nconst IconButton = styled.button<{ colored: boolean }>`\n  width: fit-content;\n  display: inline-flex;\n  padding: 0 0.3rem;\n  margin: 0;\n  cursor: pointer;\n  svg {\n    path {\n      ${({ colored, theme }) => colored && `fill: ${theme.colors.primary}`}\n    }\n  }\n`\n","import React, { Fragment } from 'react'\ninterface IconProps {\n  size?: string\n  color?: string\n  className?: string\n}\nconst BulbIcon = ({ size, color, className }: IconProps) => {\n  return (\n    <Fragment>\n      <svg\n        width={size || '1rem'}\n        className={className || ''}\n        height={size || '1rem'}\n        viewBox='0 0 17 17'\n        fill='none'\n        xmlns='http://www.w3.org/2000/svg'\n      >\n        <path\n          d='M5.84375 12.75H11.1562V13.8125H5.84375V12.75Z'\n          fill={color || '#898989'}\n        />\n        <path\n          d='M6.90625 14.875H10.0938V15.9375H6.90625V14.875Z'\n          fill={color || '#898989'}\n        />\n        <path\n          d='M8.49942 1.0625C7.09045 1.0625 5.7392 1.62221 4.74291 2.6185C3.74663 3.61478 3.18692 4.96604 3.18692 6.375C3.15099 7.14708 3.29889 7.91667 3.61845 8.62043C3.93801 9.3242 4.42009 9.94204 5.02504 10.4231C5.55629 10.9172 5.84317 11.1987 5.84317 11.6875H6.90567C6.90567 10.71 6.31598 10.1628 5.74223 9.63687C5.2457 9.25664 4.84998 8.76046 4.58973 8.19179C4.32947 7.62312 4.21262 6.99931 4.24942 6.375C4.24942 5.24783 4.69718 4.16683 5.49421 3.3698C6.29124 2.57277 7.37225 2.125 8.49942 2.125C9.62659 2.125 10.7076 2.57277 11.5046 3.3698C12.3017 4.16683 12.7494 5.24783 12.7494 6.375C12.7856 6.99977 12.6679 7.62388 12.4067 8.19258C12.1455 8.76129 11.7488 9.25722 11.2513 9.63687C10.6829 10.1681 10.0932 10.6994 10.0932 11.6875H11.1557C11.1557 11.1987 11.4372 10.9172 11.9738 10.4178C12.5783 9.93755 13.0602 9.32062 13.3797 8.61778C13.6993 7.91493 13.8474 7.14626 13.8119 6.375C13.8119 5.67735 13.6745 4.98654 13.4075 4.34199C13.1405 3.69745 12.7492 3.11181 12.2559 2.6185C11.7626 2.12518 11.177 1.73387 10.5324 1.46689C9.88788 1.19991 9.19706 1.0625 8.49942 1.0625V1.0625Z'\n          fill={color || '#898989'}\n        />\n      </svg>\n    </Fragment>\n  )\n}\n\nexport default BulbIcon\n","import React, { Fragment } from 'react'\nimport styled from 'styled-components'\nimport Input from '../../../../components/form/Input'\nimport Rating from '../../../../components/form/rating'\nimport BulbIcon from '../../../../components/svgs/bulbIcon'\nimport { useFieldArray, useFormContext } from 'react-hook-form'\nimport { Grid } from '../styled'\nimport FormAccordian from '../../../../components/accordian/formAccordian'\nimport Star from '../../../../components/svgs/star'\nimport {\n  resumeAddItemToAccoridan,\n  resumeDeleteAccordianItem,\n  resumeOpensAccordianItem,\n  resumeToggleAccordian,\n} from '../../../../helpers/resume'\n\ninterface ISkill {\n  title: string\n  rating: number\n}\n\ninterface IDefault {\n  skills: ISkill[]\n}\ninterface IProps {\n  data: any\n  show: boolean\n  setShow: (val: string | null) => void\n  open: string | null\n  setOpen: (val: string | null) => void\n}\n\nconst StarRating = ({ rate }: { rate: number }) => {\n  return (\n    <Fragment>\n      {[...Array(5)].map((star, i) => (\n        <span key={i} style={{ marginRight: '0.2rem' }}>\n          <Star\n            color={i + 1 <= rate ? 'rgba(240,132,56,1)' : '#D9D9D9'}\n            size=\"0.875rem\"\n          />\n        </span>\n      ))}\n    </Fragment>\n  )\n}\n\nconst SkillsFormAccordian: React.FC<IProps> = ({\n  data,\n  show,\n  setShow,\n  open,\n  setOpen,\n}) => {\n  const { skills } = data\n\n  const defaultValues = {\n    title: '',\n    rating: 0,\n  }\n\n  const {\n    control,\n    trigger,\n    formState: { errors },\n  } = useFormContext<IDefault>()\n\n  const { fields, append, remove } = useFieldArray({\n    control,\n    name: 'skills',\n  })\n\n  return (\n    <Fragment>\n      <FormAccordian\n        openIds={open}\n        show={show}\n        onClick={() =>\n          resumeToggleAccordian(\n            'skills',\n            skills,\n            defaultValues,\n            append,\n            show,\n            setShow,\n            setOpen\n          )\n        }\n        title=\"Skills\"\n        icon={<BulbIcon size=\"2rem\" color=\"#343434\" />}\n        isError={!!errors['skills']}\n        length={skills.length}\n      >\n        {fields.map((item, i) => (\n          <Fragment key={item.id}>\n            <FormAccordian.Item\n              title={skills[i].title ? skills[i].title : '(Unknown skill)'}\n              description={\n                skills[i].title && <StarRating rate={skills[i].rating} />\n              }\n              open={open === 'skills.' + i}\n              handleDelete={() => resumeDeleteAccordianItem(remove, i)}\n              handleOpen={() =>\n                resumeOpensAccordianItem(\n                  'references',\n                  i,\n                  trigger,\n                  open,\n                  setOpen\n                )\n              }\n              isError={errors['skills'] && errors['skills'][i] ? true : false}\n            >\n              <Grid>\n                <div>\n                  <Input\n                    name={`skills.${i}.title`}\n                    label=\"Skill\"\n                    className=\"smb\"\n                    isFieldArray={true}\n                  />\n                </div>\n                <div className=\"smb\">\n                  <label>Rate</label>\n                  <RatingWrapper>\n                    <Rating name={`skills.${i}.rating`} />\n                  </RatingWrapper>\n                </div>\n              </Grid>\n            </FormAccordian.Item>\n          </Fragment>\n        ))}\n        <FormAccordian.Footer\n          title={'Add skill'}\n          onClick={() =>\n            resumeAddItemToAccoridan(\n              'skills',\n              fields.length,\n              defaultValues,\n              append,\n              setOpen\n            )\n          }\n        />\n      </FormAccordian>\n    </Fragment>\n  )\n}\n\nexport default SkillsFormAccordian\n\nconst RatingWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 40px;\n`\n","import React, { Fragment, useEffect, useState } from 'react'\nimport { useFormContext } from 'react-hook-form'\nimport { useResume } from '../../../../contexts/resume'\nimport CoursesAccordian from './courses'\nimport EducationAccordian from './education'\nimport Experience from './experience'\nimport InternshipAccordian from './internships'\nimport LanguagesAccordian from './languages'\nimport OtherSection from './otherSection'\nimport RefrencesAccordian from './refrences'\nimport SkillsAccordian from './skills'\n\nconst Step3 = () => {\n  const [showAccordian, setShowAccordian] = useState<string | null>(null)\n  const [showAccordianItem, setShowAccordianItem] = useState<string | null>(\n    null\n  )\n  const [otherFields, setOtherFields] = useState<Array<string>>([])\n\n  const { data } = useResume()\n\n  const {\n    formState: { isSubmitting }\n  } = useFormContext()\n\n  useEffect(() => {\n    if (isSubmitting) {\n      setShowAccordianItem(null)\n    }\n  }, [isSubmitting])\n\n  useEffect(() => {\n    const filledFeilds = []\n\n    if (otherFields.length === 0) {\n      data.courses.length > 0 && filledFeilds.push('courses')\n\n      data.internships.length > 0 && filledFeilds.push('internships')\n\n      data.languages.length > 0 && filledFeilds.push('languages')\n\n      data.references.length > 0 && filledFeilds.push('references')\n    } else {\n      otherFields.map((field) => {\n        ;(data as any)[field].length > 0 && filledFeilds.push(field.toString())\n      })\n    }\n    setOtherFields(filledFeilds)\n  }, [data.courses, data.internships, data.languages, data.references])\n\n  const fields: any = {\n    courses: (\n      <CoursesAccordian\n        data={data}\n        show={showAccordian === 'courses'}\n        setShow={setShowAccordian}\n        open={showAccordianItem}\n        setOpen={setShowAccordianItem}\n      />\n    ),\n\n    internships: (\n      <InternshipAccordian\n        data={data}\n        show={showAccordian === 'internships'}\n        setShow={setShowAccordian}\n        open={showAccordianItem}\n        setOpen={setShowAccordianItem}\n      />\n    ),\n\n    languages: (\n      <LanguagesAccordian\n        data={data}\n        show={showAccordian === 'languages'}\n        setShow={setShowAccordian}\n        open={showAccordianItem}\n        setOpen={setShowAccordianItem}\n      />\n    ),\n    references: (\n      <RefrencesAccordian\n        data={data}\n        show={showAccordian === 'references'}\n        setShow={setShowAccordian}\n        open={showAccordianItem}\n        setOpen={setShowAccordianItem}\n      />\n    )\n  }\n\n  return (\n    <Fragment>\n      <div className='mb-3'>\n        <h2>Your objective</h2>\n        <p className='mb-3' style={{ maxWidth: '525px' }}>\n          This appears near the top of your resume. Impress employers with a\n          strong opening statement that sums up your strengths and experience.\n        </p>\n        <Experience\n          data={data}\n          show={showAccordian === 'experience'}\n          setShow={setShowAccordian}\n          open={showAccordianItem}\n          setOpen={setShowAccordianItem}\n        />\n\n        <EducationAccordian\n          data={data}\n          show={showAccordian === 'education'}\n          setShow={setShowAccordian}\n          open={showAccordianItem}\n          setOpen={setShowAccordianItem}\n        />\n        <SkillsAccordian\n          data={data}\n          show={showAccordian === 'skills'}\n          setShow={setShowAccordian}\n          open={showAccordianItem}\n          setOpen={setShowAccordianItem}\n        />\n        {otherFields.map((field: any, i) => (\n          <div key={i}>{fields[field]}</div>\n        ))}\n\n        {otherFields.length !== 4 && (\n          <OtherSection\n            otherFields={otherFields}\n            setOtherFields={setOtherFields}\n          />\n        )}\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Step3\n","import React, { Fragment, useEffect, useState } from 'react'\nimport { CSSTransition } from 'react-transition-group'\nimport { useFormContext } from 'react-hook-form'\nimport styled, { keyframes } from 'styled-components'\nimport CheckIcon1 from '../../../components/svgs/check1'\nimport { useResume } from '../../../contexts/resume'\nimport { useViewport } from '../../../contexts/viewPort'\nimport { Button } from '../../../styled/button'\nimport { FormButtonWrapper } from '../../../styled/form'\nimport { Spinner } from '../../../styled/loader'\nimport Step1 from './Step1'\nimport Step2 from './step2'\nimport Step3 from './step3'\nimport WarningIcon from '../../../components/svgs/warning'\n\ninterface IProps {\n  step: number\n  setStep: (val: any) => void\n  max: number\n}\n\nconst ResumeStepper: React.FC<IProps> = ({ step, setStep, max }) => {\n  const [submit, setSubmit] = useState(false)\n  const { width } = useViewport()\n  const btnSize = width > 1300 ? 'lg' : 'sm'\n  const {\n    formState: { isSubmitting, isDirty, isValid },\n  } = useFormContext()\n  const { submitResume, submitSuccess } = useResume()\n  const handleNext = async () => {\n    step < max && setStep((prev: number) => prev + 1)\n    return setSubmit(true)\n  }\n  const handlePrev = () => {\n    return step > 1 && setStep((prev: number) => prev - 1)\n  }\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (submit) {\n        if (isDirty) {\n          submitResume(null, step === 3)\n        }\n        setSubmit(false)\n      }\n    }, 1000)\n\n    return () => clearTimeout(timer)\n  }, [submit])\n\n  return (\n    <Fragment>\n      <Wrapper>\n        {step === 1 ? (\n          <Step1 />\n        ) : step === 2 ? (\n          <Step2 />\n        ) : step === 3 ? (\n          <Step3 />\n        ) : null}\n\n        <FormButtonWrapper>\n          <Button\n            type=\"button\"\n            btnType=\"ghost\"\n            size={btnSize}\n            color=\"#343434\"\n            onClick={() => handlePrev()}\n            style={{ marginRight: '1rem' }}\n          >\n            {step === 1 ? 'Cancel' : 'Previous'}\n          </Button>\n          <Button\n            type=\"button\"\n            btnType=\"primary\"\n            size={btnSize}\n            onClick={() => handleNext()}\n            disabled={\n              (isSubmitting || !isValid || !isDirty || submit) && step === 3\n            }\n          >\n            {step === 3 ? 'Save Changes' : 'Next'}\n          </Button>\n        </FormButtonWrapper>\n        <CSSTransition\n          in={isSubmitting && isValid}\n          timeout={{\n            enter: 200,\n            exit: 5000,\n          }}\n        >\n          <Loader>\n            {isSubmitting ? (\n              <Fragment>\n                <Spinner type=\"primary\" size=\"1.5rem\" />\n                <LoadingDots color=\"#f08438\">Saving</LoadingDots>\n              </Fragment>\n            ) : submitSuccess ? (\n              <Fragment>\n                <CheckIcon1 size=\"1.5rem\" color=\"#f08438\" />\n                <p style={{ color: '#f08438', margin: '0 0.7rem' }}>Saved</p>\n              </Fragment>\n            ) : (\n              <Fragment>\n                <WarningIcon size=\"1.5rem\" color=\"#f08438\" />\n                <p style={{ color: '#f08438', margin: '0 0.7rem' }}>Failed</p>\n              </Fragment>\n            )}\n          </Loader>\n        </CSSTransition>\n      </Wrapper>\n    </Fragment>\n  )\n}\n\nexport default ResumeStepper\n\nconst Wrapper = styled.div`\n  padding: 2.75rem;\n  max-width: 900px;\n  margin: auto;\n`\n\nconst Loader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: fit-content;\n  padding: 0 0.5rem;\n  height: 50px;\n  min-width: 50px;\n  transition: ease 300ms;\n  background-color: #fff;\n  border-radius: 1rem;\n  box-shadow: 4px 0px 20px 0px #ddd;\n  border: 1px solid #eee;\n  position: absolute;\n  left: 40px;\n  bottom: 40px;\n  opacity: 0;\n  visibility: hidden;\n\n  &.enter-done,\n  &.enter-active,\n  &.exit-active {\n    opacity: 1;\n    visibility: visible;\n  }\n  &.exit-done {\n    opacity: 0;\n    visibility: hidden;\n  }\n`\n\nconst dots = (color: string) => keyframes`\n   0%, 20% {\n    color: rgba(0,0,0,0);\n    text-shadow:\n      .25em 0 0 rgba(0,0,0,0),\n      .5em 0 0 rgba(0,0,0,0);}\n  40% {\n    color: ${color};\n    text-shadow:\n      .25em 0 0 rgba(0,0,0,0),\n      .5em 0 0 rgba(0,0,0,0);}\n  60% {\n    text-shadow:\n      .25em 0 0 ${color},\n      .5em 0 0 rgba(0,0,0,0);}\n  80%, 100% {\n    text-shadow:\n      .25em 0 0 ${color},\n      .5em 0 0 ${color};\n    }\n    \n`\n\nconst LoadingDots = styled.p<{ color: string }>`\n  display: inline-flex;\n  margin: 0 0.7rem;\n  color: ${({ theme, color }) => (color ? color : theme.colors.dark)};\n  &:after {\n    content: '.';\n    margin-left: 0.1rem;\n    animation: ${({ theme, color }) => dots(color ? color : theme.colors.dark)}\n      1s steps(5, end) infinite;\n  }\n`\n","import React, { Fragment, useEffect } from 'react'\nimport styled from 'styled-components'\nimport HeaderStepper from '../../../components/ui/headerStepper'\nimport { useResume } from '../../../contexts/resume'\nimport Previewer from '../preview'\nimport ResumeStepper from './resumeStepper'\nimport TemplateFormSekleton from '../../../components/ui/tempFormSekleton'\nimport { useFormContext } from 'react-hook-form'\nimport useExitPrompt from '../../../hooks/useExitPromt'\nimport RouterPrompt from '../../../components/routerPrompt'\n\nconst ResumeBuilder = ({ isLoading }: { isLoading: boolean }) => {\n  const { data, step, setStep } = useResume()\n  const { showExitPrompt, setShowExitPrompt } = useExitPrompt(false)\n\n  const {\n    formState: { errors, isDirty, isValid, isSubmitting },\n  } = useFormContext()\n\n  const isErrorStep1 =\n    errors.first_name ||\n    errors.last_name ||\n    errors.phone_number ||\n    errors.email_address ||\n    errors.address ||\n    errors.designation\n      ? true\n      : false\n\n  const isErrorStep2 = errors.about_info ? true : false\n\n  const isErrorStep3 =\n    errors.experience ||\n    errors.education ||\n    errors.skills ||\n    errors.courses ||\n    errors.internships ||\n    errors.languages ||\n    errors.references\n      ? true\n      : false\n\n  const isValidStep1 =\n    data.first_name && data.last_name && data.email_address && !isErrorStep1\n      ? true\n      : false\n\n  const isValidStep2 = !isErrorStep2 ? true : false\n\n  const isValidStep3 =\n    (data.experience ||\n      data.education ||\n      data.skills ||\n      data.courses ||\n      data.internships ||\n      data.languages ||\n      data.references) &&\n    !isErrorStep3\n      ? true\n      : false\n\n  useEffect(() => {\n    return () => setShowExitPrompt(false)\n  }, [])\n\n  useEffect(() => {\n    if (isDirty || !isValid || isSubmitting) {\n      setShowExitPrompt(true)\n    } else {\n      setShowExitPrompt(false)\n    }\n  }, [isDirty, isSubmitting, isValid])\n\n  const paths = data && data.id ? [`/resumes/preview/${data.id}`] : []\n\n  return (\n    <Fragment>\n      <RouterPrompt\n        show={showExitPrompt}\n        setShow={setShowExitPrompt}\n        exludedPaths={paths}\n      />\n      <Wrapper>\n        <HeaderStepper max={3} current={step} backRoute=\"/resumes\">\n          <HeaderStepper.Step\n            name=\"Personal Info\"\n            isValid={isValidStep1}\n            isError={isErrorStep1}\n            onClick={() => setStep(1)}\n          />\n          <HeaderStepper.Step\n            name=\"Tell us about yourself\"\n            isValid={isValidStep2}\n            isError={isErrorStep2}\n            onClick={() => setStep(2)}\n          />\n          <HeaderStepper.Step\n            name=\"Additional Information\"\n            isValid={isValidStep3}\n            isError={isErrorStep3}\n            onClick={() => setStep(3)}\n          />\n        </HeaderStepper>\n\n        <form id=\"resumeForm\" style={{ overflow: 'hidden' }}>\n          <LHS>\n            {isLoading || !data ? (\n              <TemplateFormSekleton />\n            ) : (\n              <ResumeStepper step={step} setStep={setStep} max={3} />\n            )}\n          </LHS>\n\n          <RHS>\n            <Previewer isDataLoading={isLoading} />\n          </RHS>\n        </form>\n      </Wrapper>\n    </Fragment>\n  )\n}\n\nexport default ResumeBuilder\n\nconst Wrapper = styled.div`\n  background-color: #fff;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  padding-top: 7rem;\n`\n\nconst LHS = styled.div`\n  height: 100%;\n  width: 50%;\n  margin-right: 50%;\n  overflow-y: scroll;\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n  &::-webkit-scrollbar {\n    width: 0;\n  }\n`\nconst RHS = styled.div`\n  background-color: #f7f9fc;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  user-select: none;\n  height: 100%;\n  position: fixed;\n  width: 50%;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  overflow: scroll;\n  padding-top: 7rem;\n  @media (max-width: 1500px) {\n    padding-bottom: 2rem;\n    padding-top: 9rem;\n  }\n`\n","import React, { Fragment, useEffect, useRef, useState } from 'react'\nimport { useFormContext } from 'react-hook-form'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport DownArrowIcon from '../../components/svgs/downArrow'\nimport DownloadIcon from '../../components/svgs/download'\nimport DropButton from '../../components/ui/DropButton'\nimport { useResume } from '../../contexts/resume'\nimport { Button } from '../../styled/button'\nimport templateMapper from '../../helpers/templateMapper'\nimport PreviewSkeleton from '../../components/ui/previewSkeleton'\nimport { getAllResumeTemplates } from '../../queries/resumeQueries'\nimport { useViewport } from '../../contexts/viewPort'\nimport { Spinner } from '../../styled/loader'\nimport '../../styled/template_global.css'\n\nconst TemplateViewer = ({ isLoading }: { isLoading: boolean }) => {\n  const [showDownload, setShowDownload] = useState(false)\n  const [isTemplateMapping, setIsTemplateMapping] = useState(false)\n  const [pages, setPages] = useState(1)\n  const [buffer, setBuffer] = useState(0)\n  const [curr, setCurr] = useState(1)\n\n  const {\n    data,\n    isTemplateReady,\n    template,\n    templateData,\n    setTemplate,\n    submitResume,\n    isSaving,\n  } = useResume()\n\n  const { width, height } = useViewport()\n\n  const histroy = useHistory()\n  const {\n    data: templates,\n    isLoading: isTemplateLoading,\n    isError,\n  } = getAllResumeTemplates()\n\n  const ref = useRef<HTMLDivElement>(null)\n\n  const {\n    formState: { isValid },\n  } = useFormContext()\n\n  const scale =\n    width >= 1920\n      ? 1.15\n      : width <= 1080\n      ? (width * 1.4) / 1920\n      : (width * 1.15) / 1920\n\n  useEffect(() => {\n    if (!ref || !ref.current || !templateData) return\n    const page = ref.current.children[0] as HTMLElement\n    page.style.transform = `scale(${scale})`\n    ref.current.style.width = page.getBoundingClientRect().width + 'px'\n    ref.current.style.height = page.getBoundingClientRect().height + 'px'\n    const calcX = (page.clientWidth * (scale - 1)) / 2\n    const calcY = (page.clientHeight * (scale - 1)) / 2\n    page.style.transform = `translate3d(${calcX}px, ${calcY}px, 0px) scale(${scale})`\n    const dummyBufferEl = document.createElement('div')\n    dummyBufferEl.style.height = '50px'\n    dummyBufferEl.style.transform = `scale(${scale})`\n    dummyBufferEl.style.visibility = 'hidden'\n    dummyBufferEl.style.position = 'absolute'\n    dummyBufferEl.style.opacity = '0'\n    document.body.appendChild(dummyBufferEl)\n    const bufferHeight = dummyBufferEl.getBoundingClientRect().height\n    setBuffer(bufferHeight)\n    document.body.removeChild(dummyBufferEl)\n  }, [data, ref, templateData, templates, width, height])\n\n  useEffect(() => {\n    if (\n      !data ||\n      !templates ||\n      isSaving ||\n      isTemplateLoading ||\n      !isTemplateReady ||\n      buffer === 0\n    )\n      return\n    setIsTemplateMapping(true)\n    const timer = setTimeout(() => {\n      if (!ref || !ref.current) return\n      const container = document.querySelector('.rhs_wrapper')\n      container && container.scrollTo(0, 0)\n      const page = ref.current.querySelector('.page')\n      if (!page) return\n      const wrapper = page.children[0] as HTMLElement\n\n      if (!wrapper) return\n      const template = JSON.parse(JSON.stringify(templateData))\n      wrapper.innerHTML = ''\n      const pages = templateMapper(template, data, wrapper, buffer)\n      if (!pages) return\n      updatePages(Object.keys(pages).length)\n      setCurr(1)\n      setIsTemplateMapping(false)\n    }, 500)\n    return () => clearTimeout(timer)\n  }, [\n    data,\n    ref.current,\n    isTemplateLoading,\n    templates,\n    isSaving,\n    isTemplateReady,\n    buffer,\n  ])\n\n  useEffect(() => {\n    if (!ref || !ref.current) return\n    const page = ref.current.querySelector('.page') as HTMLElement\n    if (!page) return\n    const wrapper = page.children[0] as HTMLElement\n    if (!wrapper) return\n    wrapper.style.transform = `translateY(-${page.clientHeight * (curr - 1)}px)`\n    wrapper.style.height = page.clientHeight * curr + 'px'\n  }, [curr, ref.current])\n\n  useEffect(() => {\n    if (isSaving) setShowDownload(false)\n    return\n  }, [isSaving])\n\n  const updatePages = (total: number) => {\n    curr > total && setCurr(total)\n    setPages(total)\n  }\n\n  const handleClick = (type: 'prev' | 'next') => {\n    if (type === 'prev') curr > 1 && curr <= pages && setCurr(curr - 1)\n    if (type === 'next') curr >= 1 && curr < pages && setCurr(curr + 1)\n    return\n  }\n\n  return (\n    <Fragment>\n      <HeadWrapper>\n        <Button\n          btnType=\"ghost\"\n          size=\"lg\"\n          onClick={() => histroy.push(`/resumes/edit/${data.id}`)}\n        >\n          Back to Editor\n        </Button>\n        <div>\n          {!isError && !isTemplateLoading && (\n            <DownloadBtn\n              vertical=\"bottom\"\n              horizontal=\"left\"\n              show={showDownload}\n              setShow={setShowDownload}\n              disabled={isSaving || !isValid}\n            >\n              <DropButton.Button>\n                <Fragment>\n                  {!isSaving ? (\n                    <Fragment>\n                      Download <DownloadIcon />\n                    </Fragment>\n                  ) : (\n                    <Fragment>\n                      Downloading <Spinner size=\"1rem\" />\n                    </Fragment>\n                  )}\n                </Fragment>\n              </DropButton.Button>\n              <DropButton.Item>\n                <a onClick={() => submitResume('pdf')}>Download PDF</a>\n              </DropButton.Item>\n\n              <DropButton.Item>\n                <a onClick={() => submitResume('docx')}>Export to DOCX</a>\n              </DropButton.Item>\n\n              <DropButton.Item>\n                <a onClick={() => submitResume('txt')}>Export to TXT</a>\n              </DropButton.Item>\n            </DownloadBtn>\n          )}\n        </div>\n      </HeadWrapper>\n      {isError ? (\n        <div className=\"align-center\" style={{ height: '40vh' }}>\n          <h3>Failed to load design!</h3>\n        </div>\n      ) : (\n        <Wrapper>\n          <LHS>\n            <TemplateGrid>\n              {templates &&\n                (templates as any).map((item: any, i: string) => (\n                  <Template\n                    key={i}\n                    active={template === item.name}\n                    data-test-id={\n                      template === item.name\n                        ? 'active-template'\n                        : 'inactive-template'\n                    }\n                  >\n                    <div\n                      onClick={() => !isSaving && setTemplate(item.name)}\n                      data-test-id=\"resume-template\"\n                    >\n                      <img src={item.thumbnail} alt=\"\" />\n                    </div>\n                    <p>{item.name}</p>\n                  </Template>\n                ))}\n            </TemplateGrid>\n          </LHS>\n          <RHS>\n            <RHSWrapper className=\"rhs_wrapper\">\n              <PageToggler>\n                <button\n                  type=\"button\"\n                  style={{ transform: 'rotateZ(90deg)' }}\n                  onClick={() => handleClick('prev')}\n                >\n                  <DownArrowIcon size=\"0.75rem\" color=\"#fff\" />\n                </button>\n                <p>\n                  {curr}&nbsp;/&nbsp;{pages}\n                </p>\n                <button\n                  type=\"button\"\n                  style={{ transform: 'rotateZ(270deg)' }}\n                  onClick={() => handleClick('next')}\n                >\n                  <DownArrowIcon size=\"0.75rem\" color=\"#fff\" />\n                </button>\n              </PageToggler>\n\n              <PreviewWrapper>\n                {(!isTemplateReady ||\n                  isLoading ||\n                  !data ||\n                  isTemplateMapping ||\n                  isTemplateLoading) && (\n                  <SkeletonWrapper data-test-id=\"resume_skeleton\">\n                    <PreviewSkeleton scale={scale} />\n                  </SkeletonWrapper>\n                )}\n\n                <TemplateWrapper\n                  ref={ref}\n                  style={\n                    !isTemplateReady ||\n                    isLoading ||\n                    !data ||\n                    isTemplateMapping ||\n                    isTemplateLoading\n                      ? { visibility: 'hidden' }\n                      : { visibility: 'visible' }\n                  }\n                >\n                  <div className=\"page\">\n                    <div style={{ width: '100%' }} />\n                  </div>\n                </TemplateWrapper>\n              </PreviewWrapper>\n            </RHSWrapper>\n          </RHS>\n        </Wrapper>\n      )}\n    </Fragment>\n  )\n}\n\nexport default TemplateViewer\n\nconst Wrapper = styled.div`\n  background-color: #fff;\n  display: grid;\n  grid-template-columns: minmax(400px, 500px) auto;\n  height: 100%;\n  @media (max-width: 1080px) {\n    grid-template-columns: 30% 70%;\n  }\n`\n\nconst SkeletonWrapper = styled.div`\n  position: absolute;\n  z-index: 1;\n`\n\nconst LHS = styled.div`\n  height: 100%;\n  max-height: 100vh;\n  padding: 7rem 2rem 3rem;\n  overflow-y: auto;\n  @media (max-width: 1080px) {\n    padding: 7rem 0 3rem;\n  }\n`\n\nconst RHS = styled.div`\n  background-color: #f7f9fc;\n  user-select: none;\n  max-height: 100vh;\n  overflow: hidden;\n  position: relative;\n`\nconst RHSWrapper = styled.div`\n  display: flex;\n  padding: 7rem 2rem 3rem;\n  height: 100%;\n  width: 100%;\n  margin: 0 auto;\n  overflow-y: scroll;\n  overflow-x: hidden;\n`\nconst PageToggler = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  left: 0;\n  right: 0;\n  margin: auto;\n  max-width: 100px;\n  bottom: 10%;\n  z-index: 10;\n  height: 35px;\n  border-radius: 6px;\n  background-color: ${({ theme }) => theme.colors.primary};\n  p {\n    font-weight: 600;\n  }\n  button {\n    padding-left: 0.7rem;\n    padding-right: 0.7rem;\n    svg {\n      path {\n        stroke-width: 1.5;\n      }\n    }\n  }\n`\n\nconst HeadWrapper = styled.div`\n  display: flex;\n  padding: 1rem 3rem;\n  justify-content: space-between;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  border-bottom: 2px solid #eee;\n  background-color: #fff;\n  z-index: 100;\n`\nconst TemplateGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 1rem;\n  padding: 0 2rem;\n  max-width: 450px;\n  margin: auto;\n  @media (max-width: 1080px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`\nconst Template = styled.div<{ active: boolean }>`\n  div {\n    display: flex;\n    width: 100%;\n    min-height: 250px;\n    background-color: #f7f7f7;\n    outline-style: solid;\n    outline-color: #eee;\n    border-radius: 8px;\n    cursor: pointer;\n    transition: all ease-in-out 150ms;\n    overflow: hidden;\n    outline-width: ${({ active }) => (active ? '2px' : '1px')};\n    outline-color: ${({ theme, active }) => active && theme.shades.primary[2]};\n    img {\n      width: 100%;\n    }\n  }\n  p {\n    font-size: 1rem;\n    color: ${({ theme, active }) => active && theme.colors.primary};\n    font-weight: 600;\n    text-align: center;\n    text-transform: capitalize;\n    transition: all ease-in-out 150ms;\n  }\n  &:hover {\n    div {\n      outline-width: 5px;\n      outline-color: ${({ theme }) => theme.shades.primary[2]};\n    }\n    p {\n      color: ${({ theme }) => theme.colors.primary};\n    }\n  }\n`\n\nconst DownloadBtn = styled(DropButton)`\n  button {\n    background: rgba(240, 132, 56, 1);\n    color: #fff;\n    height: 40px;\n    width: 150px;\n    display: flex;\n    justify-content: space-around;\n    padding: 0 1rem;\n    border-radius: 6px;\n    svg {\n      path {\n        stroke: #fff;\n      }\n    }\n    &:disabled {\n      background-color: ${({ theme }) => theme.colors.grey};\n    }\n  }\n`\nconst PreviewWrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  margin: auto;\n`\n\nconst TemplateWrapper = styled.div`\n  display: block;\n  position: relative;\n  box-shadow: 0px 0px 15px 0px #0000000f;\n  border: 1px solid #eee;\n  border-radius: 10px;\n  overflow: hidden;\n`\n","import React, { Fragment, useEffect, useState } from 'react'\nimport { useQueryClient } from 'react-query'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { newResume } from '../../apis/resume'\nimport { Button } from '../../styled/button'\nimport { Spinner } from '../../styled/loader'\n\nconst NewResume = ({ templateName }: { templateName: string }) => {\n  const [error, setError] = useState(false)\n  const history = useHistory()\n\n  const queryClient = useQueryClient()\n\n  const createNew = async () => {\n    setError(false)\n    const { data, error } = await newResume(templateName)\n    if (data) {\n      queryClient.setQueryData(['resume', data._id], data)\n      history.replace(`/resumes/edit/${data._id}`)\n    }\n    if (error) setError(true)\n  }\n\n  useEffect(() => {\n    createNew()\n  }, [])\n\n  return (\n    <Fragment>\n      <div className=\"flex-center h-100\">\n        {error ? (\n          <ErrWrapper>\n            <h2>Failed to create resume.</h2>\n            <Button btnType=\"primary\" size=\"lg\" onClick={() => createNew()}>\n              Try Again\n            </Button>\n          </ErrWrapper>\n        ) : (\n          <Spinner size=\"2.5rem\" type=\"primary\" />\n        )}\n      </div>\n    </Fragment>\n  )\n}\n\nexport default NewResume\n\nconst ErrWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`\n","import React, { Fragment } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport ResumeProvider from '../../contexts/resume'\nimport { useViewport } from '../../contexts/viewPort'\nimport { Button } from '../../styled/button'\nimport { getResume } from '../../queries/resumeQueries'\nimport PageNotFound from '../404'\nimport ResumeBuilder from './builder'\nimport TemplateViewer from './template-viewer'\nimport NewResume from './createNew'\n\nconst SingleResume = () => {\n  const { id, type } = useParams<{ id: string; type: string }>()\n  const { width } = useViewport()\n  const history = useHistory()\n\n  return (\n    <Fragment>\n      {width < 768 && width !== 0 ? (\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            flexDirection: 'column',\n            height: '90%',\n          }}\n        >\n          <h3 style={{ textAlign: 'center' }}>\n            Builder not available, Please visit desktop site...\n          </h3>\n          <Button\n            btnType=\"primary\"\n            size=\"lg\"\n            style={{\n              width: 'fit-content',\n              padding: '0 1rem',\n              marginTop: '1rem',\n            }}\n            onClick={() => history.push('/')}\n          >\n            Back to Dashboard\n          </Button>\n        </div>\n      ) : width >= 768 ? (\n        <Fragment>\n          {type === 'new' ? (\n            <NewResume templateName={id} />\n          ) : ['edit', 'preview'].indexOf(type) !== -1 ? (\n            <OldResume type={type} id={id} width={width} />\n          ) : (\n            <PageNotFound />\n          )}\n        </Fragment>\n      ) : null}\n    </Fragment>\n  )\n}\n\nexport default SingleResume\n\nconst OldResume = ({\n  type,\n  id,\n  width,\n}: {\n  type: string\n  id: string\n  width: number\n}) => {\n  const {\n    data: initialData,\n    isError,\n    isLoading,\n  }: any = getResume(id, width > 768)\n\n  return (\n    <Fragment>\n      {isError ? (\n        <div className=\"align-center\" style={{ height: '30vh' }}>\n          <h3>Failed to load design!</h3>\n        </div>\n      ) : (\n        <ResumeProvider initialData={initialData} templateName={'template1'}>\n          {type === 'preview' ? (\n            <TemplateViewer isLoading={isLoading} />\n          ) : type === 'edit' ? (\n            <ResumeBuilder isLoading={isLoading} />\n          ) : null}\n        </ResumeProvider>\n      )}\n    </Fragment>\n  )\n}\n"],"names":["size","color","className","Fragment","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","show","children","setShow","Wrapper","styled","theme","shades","dark","months","first_name","Yup","required","max","min","last_name","email_address","email","phoneRegExp","phone_number","test","value","length","designation","address","label","about_info","replaceAll","replace","city","description","isNumeric","str","isNaN","parseFloat","duration","start","splitVal","split","includes","end","experience","of","shape","company","education","institution","degree","skills","title","rating","courses","course","internships","job_title","employer","languages","language","level","references","name","validateResumeFrom","defaultAvatar","blank","orignal","processed","style","rotate","scale","pos","x","y","defaultValues","avatar","contextValues","data","id","isTemplateReady","templateData","template","step","submitSuccess","isSaving","setStep","setTemplate","submitResume","ResumeContext","React","initialData","templateName","useState","cssReady","setCssReady","fontsReady","setFontsReady","queryEnabled","setQueryEnabled","setSubmitSuccess","setIsSaving","setNotify","useNotify","queryClient","useQueryClient","methods","useForm","mode","criteriaMode","resolver","yupResolver","getResumeTemplate","isTemplateLoading","isLoading","handleSubmit","isError","watch","reset","trigger","setValue","formState","isValid","isDirty","useEffect","fields","resumeData","keepDirty","keepIsValid","keepErrors","loadTemplateFonts","loadFonts","fonts","document","old","getElementById","remove","link","createElement","setAttribute","process","head","appendChild","onload","onerror","console","log","currData","hasTextinDescription","type","autoSave","submitForm","submitResumeFrom","heading","message","handleResumeDownload","_id","Provider","useResume","isDataLoading","ref","useRef","pages","setPages","curr","setCurr","buffer","setBuffer","showDownload","setShowDownload","firstLoad","setFirstLoad","useViewport","histroy","useHistory","useFormContext","isSubmitting","top","Math","floor","current","element","querySelector","transform","getBoundingClientRect","calcX","clientWidth","calcY","clientHeight","dummyBufferEl","visibility","position","opacity","body","bufferHeight","removeChild","timer","setTimeout","page","wrapper","JSON","parse","stringify","innerHTML","templateMapper","updatePages","Object","keys","clearTimeout","total","handleClick","SkeletonWrapper","marginTop","PreviewWrapper","TemplateWrapper","PreviewFooter","TemplateBtn","btnType","justifyContent","onClick","push","disabled","PageToggler","DownloadBtn","vertical","horizontal","DropButton","colors","grey","Button","setImage","onDrop","useCallback","acceptedFiles","Promise","all","map","image","file","resolve","Resizer","uri","then","uploadBranchImages","onDropRejected","rejectedFiles","forEach","item","errors","useDropzone","accept","maxFiles","getRootProps","getInputProps","isDragActive","CloseBtn","DropWrapper","primary","canvasElement","img","setScale","setRotate","toggle","setToggle","setPos","loading","setLoading","dropped","setDropped","wrapperRef","editorRef","options","canvas","ctx","getContext","translate","beginPath","lineWidth","strokeStyle","offsetX","offsetY","setLineDash","moveTo","lineTo","selector","undefined","targetValue","rangeTrack","background","handleChange","e","target","parentElement","ActionWrapper","processedCanvas","getImageScaledToCanvas","state","CanvasWrapper","CanvasCorner","Corner","left","right","bottom","Loader","CanvasGrid","border","borderRadius","crossOrigin","onImageReady","onPositionChange","ToggleWrapper","Toggle","active","Controls","Range","RangeTrack","onChange","RangeLabels","steps","rangeThumb","titleVal","setTitleVal","shouldDirty","orignalImage","appendBlobToFromData","TitleWrapper","placeholder","substring","spellCheck","autoComplete","Grid","FlexWrapper","ImgWrapper","src","ToggleButtonsWrapper","deleteResumeAvatar","Input","found","setFound","detectOutsideClick","isOutside","initialItems","filter","i","find","text","toLowerCase","DropdownWrapper","SearchWrapper","ListWrapper","initalData","desc","maxWidth","val","RichTextEditor","FormAccordian","icon","openIds","items","querySelectorAll","activeItem","itemBody","classList","contains","scrollHeight","overflow","HeaderWrapper","Heading","IconWrapper","marginRight","Item","open","handleOpen","handleDelete","FormWrapper","FormHeader","cursor","userSelect","fontSize","marginBottom","ToggleDelete","FormItemBody","Footer","AccFooter","SubGrid","props","currYear","dayjs","format","year","setYear","month","setMonth","inputVal","setInputVal","control","useController","field","onBlur","triggerName","join","num","trim","detect","arr","regex","RegExp","match","reduce","acc","mm","parseInt","toString","m","yyyy","onKeyPress","keyCode","which","PickerWrapper","YearWrapper","prev","subtract","add","MonthsWrapper","Months","handleValue","setOpen","useFieldArray","append","resumeToggleAccordian","resumeDeleteAccordianItem","resumeOpensAccordianItem","isFieldArray","resumeAddItemToAccoridan","maxHeight","formats","modules","toolbar","list","langauge","fillOpacity","clipPath","otherFields","setOtherFields","hover","setHover","RatingWrapper","Array","star","IconButton","colored","onMouseEnter","onMouseLeave","hidden","StarRating","rate","showAccordian","setShowAccordian","showAccordianItem","setShowAccordianItem","filledFeilds","submit","setSubmit","btnSize","handleNext","CSSTransition","in","timeout","enter","exit","LoadingDots","margin","keyframes","dots","useExitPrompt","showExitPrompt","setShowExitPrompt","isErrorStep1","isErrorStep2","isErrorStep3","isValidStep1","isValidStep2","isValidStep3","paths","exludedPaths","backRoute","LHS","RHS","isTemplateMapping","setIsTemplateMapping","getAllResumeTemplates","templates","container","scrollTo","HeadWrapper","TemplateGrid","Template","thumbnail","alt","RHSWrapper","error","setError","history","createNew","newResume","setQueryData","ErrWrapper","useParams","display","alignItems","flexDirection","textAlign","padding","indexOf","OldResume","getResume"],"sourceRoot":""}