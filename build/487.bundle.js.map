{"version":3,"file":"487.bundle.js","mappings":"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","sources":["webpack://user-dashboard/./src/components/ui/downloadBtn.tsx","webpack://user-dashboard/./src/pages/404.tsx","webpack://user-dashboard/./src/pages/resumes/dashboard/templates.tsx","webpack://user-dashboard/./src/pages/resumes/dashboard/my-designs.tsx","webpack://user-dashboard/./src/pages/resumes/dashboard/index.tsx","webpack://user-dashboard/./node_modules/@babel/runtime/helpers/esm/typeof.js"],"sourcesContent":["import React, { Fragment, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useViewport } from '../../contexts/viewPort'\nimport detectOutsideClick from '../../hooks/detectOutsideClick'\nimport DocxIcon from '../svgs/docx'\nimport DownloadIcon from '../svgs/download'\nimport PdfIcon from '../svgs/pdf'\nimport TxtIcon from '../svgs/txt'\ninterface IProps {\n  id: number\n  show: boolean\n  setShow: (id: number | null) => void\n  handlePdf: () => void\n  handleTxt: () => void\n  handleDocx: () => void\n}\nconst DownloadBtn: React.FC<IProps> = ({\n  id,\n  show,\n  setShow,\n  handlePdf,\n  handleTxt,\n  handleDocx,\n}) => {\n  const { isOutside, ref } = detectOutsideClick()\n  const { width } = useViewport()\n  useEffect(() => {\n    if (!show || !isOutside || !ref || !ref.current) return\n    setShow(null)\n  }, [isOutside, ref])\n\n  const handleClick = (itemId: number) => {\n    show ? setShow(null) : setShow(itemId)\n  }\n  return (\n    <Fragment>\n      <Wrapper ref={ref} data-test-id=\"download\">\n        <ToggleBtn onClick={() => handleClick(id)}>\n          <DownloadIcon className=\"stroke\" />\n          <p style={{ fontSize: '.8rem' }}>Download</p>\n        </ToggleBtn>\n        <PopperWrapper open={show}>\n          <Fragment>\n            {width > 480 && <b>Download</b>}\n            <FlexWrapper>\n              <ToggleBtn onClick={handlePdf} data-test-id=\"pdf\">\n                <PdfIcon size=\"1.6rem\" className=\"fill\" />\n                <p>PDF</p>\n              </ToggleBtn>\n              <ToggleBtn onClick={handleDocx} data-test-id=\"docx\">\n                <DocxIcon size=\"1.6rem\" className=\"fill\" />\n                <p>Docx</p>\n              </ToggleBtn>\n              <ToggleBtn onClick={handleTxt} data-test-id=\"txt\">\n                <TxtIcon size=\"1.6rem\" className=\"fill\" />\n                <p>Txt</p>\n              </ToggleBtn>\n            </FlexWrapper>\n          </Fragment>\n        </PopperWrapper>\n      </Wrapper>\n    </Fragment>\n  )\n}\n\nexport default DownloadBtn\n\nconst Wrapper = styled.div`\n  display: block;\n  position: relative;\n`\n\nconst ToggleBtn = styled.div`\n  margin-top: 1rem;\n  text-align: center;\n  cursor: pointer;\n  user-select: none;\n  &:hover {\n    .stroke {\n      path {\n        stroke: ${({ theme }) => theme.colors.primary};\n      }\n    }\n    .fill {\n      path {\n        fill: ${({ theme }) => theme.colors.primary};\n      }\n    }\n    p {\n      color: ${({ theme }) => theme.colors.primary};\n    }\n  }\n\n  p {\n    color: #898989;\n    margin: 0;\n    font-size: 0.7rem;\n    text-align: center;\n  }\n`\nconst PopperWrapper = styled.div<{ open: boolean }>`\n  display: inline-flex;\n  flex-direction: column;\n  width: 230px;\n  text-align: center;\n  border: 1px solid #e2e9f3;\n  box-shadow: 7px 5px 31px rgba(0, 31, 78, 0.15);\n  background-color: #fff;\n  border-radius: 4px;\n  padding: 0.5rem;\n  position: absolute;\n  left: -10px;\n  margin-top: 1rem;\n  transition: transform ease-in-out 200ms, opacity 300ms, visibility 300ms;\n  visibility: ${({ open }) => (open ? 'visible' : 'hidden')};\n  opacity: ${({ open }) => (open ? 1 : 0)};\n  transform: ${({ open }) => (open ? 'scale3d(1, 1 ,1)' : 'scale3d(0, 0 ,0)')};\n  transform-origin: 10% top;\n  z-index: 10;\n  b {\n    font-size: 0.8rem;\n  }\n  &::before {\n    content: '';\n    display: block;\n    width: 12px;\n    height: 12px;\n    background-color: #fff;\n    border-top: 1px solid #e2e9f3;\n    border-left: 1px solid #e2e9f3;\n    position: absolute;\n    top: -6px;\n    left: 10%;\n    transform: rotate(45deg);\n  }\n  @media (max-width: 550px) {\n    width: 160px;\n  }\n  @media (max-width: 400px) {\n    width: 175px;\n  }\n`\n\nconst FlexWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n`\n","import React from 'react'\n\nconst PageNotFound = () => {\n  return (\n    <div className='align-center'>\n      <div>\n        <h3 className='text-center'>This page could not be found</h3>\n      </div>\n    </div>\n  )\n}\n\nexport default PageNotFound\n","import React, { Fragment } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { SK_Wrapper } from '../../../styled/loader'\nimport { getAllResumeTemplates } from '../../../queries/resumeQueries'\n\nconst ResumeTemplates = () => {\n  const { data, isLoading, isError } = getAllResumeTemplates()\n\n  const { type } = useParams<{\n    type: 'all' | 'image' | 'noimage'\n  }>()\n\n  const history = useHistory()\n\n  const filterTemplates = (data: any, type: 'all' | 'image' | 'noimage') => {\n    if (!data) return\n    switch (type) {\n      case 'all':\n        return data\n      case 'image':\n        return data.filter((item: any) => item.image)\n      case 'noimage':\n        return data.filter((item: any) => !item.image)\n\n      default:\n        return []\n    }\n  }\n\n  const templates = data && filterTemplates(data, type)\n\n  return (\n    <Fragment>\n      <Wrapper>\n        {isError ? (\n          <div className=\"align-center\" style={{ height: '30vh' }}>\n            <h3>Failed to load templates!</h3>\n          </div>\n        ) : !templates || isLoading ? (\n          <SK_Wrapper>\n            <GridWrapper>\n              {[...Array(12)].map((item, i) => (\n                <Fragment key={i}>\n                  <SkeletonItem />\n                </Fragment>\n              ))}\n            </GridWrapper>\n          </SK_Wrapper>\n        ) : (\n          <GridWrapper>\n            {templates.map((item: any, i: number) => (\n              <ItemWrapper\n                data-test-id=\"template\"\n                key={i}\n                onClick={() => history.push(`/resumes/new/${item.name}`)}\n              >\n                <Item>\n                  <img src={item.thumbnail} />\n                </Item>\n                <p>{item.name}</p>\n              </ItemWrapper>\n            ))}\n          </GridWrapper>\n        )}\n      </Wrapper>\n    </Fragment>\n  )\n}\n\nexport default ResumeTemplates\n\nconst Wrapper = styled.div`\n  padding: 2rem;\n`\n\nconst GridWrapper = styled.div`\n  display: grid;\n  grid-gap: 3rem 2rem;\n  grid-template-columns: repeat(auto-fill, minmax(230px, 1fr));\n  @media (max-width: 480px) {\n    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n  }\n`\nconst SkeletonItem = styled.div`\n  border-radius: 6px;\n  background-color: #eee;\n  min-height: 325px;\n  min-width: 230px;\n  max-width: 230px;\n  margin: 0 auto;\n  height: 100%;\n  width: 100%;\n  @media (max-width: 480px) {\n    min-height: 225px;\n    min-width: 150px;\n    max-width: 150px;\n  }\n`\nconst Item = styled.div`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  height: fit-content;\n  width: fit-content;\n  min-height: 325px;\n  min-width: 230px;\n  margin: 0 auto;\n  padding: 0;\n  background-color: #eee;\n  transition: ease-in-out 0.15s;\n  outline: 1px solid #eee;\n  border-radius: 6px;\n  box-shadow: 4px 8px 15px 6px #eeeeee78;\n  overflow: hidden;\n  img {\n    width: 100%;\n    height: 100%;\n  }\n  @media (max-width: 480px) {\n    min-height: 225px;\n    min-width: 150px;\n  }\n`\nconst ItemWrapper = styled.div`\n  cursor: pointer;\n  user-select: none;\n  margin: 0 auto;\n\n  p {\n    text-transform: capitalize;\n    width: 100%;\n    text-align: center;\n    font-weight: 700;\n    font-size: 1rem;\n    transition: ease-in-out 0.3s;\n  }\n  &:hover {\n    ${Item} {\n      outline-color: ${({ theme }) => theme.shades.primary[2]};\n      outline-width: 4px;\n    }\n    p {\n      color: ${({ theme }) => theme.colors.primary};\n    }\n  }\n`\n","import React, { Fragment, useState } from 'react'\nimport { useQueryClient } from 'react-query'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport DustBinIcon from '../../../components/svgs/dustbin'\nimport EditIcon from '../../../components/svgs/edit'\nimport PlusIcon from '../../../components/svgs/plus'\nimport DownloadBtn from '../../../components/ui/downloadBtn'\nimport { useViewport } from '../../../contexts/viewPort'\nimport { Button } from '../../../styled/button'\nimport ConfirmationBox from '../../../components/ui/confirmation'\n\nimport { SK_Wrapper, Spinner } from '../../../styled/loader'\nimport { getAllResumes } from '../../../queries/resumeQueries'\nimport { useNotify } from '../../../contexts/notify'\nimport {\n  deleteSigleResume,\n  handleResumeDownload,\n} from '../../../helpers/resume'\n\nconst MyDesigns = () => {\n  const [loading, setLoading] = useState<string | null>(null)\n\n  const [showDownload, setShowDownload] = useState<number | null>(null)\n  const [deleteItemId, setDeleteItemId] = useState<string | null>(null)\n\n  const { data, isError, isLoading }: any = getAllResumes()\n  const { setNotify } = useNotify()\n  const { width } = useViewport()\n  const history = useHistory()\n  const queryClient = useQueryClient()\n\n  const handleDownload = async (\n    id: string,\n    name: string,\n    type: 'pdf' | 'docx' | 'txt'\n  ) => {\n    if (loading) return\n    setLoading(id)\n    setShowDownload(null)\n    await handleResumeDownload(name, id, type, setNotify)\n    setLoading(null)\n  }\n\n  return (\n    <Fragment>\n      {isError ? (\n        <div className=\"align-center\" style={{ height: '30vh' }}>\n          <h3>Failed to load designs!</h3>\n        </div>\n      ) : !data || isLoading ? (\n        <SK_Wrapper>\n          <GridWrapper>\n            {[...Array(12)].map((item, i) => (\n              <Fragment key={i}>\n                <SkeletonItem />\n              </Fragment>\n            ))}\n          </GridWrapper>\n        </SK_Wrapper>\n      ) : (\n        <Fragment>\n          <ConfirmationBox\n            title=\"Delete\"\n            msg=\"Are you sure?\"\n            show={deleteItemId ? true : false}\n          >\n            <Button\n              btnType=\"primary\"\n              size=\"lg\"\n              onClick={() => setDeleteItemId(null)}\n            >\n              Cancel\n            </Button>\n            <Button\n              btnType=\"ghost\"\n              size=\"lg\"\n              onClick={() =>\n                deleteItemId &&\n                deleteSigleResume(\n                  deleteItemId,\n                  data,\n                  loading,\n                  setLoading,\n                  setDeleteItemId,\n                  setNotify,\n                  queryClient\n                )\n              }\n            >\n              Delete\n            </Button>\n          </ConfirmationBox>\n          <GridWrapper\n            style={loading ? { pointerEvents: 'none' } : {}}\n            data-test-id=\"my-designs\"\n          >\n            <CreateNew onClick={() => history.push('/resumes/new')}>\n              {loading === 'create' ? (\n                <Spinner size=\"1.5rem\" type=\"primary\" />\n              ) : (\n                <PlusIcon size=\"1.7rem\" />\n              )}\n              {width > 480 && <p>Create Resume</p>}\n            </CreateNew>\n            {data.map((item: any, i: number) => (\n              <ItemWrapper key={i}>\n                <Item onClick={() => history.push(`resumes/edit/${item._id}`)}>\n                  {item.attachments && item.attachments.thumbnail ? (\n                    <img src={item.attachments.thumbnail} />\n                  ) : (\n                    <img src=\"https://resume-mango.s3.us-east-2.amazonaws.com/public/template-images/resumes/empty/template10.jpg\" />\n                  )}\n                  <Fragment>\n                    {loading === item._id ? (\n                      <Loader>\n                        <Spinner size=\"1.5rem\" type=\"primary\" />\n                      </Loader>\n                    ) : null}\n                  </Fragment>\n                </Item>\n                <ToggleWrapper data-test-id=\"toggle-wrapper\">\n                  <DownloadBtn\n                    id={i}\n                    show={showDownload === i}\n                    setShow={setShowDownload}\n                    handlePdf={() =>\n                      handleDownload(item._id, item.title, 'pdf')\n                    }\n                    handleDocx={() =>\n                      handleDownload(item._id, item.title, 'docx')\n                    }\n                    handleTxt={() =>\n                      handleDownload(item._id, item.title, 'txt')\n                    }\n                  />\n                  <ToggleBtn\n                    data-test-id=\"edit-resume\"\n                    onClick={() => history.push(`resumes/edit/${item._id}`)}\n                  >\n                    <EditIcon />\n                    <p>Edit</p>\n                  </ToggleBtn>\n                  <ToggleBtn\n                    data-test-id=\"delete-resume\"\n                    onClick={() => setDeleteItemId(item._id)}\n                  >\n                    <DustBinIcon />\n                    <p>Delete</p>\n                  </ToggleBtn>\n                </ToggleWrapper>\n              </ItemWrapper>\n            ))}\n          </GridWrapper>\n        </Fragment>\n      )}\n    </Fragment>\n  )\n}\n\nexport default MyDesigns\n\nconst GridWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(230px, 1fr));\n  grid-gap: 3rem 2rem;\n  padding: 2rem;\n  @media (max-width: 600px) {\n    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n  }\n  @media (max-width: 400px) {\n    grid-template-columns: (1, 1fr);\n  }\n`\nconst CreateNew = styled.div`\n  display: flex;\n  cursor: pointer;\n  user-select: none;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  background-color: #fff !important;\n  background-image: url(\"data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' stroke='%23ACACACFF' stroke-width='2' stroke-dasharray='5%2c 8' stroke-dashoffset='0' stroke-linecap='square'/%3e%3c/svg%3e\");\n  max-width: 230px;\n  max-height: 325px;\n  min-height: 325px;\n  min-width: 230px;\n  height: 100%;\n  width: 100%;\n  margin: 0 auto;\n\n  svg {\n    path {\n      fill: #949494;\n      stroke-width: 2.5;\n    }\n  }\n  p {\n    color: #949494;\n    font-size: 0.875rem;\n  }\n  &:hover {\n    svg {\n      path {\n        stroke: ${({ theme }) => theme.colors.primary};\n      }\n    }\n    p {\n      color: ${({ theme }) => theme.colors.primary};\n    }\n  }\n  @media (max-width: 600px) {\n    min-width: 160px;\n    max-width: 160px;\n    min-height: 82%;\n    max-height: 82%;\n  }\n  @media (max-width: 400px) {\n    min-height: 50px;\n    max-height: 50px;\n    max-width: 100%;\n  }\n`\nconst Item = styled.div`\n  display: flex;\n  overflow: hidden;\n  background-color: #f7f7f7;\n  position: relative;\n  margin: 0 auto;\n  transition: ease-in-out 0.3s;\n  min-height: 325px;\n  outline: 8px solid #eee;\n  border-radius: 1px;\n  &:hover {\n    outline-color: ${({ theme }) => theme.shades.primary[3]};\n  }\n  img {\n    width: 100%;\n    height: 100%;\n  }\n  @media (max-width: 600px) {\n    min-height: 225px;\n  }\n  @media (max-width: 400px) {\n    min-width: unset;\n    max-width: unset;\n    min-height: unset;\n    max-height: unset;\n  }\n`\n\nconst ItemWrapper = styled.div`\n  cursor: pointer;\n  user-select: none;\n  min-height: 325px;\n  min-width: 230px;\n  height: 100%;\n  width: 100%;\n  max-width: 175px;\n  margin: 0 auto;\n\n  @media (max-width: 600px) {\n    min-height: 225px;\n    min-width: 150px;\n  }\n`\n\nconst Loader = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  margin: auto;\n  width: 100%;\n  height: 100%;\n  display: block;\n  background-color: #cfcfcf5c;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n`\nconst ToggleBtn = styled.div`\n  margin-top: 1rem;\n  text-align: center;\n  cursor: pointer;\n  user-select: none;\n  &:hover {\n    svg {\n      path {\n        fill: ${({ theme }) => theme.colors.primary};\n      }\n    }\n    p {\n      color: ${({ theme }) => theme.colors.primary};\n    }\n  }\n\n  p {\n    color: #898989;\n    margin: 0;\n    font-size: 0.8rem;\n    text-align: center;\n  }\n`\nconst SkeletonItem = styled.div`\n  border-radius: 6px;\n  background-color: #eee;\n  min-height: 325px;\n  min-width: 230px;\n  max-height: 325px;\n  max-width: 230px;\n  margin: 0 auto;\n  height: 100%;\n  width: 100%;\n  @media (max-width: 600px) {\n    min-height: 225px;\n    min-width: 150px;\n    max-height: 225px;\n    max-width: 150px;\n  }\n`\n","import React, { Fragment } from 'react'\nimport { NavLink, Route, Switch, useRouteMatch } from 'react-router-dom'\nimport DashPageHeader from '../../../components/ui/dashPageHeader'\nimport SubNavBar from '../../../components/ui/subNavbar'\nimport PageNotFound from '../../404'\nimport ResumeTemplates from './templates'\nimport MyDesigns from './my-designs'\n\nconst ResumeDashboard = () => {\n  const { path, url } = useRouteMatch()\n\n  return (\n    <Fragment>\n      <DashPageHeader title=\"Resume Templates\"></DashPageHeader>\n      <SubNavBar>\n        <SubNavBar.Link>\n          <NavLink exact to={`${url}`}>\n            My Designs\n          </NavLink>\n        </SubNavBar.Link>\n        <SubNavBar.Link>\n          <NavLink to={`${url}/templates/all`}>All Templates </NavLink>\n        </SubNavBar.Link>\n        <SubNavBar.Link>\n          <NavLink to={`${url}/templates/image`}>With image</NavLink>\n        </SubNavBar.Link>\n        <SubNavBar.Link>\n          <NavLink to={`${url}/templates/noimage`}>Without image</NavLink>\n        </SubNavBar.Link>\n      </SubNavBar>\n\n      <Switch>\n        <Route exact path={path} component={MyDesigns} />\n\n        <Route\n          exact\n          path={`${path}/templates/:type`}\n          component={ResumeTemplates}\n        />\n\n        <Route component={PageNotFound} />\n      </Switch>\n    </Fragment>\n  )\n}\n\nexport default ResumeDashboard\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}"],"names":["id","show","setShow","handlePdf","handleTxt","handleDocx","detectOutsideClick","isOutside","ref","width","useViewport","useEffect","current","Fragment","Wrapper","ToggleBtn","onClick","className","style","fontSize","PopperWrapper","open","FlexWrapper","size","styled","theme","colors","primary","getAllResumeTemplates","data","isLoading","isError","type","useParams","history","useHistory","templates","filter","item","image","filterTemplates","height","GridWrapper","Array","map","i","SkeletonItem","ItemWrapper","push","name","Item","src","thumbnail","shades","useState","loading","setLoading","showDownload","setShowDownload","deleteItemId","setDeleteItemId","getAllResumes","setNotify","useNotify","queryClient","useQueryClient","handleDownload","handleResumeDownload","title","msg","btnType","deleteSigleResume","pointerEvents","CreateNew","_id","attachments","Loader","ToggleWrapper","useRouteMatch","path","url","exact","to","component","MyDesigns","ResumeTemplates","PageNotFound","_typeof","obj","Symbol","iterator","constructor","prototype"],"sourceRoot":""}